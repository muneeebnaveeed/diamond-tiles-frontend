[{"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/index.js":"1","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/App.js":"2","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/index.js":"3","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/Footer.js":"4","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/ForgotPassword.js":"5","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/LockScreen.js":"6","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Registration.js":"7","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error403.js":"8","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error404.js":"9","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error500.js":"10","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error400.js":"11","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error503.js":"12","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/employees/EmployeeActions.js":"13","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/types/TypeActions.js":"14","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Widget.js":"15","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Login.js":"16","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/products/ProductActions.js":"17","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/sale/AddSale.js":"18","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/purchase/AddPurchase.js":"19","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/customers/CustomerActions.js":"20","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/suppliers/SupplierActions.js":"21","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/index.js":"22","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/suppliers/index.js":"23","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/employees/index.js":"24","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/index.js":"25","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/expenses/index.js":"26","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/dashboard/index.js":"27","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/customers/index.js":"28","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/products/index.js":"29","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/purchase/index.js":"30","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/sale/index.js":"31","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/Ext.js":"32","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/PageTitle.js":"33","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Button.js":"34","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/SpinnerOverlay.js":"35","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/index.js":"36","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/units/index.js":"37","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Pagination.js":"38","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/types/index.js":"39","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/useAlert.js":"40","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/server.js":"41","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Select.js":"42","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/ModalWrapper.js":"43","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/CreatableSelect.js":"44","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/useQuery.js":"45","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/ChatBox.js":"46","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/Header.js":"47","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/NavHader.js":"48","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/SideBar.js":"49","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/salaries/index.js":"50","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/expenseTypes/index.js":"51","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/invoice.js":"52","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/khaata/index.js":"53","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/expenses/ExpenseActions.js":"54","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/store/index.js":"55","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/store/reducers.js":"56","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/store/auth/reducer.js":"57","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/store/auth/actionTypes.js":"58","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/store/auth/actions.js":"59","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/inventory/index.js":"60","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/enums.js":"61","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/purchase/PurchaseInvoice.js":"62","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/sale/SaleInvoice.js":"63"},{"size":269,"mtime":1628750703465,"results":"64","hashOfConfig":"65"},{"size":840,"mtime":1627758461761,"results":"66","hashOfConfig":"65"},{"size":3933,"mtime":1628765739229,"results":"67","hashOfConfig":"65"},{"size":452,"mtime":1627758461770,"results":"68","hashOfConfig":"65"},{"size":1832,"mtime":1627574498519,"results":"69","hashOfConfig":"70"},{"size":2601,"mtime":1627574498519,"results":"71","hashOfConfig":"70"},{"size":5866,"mtime":1628628916009,"results":"72","hashOfConfig":"65"},{"size":778,"mtime":1627574498518,"results":"73","hashOfConfig":"70"},{"size":825,"mtime":1627574498519,"results":"74","hashOfConfig":"65"},{"size":781,"mtime":1627574498519,"results":"75","hashOfConfig":"70"},{"size":755,"mtime":1627574498518,"results":"76","hashOfConfig":"70"},{"size":763,"mtime":1627574498519,"results":"77","hashOfConfig":"70"},{"size":15832,"mtime":1628627828322,"results":"78","hashOfConfig":"65"},{"size":12873,"mtime":1628367826574,"results":"79","hashOfConfig":"65"},{"size":146784,"mtime":1627574498519,"results":"80","hashOfConfig":"70"},{"size":6886,"mtime":1628768798793,"results":"81","hashOfConfig":"65"},{"size":21626,"mtime":1628765847390,"results":"82","hashOfConfig":"65"},{"size":14734,"mtime":1628807799562,"results":"83","hashOfConfig":"65"},{"size":14287,"mtime":1628807606589,"results":"84","hashOfConfig":"65"},{"size":19117,"mtime":1628807606572,"results":"85","hashOfConfig":"65"},{"size":17964,"mtime":1628765864144,"results":"86","hashOfConfig":"65"},{"size":1851,"mtime":1628768335730,"results":"87","hashOfConfig":"65"},{"size":13295,"mtime":1628765860186,"results":"88","hashOfConfig":"65"},{"size":15206,"mtime":1628324531786,"results":"89","hashOfConfig":"65"},{"size":800,"mtime":1627758523597,"results":"90","hashOfConfig":"65"},{"size":13066,"mtime":1628765834080,"results":"91","hashOfConfig":"65"},{"size":18986,"mtime":1628750478017,"results":"92","hashOfConfig":"65"},{"size":12531,"mtime":1628807606573,"results":"93","hashOfConfig":"65"},{"size":13433,"mtime":1628765843155,"results":"94","hashOfConfig":"65"},{"size":15652,"mtime":1628807606575,"results":"95","hashOfConfig":"65"},{"size":16800,"mtime":1628807606575,"results":"96","hashOfConfig":"65"},{"size":76,"mtime":1627574498517,"results":"97","hashOfConfig":"70"},{"size":467,"mtime":1627574498517,"results":"98","hashOfConfig":"65"},{"size":873,"mtime":1627758461767,"results":"99","hashOfConfig":"65"},{"size":469,"mtime":1627758461768,"results":"100","hashOfConfig":"65"},{"size":82,"mtime":1627917705352,"results":"101","hashOfConfig":"65"},{"size":10747,"mtime":1628765871578,"results":"102","hashOfConfig":"65"},{"size":3755,"mtime":1628322583421,"results":"103","hashOfConfig":"65"},{"size":8652,"mtime":1628765867978,"results":"104","hashOfConfig":"65"},{"size":2604,"mtime":1628600851489,"results":"105","hashOfConfig":"65"},{"size":1644,"mtime":1628807924425,"results":"106","hashOfConfig":"65"},{"size":1098,"mtime":1628807606571,"results":"107","hashOfConfig":"65"},{"size":1308,"mtime":1628112456754,"results":"108","hashOfConfig":"65"},{"size":1083,"mtime":1628176069707,"results":"109","hashOfConfig":"65"},{"size":406,"mtime":1628327123295,"results":"110","hashOfConfig":"65"},{"size":1687,"mtime":1628750478015,"results":"111","hashOfConfig":"65"},{"size":3813,"mtime":1628767101140,"results":"112","hashOfConfig":"65"},{"size":1085,"mtime":1627759104828,"results":"113","hashOfConfig":"65"},{"size":4853,"mtime":1628765749843,"results":"114","hashOfConfig":"65"},{"size":5111,"mtime":1628324725137,"results":"115","hashOfConfig":"65"},{"size":8752,"mtime":1628765838306,"results":"116","hashOfConfig":"65"},{"size":4973,"mtime":1628771488016,"results":"117","hashOfConfig":"65"},{"size":13421,"mtime":1628807606574,"results":"118","hashOfConfig":"65"},{"size":9988,"mtime":1628615668027,"results":"119","hashOfConfig":"65"},{"size":373,"mtime":1628725785349,"results":"120","hashOfConfig":"65"},{"size":163,"mtime":1628725792497,"results":"121","hashOfConfig":"65"},{"size":499,"mtime":1628725871005,"results":"122","hashOfConfig":"65"},{"size":62,"mtime":1628725852843,"results":"123","hashOfConfig":"65"},{"size":303,"mtime":1628725846902,"results":"124","hashOfConfig":"65"},{"size":9181,"mtime":1628749504156,"results":"125","hashOfConfig":"65"},{"size":88,"mtime":1628765588486,"results":"126","hashOfConfig":"65"},{"size":4985,"mtime":1628807540323,"results":"127","hashOfConfig":"65"},{"size":4977,"mtime":1628807424427,"results":"128","hashOfConfig":"65"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"i2tggb",{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"131"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},"ws0969",{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"141"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"131"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"131"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"131"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"141"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"131"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"131"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"131"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"131"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"131"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"131"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"131"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"131"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"131"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"131"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"131"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"131"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"131"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"131"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"131"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"131"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"131"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"131"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"131"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"131"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"131"},"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/index.js",[],["284","285","286","287","288"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/App.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/index.js",["289","290","291","292"],"import React, { Suspense } from 'react';\nimport { Else, If, Then } from 'react-if';\nimport { connect } from 'react-redux';\n/// React router dom\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport './chart.css';\nimport { userRoles } from './helpers/enums';\n/// Css\nimport './index.css';\nimport Layout from './layouts';\nimport Customers from './pages/customers';\nimport CustomerActions from './pages/customers/CustomerActions';\nimport Dashboard from './pages/dashboard';\nimport Employees from './pages/employees';\nimport EmployeeActions from './pages/employees/EmployeeActions';\nimport Error404 from './pages/Error404';\nimport Expenses from './pages/expenses';\nimport ExpensesActions from './pages/expenses/ExpenseActions';\nimport Inventory from './pages/inventory';\nimport Khaata from './pages/khaata';\nimport Login from './pages/Login';\nimport Products from './pages/products';\nimport ProductActions from './pages/products/ProductActions';\nimport Purchase from './pages/purchase';\nimport AddPurchase from './pages/purchase/AddPurchase';\n/// Pages\nimport Registration from './pages/Registration';\nimport Sales from './pages/sale';\nimport AddSale from './pages/sale/AddSale';\nimport Suppliers from './pages/suppliers';\nimport SupplierActions from './pages/suppliers/SupplierActions';\nimport TypeActions from './pages/types/TypeActions';\n\nconst protectedRoutes = [\n   { url: 'employees', component: Employees },\n   { url: 'dashboard', component: Dashboard },\n   { url: 'employees/:id', component: EmployeeActions },\n];\n\nconst routes = [\n   /// Deshborad\n   { url: '', component: () => <Redirect to=\"/page-login\" /> },\n   { url: 'page-register', component: Registration, isPublic: true },\n   { url: 'page-login', component: Login, isPublic: true },\n\n   { url: 'customers', component: Customers },\n   { url: 'customers/:id', component: CustomerActions },\n   { url: 'suppliers', component: Suppliers },\n   { url: 'suppliers/:id', component: SupplierActions },\n   { url: 'products', component: Products },\n   { url: 'products/:id', component: ProductActions },\n   { url: 'products/types/:id', component: TypeActions },\n   { url: 'purchase', component: Purchase },\n   { url: 'purchase/add', component: AddPurchase },\n   { url: 'sale', component: Sales },\n   { url: 'sale/add', component: AddSale },\n   { url: 'expenses', component: Expenses },\n   { url: 'expenses/:id', component: ExpensesActions },\n   { url: 'khaata', component: Khaata },\n   { url: 'inventory', component: Inventory },\n];\n\nconst Markup = (props) => (\n   <Suspense fallback={<p>Loading</p>}>\n      <Router>\n         <Switch>\n            <If condition={props.user?.role === userRoles.CASHIER}>\n               <Then>\n                  {routes.map((data, i) => {\n                     const getComponent = () => {};\n                     return (\n                        <Route key={i} exact path={`/${data.url}`}>\n                           <Layout isPublic={data.isPublic}>\n                              <data.component />\n                           </Layout>\n                        </Route>\n                     );\n                  })}\n               </Then>\n               <Else>\n                  {[...routes, ...protectedRoutes].map((data, i) => {\n                     const getComponent = () => {};\n                     return (\n                        <Route key={i} exact path={`/${data.url}`}>\n                           <Layout isPublic={data.isPublic}>\n                              <data.component />\n                           </Layout>\n                        </Route>\n                     );\n                  })}\n               </Else>\n            </If>\n\n            <Route component={Error404} />\n         </Switch>\n      </Router>\n   </Suspense>\n);\n\nconst mapStateToProps = ({ auth }) => ({\n   user: auth.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Markup);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/Footer.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/ForgotPassword.js",[],["293","294","295","296","297"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/LockScreen.js",["298"],"import React, { useState } from 'react';\r\n\r\nconst LockScreen = () => {\r\n   const [lockScreenData, setLockScreenData] = useState({});\r\n   const handleBlur = (e) => {\r\n      const newLockScreenData = { ...lockScreenData };\r\n      newLockScreenData[e.target.name] = e.target.value;\r\n      setLockScreenData(newLockScreenData);\r\n   };\r\n   const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      const unlock = { ...lockScreenData };\r\n   };\r\n   return (\r\n      <div className=\"authincation\">\r\n         <div className=\"container p-0\">\r\n            <div className=\"row justify-content-center align-items-center authincation-page-area\">\r\n               <div className=\"col-lg-6 col-md-9\">\r\n                  <div className=\"authincation-content\">\r\n                     <div className=\"row no-gutters\">\r\n                        <div className=\"col-xl-12\">\r\n                           <div className=\"auth-form\">\r\n                              <h4 className=\"text-center mb-4\">Account Locked</h4>\r\n                              <form action=\"\" onSubmit={(e) => e.preventDefault(submitHandler)}>\r\n                                 <div className=\"form-group\">\r\n                                    <label htmlFor=\"lock-screen-password\">\r\n                                       <strong>Password</strong>\r\n                                    </label>\r\n                                    <input\r\n                                       id=\"lock-screen-password\"\r\n                                       type=\"password\"\r\n                                       className=\"form-control\"\r\n                                       defaultValue=\"Password\"\r\n                                       name=\"password\"\r\n                                       onChange={handleBlur}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"text-center\">\r\n                                    <button\r\n                                       type=\"submit\"\r\n                                       className=\"btn btn-primary btn-block\"\r\n                                       onClick={() => submitHandler}\r\n                                    >\r\n                                       Unlock\r\n                                    </button>\r\n                                 </div>\r\n                              </form>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default LockScreen;\r\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Registration.js",["299"],"import { post } from 'jsx/helpers';\r\nimport React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { When } from 'react-if';\r\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\r\n\r\nconst Register = () => {\r\n   const history = useHistory();\r\n\r\n   const [registrationData, setRegistrationData] = useState({});\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const handleBlur = (e) => {\r\n      const newRegistrationData = { ...registrationData };\r\n      newRegistrationData[e.target.name] = e.target.value;\r\n      setRegistrationData(newRegistrationData);\r\n   };\r\n   const handleRegister = async (e) => {\r\n      e.preventDefault();\r\n      setIsLoading(true);\r\n      try {\r\n         const res = await post('/auth/register', registrationData);\r\n         setIsLoading(false);\r\n         // localStorage.setItem('auth_token', res.token);\r\n         history.push('/page-login');\r\n      } catch (err) {\r\n         setIsLoading(false);\r\n         alert(err.response?.data?.data ?? err.message);\r\n      }\r\n   };\r\n   return (\r\n      <>\r\n         <When condition={isLoading}>\r\n            <SpinnerOverlay />\r\n         </When>\r\n         <div className=\"authincation\">\r\n            <div className=\"container p-0\">\r\n               <div className=\"row justify-content-center align-items-center tw-h-screen\">\r\n                  <div className=\"col-lg-6 col-md-9\">\r\n                     <div className=\"authincation-content\">\r\n                        <div className=\"row no-gutters\">\r\n                           <div className=\"col-xl-12\">\r\n                              <div className=\"auth-form\">\r\n                                 <h4 className=\"text-center mb-4\">Sign up your account</h4>\r\n                                 <form action=\"\" onSubmit={handleRegister}>\r\n                                    <div className=\"form-group\">\r\n                                       <label className=\"mb-1\" htmlFor=\"registration-username\">\r\n                                          <strong>Username</strong>\r\n                                       </label>\r\n                                       <input\r\n                                          id=\"registration-username\"\r\n                                          type=\"text\"\r\n                                          className=\"form-control\"\r\n                                          name=\"name\"\r\n                                          onChange={handleBlur}\r\n                                       />\r\n                                    </div>\r\n                                    {/* <div className=\"form-group\">\r\n                                    <label className=\"mb-1\" htmlFor=\"registration-email\">\r\n                                       <strong>Email</strong>\r\n                                    </label>\r\n                                    <input\r\n                                       id=\"registration-email\"\r\n                                       type=\"email\"\r\n                                       className=\"form-control\"\r\n                                       placeholder=\"hello@example.com\"\r\n                                       name=\"Email\"\r\n                                       onChange={handleBlur}\r\n                                    />\r\n                                 </div> */}\r\n                                    <div className=\"form-group\">\r\n                                       <label className=\"mb-1\" htmlFor=\"registration-password\">\r\n                                          <strong>Password</strong>\r\n                                       </label>\r\n                                       <input\r\n                                          id=\"registration-password\"\r\n                                          type=\"password\"\r\n                                          className=\"form-control\"\r\n                                          name=\"password\"\r\n                                          onChange={handleBlur}\r\n                                       />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                       <label className=\"mb-1\" htmlFor=\"registration-password\">\r\n                                          <strong>Password</strong>\r\n                                       </label>\r\n                                       <input\r\n                                          id=\"registration-password\"\r\n                                          type=\"password\"\r\n                                          className=\"form-control\"\r\n                                          name=\"passwordConfirm\"\r\n                                          onChange={handleBlur}\r\n                                       />\r\n                                    </div>\r\n                                    <div className=\"text-center mt-4\">\r\n                                       <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                                          Sign me up\r\n                                       </button>\r\n                                    </div>\r\n                                 </form>\r\n                                 <div className=\"new-account mt-3\">\r\n                                    <p>\r\n                                       Already have an account?{' '}\r\n                                       <Link className=\"text-primary\" to=\"/page-login\">\r\n                                          Sign in\r\n                                       </Link>\r\n                                    </p>\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Register;\r\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error403.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error404.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error500.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error400.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error503.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/employees/EmployeeActions.js",["300","301","302","303","304","305","306","307"],"import useUrlState from '@ahooksjs/use-url-state';\nimport { useDebounce } from 'ahooks';\nimport { useFormik } from 'formik';\nimport Button from 'jsx/components/Button';\nimport Pagination from 'jsx/components/Pagination';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, patch, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ButtonGroup, Card, Table, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { AiFillCaretLeft, AiFillSave, AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\nimport { Else, If, Then, When } from 'react-if';\nimport { useHistory, useParams } from 'react-router-dom';\nimport _ from 'lodash';\n\nconst EmployeeActions = () => {\n   const history = useHistory();\n   const params = useParams();\n   const [employee, setEmployee] = useState(null);\n   const [isError, setIsError] = useState(false);\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [sort, setSort] = useState({ field: null, order: 1 });\n   const [search, setSearch] = useState('');\n   const debouncedSearchValue = useDebounce(search, { wait: 500 });\n\n   const [urlState, setUrlState] = useUrlState({});\n\n   const alert = useAlert();\n   const isEditing = useMemo(() => urlState?.type === 'edit', [urlState.type]);\n   const isViewEmployee = useMemo(() => urlState?.type === 'view', [urlState.type]);\n   const isAddEmployee = useMemo(() => params?.id === 'add', [params.id]);\n\n   const query = useQuery(['employee', params.id], () => get(`/employees/id/${params.id}`), {\n      enabled: !isAddEmployee,\n      onError: (err) => {\n         setIsError(true);\n         alert.setErrorAlert({\n            message: 'Invalid URL!',\n            err: { message: ['The page will redirect to manage employees.'] },\n            callback: () => history.push('/employees'),\n            duration: 3000,\n         });\n      },\n   });\n   const patchMutation = useMutation((payload) => patch(`/employees/id/${params.id}`, payload), {\n      onError: (err) => {\n         alert.setErrorAlert({\n            message: 'Unable to edit employee.',\n            err,\n         });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/employees', payload), {\n      onSuccess: () => {\n         history.push('/employees');\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add employee', err });\n      },\n   });\n\n   const mutation = useMemo(() => (isEditing ? patchMutation : postMutation), [isEditing, patchMutation, postMutation]);\n\n   if (!isEditing && !isViewEmployee && !isAddEmployee) {\n      history.push('/employees');\n   }\n\n   const formik = useFormik({\n      initialValues: {\n         name: isEditing ? employee?.name : '',\n         phone: isEditing ? employee?.phone : '',\n         cnic: isEditing ? employee?.cnic : '',\n         address: isEditing ? employee?.address : '',\n         salary: isEditing ? employee?.salary : '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         mutation.mutate(values);\n      },\n   });\n   const handleSort = (key) => {\n      setSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n   useEffect(() => {\n      if (isEditing && query.data) {\n         formik.setFieldValue('name', query.data?.employee?.name ?? '');\n         formik.setFieldValue('phone', query.data?.employee?.phone ?? '');\n         formik.setFieldValue('cnic', query.data?.employee?.cnic ?? '');\n         formik.setFieldValue('address', query.data?.employee?.address ?? '');\n         formik.setFieldValue('salary', query.data?.employee?.salary ?? '');\n      }\n   }, [isEditing, query.data]);\n   useEffect(() => {\n      if (page > query.data?.sales?.totalPages) {\n         setPage((prev) => prev - 1);\n      }\n   }, [page, query.data?.sales?.totalPages]);\n   return (\n      <>\n         <PageTItle activeMenu=\"employees\" motherMenu=\"Manage\" />\n         {alert.getAlert()}\n         <Card>\n            <When condition={patchMutation.isLoading || postMutation.isLoading || query.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <If condition={isAddEmployee || isEditing}>\n               <Then>\n                  <form onSubmit={formik.handleSubmit}>\n                     <Card.Header>\n                        <Card.Title>{isEditing ? 'Edit Employee' : 'Add New Employee'}</Card.Title>\n                     </Card.Header>\n                     <Card.Body>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Name</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"name\"\n                                 disabled={isError}\n                                 value={formik.values.name}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Phone</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"phone\"\n                                 disabled={isError}\n                                 value={formik.values.phone}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">CNIC</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"cnic\"\n                                 disabled={isError}\n                                 value={formik.values.cnic}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Address</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"address\"\n                                 disabled={isError}\n                                 value={formik.values.address}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Salary</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"salary\"\n                                 disabled={isError}\n                                 value={formik.values.salary}\n                              />\n                           </div>\n                        </div>\n                     </Card.Body>\n                     <Card.Footer>\n                        <div className=\"row\">\n                           <div className=\"col-xl-12 tw-justify-center\">\n                              <ButtonGroup>\n                                 <Button\n                                    icon={AiFillCaretLeft}\n                                    variant=\"warning light\"\n                                    onClick={() => history.replace('/employees')}\n                                    loading={mutation.isLoading}\n                                 >\n                                    Back\n                                 </Button>\n                                 <Button\n                                    icon={AiFillSave}\n                                    variant=\"primary\"\n                                    type=\"submit\"\n                                    loading={mutation.isLoading}\n                                    disabled={isError}\n                                 >\n                                    Save\n                                 </Button>\n                              </ButtonGroup>\n                           </div>\n                        </div>\n                     </Card.Footer>\n                  </form>\n               </Then>\n               <Else>\n                  <Card.Header>\n                     <Card.Title>View Employee</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Name</label>\n                           <h4>{query.data?.employee?.name}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Phone</label>\n                           <h4>{query.data?.employee?.phone}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">CNIC</label>\n                           <h4>{query.data?.employee?.cnic}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Address</label>\n                           <h4>{query.data?.employee?.address}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Salary</label>\n                           <h4>{query.data?.employee?.salary}</h4>\n                        </div>\n                     </div>\n                  </Card.Body>\n                  <Card.Footer>\n                     <div className=\"row\">\n                        <div className=\"col-xl-12 tw-justify-center\">\n                           <Button\n                              icon={AiFillCaretLeft}\n                              variant=\"warning light\"\n                              onClick={() => history.replace('/employees')}\n                              loading={mutation.isLoading}\n                           >\n                              Back\n                           </Button>\n                        </div>\n                     </div>\n                  </Card.Footer>\n               </Else>\n            </If>\n         </Card>\n         <When condition={isViewEmployee}>\n            <Card>\n               <When condition={query.isLoading}>\n                  <SpinnerOverlay />\n               </When>\n               <Card.Header>\n                  <Card.Title>View Related Salaries</Card.Title>\n               </Card.Header>\n               <Card.Body>\n                  <If condition={query.data?.salaries?.totalDocs > 0}>\n                     <Then>\n                        <Table className=\"tw-relative\" responsive>\n                           <thead>\n                              <tr>\n                                 <th className=\"width80\">\n                                    <strong>#</strong>\n                                 </th>\n                                 {/* <th>\n                                 <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('employee')}>\n                                    EMPLOYEE\n                                    <span>\n                                       <When condition={sort.field !== 'employee'}>\n                                          <FaSort className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'employee' && sort.order === -1}>\n                                          <FaSortDown className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'employee' && sort.order === 1}>\n                                          <FaSortUp className=\"d-inline mx-1\" />\n                                       </When>\n                                    </span>\n                                 </strong>\n                              </th> */}\n                                 <th>\n                                    <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('salary')}>\n                                       SALARY\n                                       <span>\n                                          <When condition={sort.field !== 'salary'}>\n                                             <FaSort className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When condition={sort.field === 'salary' && sort.order === -1}>\n                                             <FaSortDown className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When condition={sort.field === 'salary' && sort.order === 1}>\n                                             <FaSortUp className=\"d-inline mx-1\" />\n                                          </When>\n                                       </span>\n                                    </strong>\n                                 </th>\n                              </tr>\n                           </thead>\n                           <tbody>\n                              {query.data?.salaries?.docs?.map((e, index) => (\n                                 <tr key={`${e._id}`}>\n                                    <td>\n                                       <strong>{index + 1}</strong>\n                                    </td>\n                                    {/* <td>{e?.employee?.name ?? 'N/A'}</td> */}\n                                    <td>{e?.employee?.salary ?? 'N/A'}</td>\n                                 </tr>\n                              ))}\n                           </tbody>\n                        </Table>\n                     </Then>\n                     <Else>\n                        <When condition={!query.isLoading}>\n                           <p className=\"tw-m-0\">No Salaries created</p>\n                        </When>\n                     </Else>\n                  </If>\n               </Card.Body>\n            </Card>\n         </When>\n         <When condition={limit > 5 ? true : query.data?.salaries?.totalPages > 1}>\n            <Pagination\n               page={page}\n               onPageChange={setPage}\n               onLimitChange={setLimit}\n               {..._.omit(query.data?.salaries, ['docs'])}\n               isLimitDisabled={query.isLoading}\n            />\n         </When>\n      </>\n   );\n};\n\nexport default EmployeeActions;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/types/TypeActions.js",["308","309","310","311","312","313","314","315"],"import { useDebounce } from 'ahooks';\nimport Button from 'jsx/components/Button';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, useAlert, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport React, { useState, useEffect } from 'react';\nimport { Card, ButtonGroup, Table, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { When, If, Else, Then } from 'react-if';\nimport { useHistory, useParams } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport {\n   AiFillDelete,\n   AiFillEdit,\n   AiFillEye,\n   AiFillPlusCircle,\n   AiOutlineQuestionCircle,\n   AiFillCaretLeft,\n} from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\n\nconst TypeActions = () => {\n   dayjs.extend(relativeTime);\n\n   const history = useHistory();\n   const params = useParams();\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [sort, setSort] = useState({ field: null, order: -1 });\n   const [search, setSearch] = useState('');\n   const debouncedSearchValue = useDebounce(search, { wait: 500 });\n   const alert = useAlert();\n\n   const query = useQuery(\n      ['type', params.id, page, limit, sort.field, sort.order, debouncedSearchValue],\n      () => get(`/types/id/${params.id}`, page, limit, sort.field, sort.order, debouncedSearchValue),\n      {\n         onError: (err) => {\n            alert.setErrorAlert({\n               message: 'Invalid URL!',\n               err: { message: ['The page will redirect to manage products.'] },\n               callback: () => history.push('/products'),\n               duration: 3000,\n            });\n         },\n      }\n   );\n\n   const handleOnClickEdit = (obj) => {\n      history.push({ pathname: `/products/${obj._id}`, search: `?type=edit` });\n   };\n\n   const handleOnClickView = (obj) => {\n      history.push({ pathname: `/products/${obj._id}`, search: `?type=view` });\n   };\n   const handleOnClickAdd = () => {\n      history.push('/products/add');\n   };\n\n   const handleSort = (key) => {\n      setSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n\n   useEffect(() => {\n      if (page > query.data?.totalPages) {\n         setPage((prev) => prev - 1);\n      }\n   }, [page, query.data?.totalPages]);\n   return (\n      <>\n         <div className=\"row p-0 m-0\">\n            <div className=\"col-10\">\n               <PageTItle activeMenu=\"Type\" motherMenu=\"Products\" />\n            </div>\n            <div className=\"col-1\">\n               <Button\n                  icon={AiFillCaretLeft}\n                  variant=\"warning light\"\n                  onClick={() => history.goBack()}\n                  loading={query.isLoading}\n               >\n                  Back\n               </Button>\n            </div>\n         </div>\n         {alert.getAlert()}\n         <div className=\"row mb-3\">\n            <div className=\"col-xl-5 my-2\">\n               <Card className=\"h-100\">\n                  <When condition={query.isLoading}>\n                     <SpinnerOverlay />\n                  </When>\n\n                  <Card.Header>\n                     <Card.Title>View Type</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Title</label>\n                           <h4>{query.data?.type?.title ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </div>\n            <div className=\"col-xl-7 my-2\">\n               <Card className=\"h-100\">\n                  <When condition={query.isLoading}>\n                     <SpinnerOverlay />\n                  </When>\n\n                  <Card.Header>\n                     <Card.Title>View Units</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Table className=\"tw-relative\" responsive>\n                        <thead>\n                           <tr>\n                              <th className=\"width80\">\n                                 <strong>#</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\">TITLE</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\">VALUE</strong>\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {query.data?.units?.map((e, index) => (\n                              <tr key={`${e._id}`}>\n                                 <td>\n                                    <strong>{index + 1}</strong>\n                                 </td>\n                                 <td>{e.title}</td>\n                                 <td>{e.value}</td>\n                                 <td>\n                                    <OverlayTrigger\n                                       trigger={['hover', 'hover']}\n                                       placement=\"top\"\n                                       overlay={\n                                          <Popover className=\"tw-border-gray-500\">\n                                             <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                   ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                   : dayjs(e.createdAt).fromNow()\n                                             }.`}</Popover.Content>\n                                          </Popover>\n                                       }\n                                    >\n                                       <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                    </OverlayTrigger>\n                                 </td>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </Table>\n                  </Card.Body>\n               </Card>\n            </div>\n         </div>\n\n         {/* VIEW PRODUCTS */}\n         <Card>\n            <When condition={query.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <Card.Header>\n               <Card.Title>View Products</Card.Title>\n               <ButtonGroup className=\"tw-float-right\">\n                  <input\n                     type=\"text\"\n                     className=\"input-rounded tw-pl-6 tw-shadow-inner tw-ring-1 py-1\"\n                     placeholder=\"Search products...\"\n                     onChange={(e) => setSearch(e.target.value)}\n                  />\n               </ButtonGroup>\n            </Card.Header>\n            <Card.Body>\n               <If condition={query.data?.products?.totalDocs > 0}>\n                  <Then>\n                     <Table className=\"tw-relative\" responsive>\n                        <thead>\n                           <tr>\n                              <th className=\"width80\">\n                                 <strong>#</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('title')}>\n                                    TITLE\n                                    <span>\n                                       <When condition={sort.field !== 'title'}>\n                                          <FaSort className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'title' && sort.order === -1}>\n                                          <FaSortDown className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'title' && sort.order === 1}>\n                                          <FaSortUp className=\"d-inline mx-1\" />\n                                       </When>\n                                    </span>\n                                 </strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('modelNumber')}>\n                                    MODEL#\n                                    <span>\n                                       <When condition={sort.field !== 'modelNumber'}>\n                                          <FaSort className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'modelNumber' && sort.order === -1}>\n                                          <FaSortDown className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'modelNumber' && sort.order === 1}>\n                                          <FaSortUp className=\"d-inline mx-1\" />\n                                       </When>\n                                    </span>\n                                 </strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('type')}>\n                                    TYPE\n                                    <span>\n                                       <When condition={sort.field !== 'type'}>\n                                          <FaSort className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'type' && sort.order === -1}>\n                                          <FaSortDown className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'type' && sort.order === 1}>\n                                          <FaSortUp className=\"d-inline mx-1\" />\n                                       </When>\n                                    </span>\n                                 </strong>\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {query.data?.products?.docs.map((e, index) => (\n                              <tr key={`${e._id}`}>\n                                 <td>\n                                    <strong>{query.data?.products?.pagingCounter * (index + 1)}</strong>\n                                 </td>\n                                 <td>{e.title}</td>\n                                 <td>{e.modelNumber}</td>\n                                 <td>{(e.type && e.type?.title) ?? 'N/A'}</td>\n                                 <td>\n                                    <OverlayTrigger\n                                       trigger={['hover', 'hover']}\n                                       placement=\"top\"\n                                       overlay={\n                                          <Popover className=\"tw-border-gray-500\">\n                                             <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                   ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                   : dayjs(e.createdAt).fromNow()\n                                             }.`}</Popover.Content>\n                                          </Popover>\n                                       }\n                                    >\n                                       <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                    </OverlayTrigger>\n                                 </td>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </Table>\n                  </Then>\n                  <Else>\n                     <When condition={!query.isLoading && !debouncedSearchValue}>\n                        <p className=\"tw-m-0\">No products created</p>\n                     </When>\n                     <When condition={!query.isLoading && debouncedSearchValue}>\n                        <p className=\"tw-m-0\">No result found!</p>\n                     </When>\n                  </Else>\n               </If>\n            </Card.Body>\n         </Card>\n      </>\n   );\n};\n\nexport default TypeActions;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Widget.js",["316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342"],"/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { Fragment, Suspense, lazy } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Dropdown, Tab, Nav } from 'react-bootstrap';\nimport { Sparklines, SparklinesLine, SparklinesBars } from 'react-sparklines';\nimport PageTitle from '../layouts/PageTitle';\n\n/// Scroll\n\nimport avatar1 from '../../images/avatar/1.jpg';\nimport avatar2 from '../../images/avatar/2.jpg';\nimport avatar3 from '../../images/avatar/3.jpg';\nimport avatar4 from '../../images/avatar/4.jpg';\nimport profile from '../../images/profile/profile.png';\nimport bg5 from '../../images/big/img5.jpg';\nimport bg1 from '../../images/big/img1.jpg';\nimport Pie from '../components/charts/Chartjs/pie';\nimport BarChart from '../components/charts/chartflot/Bar';\n\nimport LineChart from '../components/charts/Chartjs/line3';\nimport LineChart4 from '../components/charts/Chartjs/line4';\nimport LineChart6 from '../components/charts/Chartjs/line6';\nimport BarChartNoPadding from '../components/charts/rechart/BarChartNoPadding';\nimport { SparkNagetivePositive } from '../components/charts/Sparkline/NagetivePositive';\nimport BarChart2 from '../components/charts/Chartjs/bar2';\nimport BarChart3 from '../components/charts/Chartjs/bar3';\nimport LiveBar from '../components/charts/Chartjs/bar4';\n\nimport RealTime from '../components/charts/Chartjs/realtime';\n\nconst sampleData = [10, 24, 30, 10, 15, 0, 20, 30, 65, 12, 10, 6];\n\nconst Ext = lazy(() => import('../layouts/Ext'));\n\nconst Widget = () => (\n   <>\n      {/* <Ext /> */}\n      <PageTitle activeMenu=\"Statistics\" motherMenu=\"Widget\" />\n      <div className=\"row\">\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Timeline</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar id=\"DZ_W_TimeLine\" className=\"widget-timeline dz-scroll height370 ps ps--active-y\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-badge primary\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>10 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 Youtube, a video-sharing website, goes live{' '}\n                                 <strong className=\"text-primary\">$500</strong>.\n                              </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge info\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 New order placed <strong className=\"text-info\">#XF-2356.</strong>\n                              </h6>\n                              <p className=\"mb-0\">Quisque a consequat ante Sit amet magna at volutapt...</p>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge danger\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>30 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 john just buy your product <strong className=\"text-warning\">Sell $250</strong>\n                              </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge success\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>15 minutes ago</span>\n                              <h6 className=\"mb-0\">StumbleUpon is acquired by eBay. </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge warning\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">Mashable, a news website and blog, goes live.</h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge dark\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">Mashable, a news website and blog, goes live.</h6>\n                           </a>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Timeline 2</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar\n                     id=\"DZ_W_TimeLine1\"\n                     className=\"widget-timeline dz-scroll style-1 height370 ps ps--active-y\"\n                  >\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-badge primary\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>10 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 Youtube, a video-sharing website, goes live{' '}\n                                 <strong className=\"text-primary\">$500</strong>.\n                              </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge info\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 New order placed <strong className=\"text-info\">#XF-2356.</strong>\n                              </h6>\n                              <p className=\"mb-0\">Quisque a consequat ante Sit amet magna at volutapt...</p>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge danger\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>30 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 john just buy your product <strong className=\"text-warning\">Sell $250</strong>\n                              </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge success\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>15 minutes ago</span>\n                              <h6 className=\"mb-0\">StumbleUpon is acquired by eBay. </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge warning\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">Mashable, a news website and blog, goes live.</h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge dark\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">Mashable, a news website and blog, goes live.</h6>\n                           </a>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-header  border-0 pb-0\">\n                  <h4 className=\"card-title\">Notifications</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar id=\"DZ_W_Todo1\" className=\"widget-media dz-scroll height370 ps ps--active-y\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-info\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Resport created successfully</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-success\">\n                                 <i className=\"fa fa-home\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-danger\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Resport created successfully</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle\n                                    type=\"button\"\n                                    className=\"btn btn-danger light sharp\"\n                                    data-toggle=\"dropdown\"\n                                 >\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-primary\">\n                                 <i className=\"fa fa-home\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card border-0 pb-0\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Notifications 2</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar id=\"DZ_W_Todo2\" className=\"widget-media dz-scroll height370 ps ps--active-y\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-info\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Resport created successfully <span className=\"badge badge-warning\">Warning</span>\n                                 </h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-success\">\n                                 <i className=\"fa fa-home\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Dr sultads Send you Photo <span className=\"badge light badge-danger\">Danger</span>\n                                 </h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-danger\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Resport created successfully{' '}\n                                    <span className=\"badge light badge-success\">Success</span>\n                                 </h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-primary\">\n                                 <i className=\"fa fa-home\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Reminder : Treatment Time!{' '}\n                                    <span className=\"badge light badge-success\">Success</span>\n                                 </h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card border-0 pb-0\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Message</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar id=\"DZ_W_Todo3\" className=\"widget-media dz-scroll height370 ps ps--active-y\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Alfie Mason <small className=\"text-muted\">29 July 2020</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-info\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Jacob Tucker <small className=\"text-muted\">29 July 2020</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-success\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar2} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Jack Ronan <small className=\"text-muted\">29 July 2020</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Noah Baldon <small className=\"text-muted\">29 July 2020</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-danger\">PU</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Thomas Grady <small className=\"text-muted\">02:26 PM</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-primary\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar3} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Oscar Weston <small className=\"text-muted\">29 July 2020</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card border-0 pb-0\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">To Do List</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar id=\"DZ_W_Todo4\" className=\"widget-media dz-scroll height370 ps ps--active-y\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox1\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox1\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Get up</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-warning check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox2\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox2\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Stand up</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-primary check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox3\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox3\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Don't give up the fight.</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-info check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox4\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox4\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Do something else</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox5\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox5\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Get up</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-warning check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox6\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox6\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Stand up</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media ai-icon\">\n                     <span className=\"mr-3 bgl-primary text-primary\">\n                        {/* <!-- <i className=\"ti-user\"></i> --> */}\n                        <svg\n                           id=\"icon-customers\"\n                           xmlns=\"http://www.w3.org/2000/svg\"\n                           width=\"30\"\n                           height=\"30\"\n                           viewBox=\"0 0 24 24\"\n                           fill=\"none\"\n                           stroke=\"currentColor\"\n                           strokeWidth=\"2\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                           className=\"feather feather-user\"\n                        >\n                           <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                           <circle cx=\"12\" cy=\"7\" r=\"4\" />\n                        </svg>\n                     </span>\n                     <div className=\"media-body\">\n                        <p className=\"mb-1\">Patient</p>\n                        <h4 className=\"mb-0\">3280</h4>\n                        <span className=\"badge badge-primary\">+3.5%</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media ai-icon\">\n                     <span className=\"mr-3 bgl-warning text-warning\">\n                        <svg\n                           id=\"icon-orders\"\n                           xmlns=\"http://www.w3.org/2000/svg\"\n                           width=\"30\"\n                           height=\"30\"\n                           viewBox=\"0 0 24 24\"\n                           fill=\"none\"\n                           stroke=\"currentColor\"\n                           strokeWidth=\"2\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                           className=\"feather feather-file-text\"\n                        >\n                           <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\" />\n                           <polyline points=\"14 2 14 8 20 8\" />\n                           <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\" />\n                           <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\" />\n                           <polyline points=\"10 9 9 9 8 9\" />\n                        </svg>\n                     </span>\n                     <div className=\"media-body\">\n                        <p className=\"mb-1\">Bills</p>\n                        <h4 className=\"mb-0\">2570</h4>\n                        <span className=\"badge badge-warning\">+3.5%</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body  p-4\">\n                  <div className=\"media ai-icon\">\n                     <span className=\"mr-3 bgl-danger text-danger\">\n                        <svg\n                           id=\"icon-revenue\"\n                           xmlns=\"http://www.w3.org/2000/svg\"\n                           width=\"30\"\n                           height=\"30\"\n                           viewBox=\"0 0 24 24\"\n                           fill=\"none\"\n                           stroke=\"currentColor\"\n                           strokeWidth=\"2\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                           className=\"feather feather-dollar-sign\"\n                        >\n                           <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\" />\n                           <path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" />\n                        </svg>\n                     </span>\n                     <div className=\"media-body\">\n                        <p className=\"mb-1\">Revenue</p>\n                        <h4 className=\"mb-0\">364.50K</h4>\n                        <span className=\"badge badge-danger\">-3.5%</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media ai-icon\">\n                     <span className=\"mr-3 bgl-success text-success\">\n                        <svg\n                           id=\"icon-database-widget\"\n                           xmlns=\"http://www.w3.org/2000/svg\"\n                           width=\"24\"\n                           height=\"24\"\n                           viewBox=\"0 0 24 24\"\n                           fill=\"none\"\n                           stroke=\"currentColor\"\n                           strokeWidth=\"2\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                           className=\"feather feather-database\"\n                        >\n                           <ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\" />\n                           <path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\" />\n                           <path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\" />\n                        </svg>\n                     </span>\n                     <div className=\"media-body\">\n                        <p className=\"mb-1\">Patient</p>\n                        <h4 className=\"mb-0\">364.50K</h4>\n                        <span className=\"badge badge-success\">-3.5%</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-danger\">\n               <div className=\"card-body  p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"flaticon-381-calendar-1\" />\n                     </span>\n                     <div className=\"media-body text-white text-right\">\n                        <p className=\"mb-1\">Appointment</p>\n                        <h3 className=\"text-white\">76</h3>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-success\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"flaticon-381-diamond\" />\n                     </span>\n                     <div className=\"media-body text-white text-right\">\n                        <p className=\"mb-1\">Earning</p>\n                        <h3 className=\"text-white\">$56K</h3>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-info\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"flaticon-381-heart\" />\n                     </span>\n                     <div className=\"media-body text-white text-right\">\n                        <p className=\"mb-1\">Total Patient</p>\n                        <h3 className=\"text-white\">783K</h3>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-primary\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"flaticon-381-user-7\" />\n                     </span>\n                     <div className=\"media-body text-white text-right\">\n                        <p className=\"mb-1\">Chef</p>\n                        <h3 className=\"text-white\">$76</h3>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-primary\">\n               <div className=\"card-body  p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"la la-users\" />\n                     </span>\n                     <div className=\"media-body text-white\">\n                        <p className=\"mb-1\">Total Students</p>\n                        <h3 className=\"text-white\">3280</h3>\n                        <div className=\"progress mb-2 bg-secondary\">\n                           <div className=\"progress-bar progress-animated bg-light\" style={{ width: '80%' }} />\n                        </div>\n                        <small>80% Increase in 20 Days</small>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-warning\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"la la-user\" />\n                     </span>\n                     <div className=\"media-body text-white\">\n                        <p className=\"mb-1\">New Students</p>\n                        <h3 className=\"text-white\">245</h3>\n                        <div className=\"progress mb-2 bg-primary\">\n                           <div className=\"progress-bar progress-animated bg-light\" style={{ width: '50%' }} />\n                        </div>\n                        <small>50% Increase in 25 Days</small>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-secondary\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"la la-graduation-cap\" />\n                     </span>\n                     <div className=\"media-body text-white\">\n                        <p className=\"mb-1\">Total Course</p>\n                        <h3 className=\"text-white\">28</h3>\n                        <div className=\"progress mb-2 bg-primary\">\n                           <div className=\"progress-bar progress-animated bg-light\" style={{ width: '76%' }} />\n                        </div>\n                        <small>76% Increase in 20 Days</small>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-danger \">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"la la-dollar\" />\n                     </span>\n                     <div className=\"media-body text-white\">\n                        <p className=\"mb-1\">Fees Collect</p>\n                        <h3 className=\"text-white\">250$</h3>\n                        <div className=\"progress mb-2 bg-secondary\">\n                           <div className=\"progress-bar progress-animated bg-light\" style={{ width: '30%' }} />\n                        </div>\n                        <small>30% Increase in 30 Days</small>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <h4 className=\"card-title\">Total Students</h4>\n                  <h3>3280</h3>\n                  <div className=\"progress mb-2\">\n                     <div className=\"progress-bar progress-animated bg-primary\" style={{ width: '80%' }} />\n                  </div>\n                  <small>80% Increase in 20 Days</small>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <h4 className=\"card-title\">New Students</h4>\n                  <h3>245</h3>\n                  <div className=\"progress mb-2\">\n                     <div className=\"progress-bar progress-animated bg-warning\" style={{ width: '50%' }} />\n                  </div>\n                  <small>50% Increase in 25 Days</small>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <h4 className=\"card-title\">Total Course</h4>\n                  <h3>28</h3>\n                  <div className=\"progress mb-2\">\n                     <div className=\"progress-bar progress-animated bg-red\" style={{ width: '76%' }} />\n                  </div>\n                  <small>76% Increase in 20 Days</small>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <h4 className=\"card-title\">Fees Collection</h4>\n                  <h3>25160$</h3>\n                  <div className=\"progress mb-2\">\n                     <div className=\"progress-bar progress-animated bg-success\" style={{ width: '30%' }} />\n                  </div>\n                  <small>30% Increase in 30 Days</small>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-12 col-lg-12 col-sm-12\">\n            <div className=\"row\">\n               <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n                  <div className=\"widget-stat card bg-primary\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <h3 className=\"card-title text-white\">Total Students</h3>\n                        <h5 className=\"text-white mb-0\">\n                           <i className=\"fa fa-caret-up\" /> 422\n                        </h5>\n                     </div>\n                     <div className=\"card-body text-center\">\n                        <div className=\"ico-sparkline\">\n                           <div id=\"sparkline12\">\n                              <Pie color1=\"#7099ED\" color2=\"#B3CCFF\" color3=\"#9DBDFF\" height=\"100\" />\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n                  <div className=\"widget-stat card bg-warning overflow-hidden\">\n                     <div className=\"card-header border-0 \">\n                        <h3 className=\"card-title text-white\">New Students</h3>\n                        <h5 className=\"text-white mb-0\">\n                           <i className=\"fa fa-caret-up\" /> 357\n                        </h5>\n                     </div>\n                     <div className=\"card-body text-center p-0\">\n                        <div className=\"ico-sparkline\">\n                           <div id=\"spark-bar-2\">\n                              <BarChart color=\"#FFCE78\" lable={false} height=\"140\" width=\"290\" />\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n                  <div className=\"widget-stat card bg-secondary\">\n                     <div className=\"card-header pb-3 border-0 pb-0\">\n                        <h3 className=\"card-title text-white\">Total Course</h3>\n                        <h5 className=\"text-white mb-0\">\n                           <i className=\"fa fa-caret-up\" /> 547\n                        </h5>\n                     </div>\n                     <div className=\"card-body p-0\">\n                        <div className=\"px-4\">\n                           <SparkNagetivePositive />\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n                  <div className=\"widget-stat card bg-danger overflow-hidden\">\n                     <div className=\"card-header pb-3 border-0 pb-0\">\n                        <h3 className=\"card-title text-white\">Fees Collection</h3>\n                        <h5 className=\"text-white mb-0\">\n                           <i className=\"fa fa-caret-up\" /> 3280$\n                        </h5>\n                     </div>\n                     <div className=\"card-body p-0\">\n                        <LineChart color=\"#F77F8B\" height=\"150\" />\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-12 col-sm-12\">\n            <div className=\"card\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h2 className=\"card-title\">about me</h2>\n               </div>\n               <div className=\"card-body pb-0\">\n                  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n                  <ul className=\"list-group list-group-flush\">\n                     <li className=\"list-group-item d-flex px-0 justify-content-between\">\n                        <strong>Gender</strong>\n                        <span className=\"mb-0\">Male</span>\n                     </li>\n                     <li className=\"list-group-item d-flex px-0 justify-content-between\">\n                        <strong>Education</strong>\n                        <span className=\"mb-0\">PHD</span>\n                     </li>\n                     <li className=\"list-group-item d-flex px-0 justify-content-between\">\n                        <strong>Designation</strong>\n                        <span className=\"mb-0\">Se. Professor</span>\n                     </li>\n                     <li className=\"list-group-item d-flex px-0 justify-content-between\">\n                        <strong>Operation Done</strong>\n                        <span className=\"mb-0\">120</span>\n                     </li>\n                  </ul>\n               </div>\n               <div className=\"card-footer pt-0 pb-0 text-center\">\n                  <div className=\"row\">\n                     <div className=\"col-4 pt-3 pb-3 border-right\">\n                        <h3 className=\"mb-1 text-primary\">150</h3>\n                        <span>Projects</span>\n                     </div>\n                     <div className=\"col-4 pt-3 pb-3 border-right\">\n                        <h3 className=\"mb-1 text-primary\">140</h3>\n                        <span>Uploads</span>\n                     </div>\n                     <div className=\"col-4 pt-3 pb-3\">\n                        <h3 className=\"mb-1 text-primary\">45</h3>\n                        <span>Tasks</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-8 col-xxl-8 col-lg-12 col-sm-12\">\n            <div id=\"user-activity\" className=\"card\">\n               <Tab.Container defaultActiveKey=\"day\">\n                  <div className=\"card-header border-0 pb-0 d-sm-flex d-block\">\n                     <h4 className=\"card-title\">Visitor Activity</h4>\n                     <div className=\"card-action mb-sm-0 my-2\">\n                        <Nav className=\"nav nav-tabs\" role=\"tablist\">\n                           <Nav.Item className=\"nav-item\">\n                              <Nav.Link className=\"nav-link \" data-toggle=\"tab\" href=\"#\" role=\"tab\" eventKey=\"day\">\n                                 Day\n                              </Nav.Link>\n                           </Nav.Item>\n                           <Nav.Item className=\"nav-item\">\n                              <Nav.Link className=\"nav-link\" data-toggle=\"tab\" href=\"#\" role=\"tab\" eventKey=\"month\">\n                                 Month\n                              </Nav.Link>\n                           </Nav.Item>\n                           <Nav.Item className=\"nav-item\">\n                              <Nav.Link className=\"nav-link\" data-toggle=\"tab\" href=\"#\" role=\"tab\" eventKey=\"year\">\n                                 Year\n                              </Nav.Link>\n                           </Nav.Item>\n                        </Nav>\n                     </div>\n                  </div>\n                  <div className=\"card-body\">\n                     <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane className=\"tab-pane fade  show active\" id=\"user\" role=\"tabpanel\">\n                           <BarChart color=\"#48A9F8\" />\n                        </Tab.Pane>\n                     </Tab.Content>\n                  </div>\n               </Tab.Container>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-6\">\n            <div className=\"card overflow-hidden\">\n               <div className=\"card-body\">\n                  <div className=\"text-center\">\n                     <div className=\"profile-photo\">\n                        <img src={profile} width=\"100\" className=\"img-fluid rounded-circle\" alt=\"\" />\n                     </div>\n                     <h3 className=\"mt-4 mb-1\">Deangelo Sena</h3>\n                     <p className=\"text-muted\">Senior Manager</p>\n                     <a className=\"btn btn-outline-primary btn-rounded mt-3 px-5\" href=\"#\">\n                        Folllow\n                     </a>\n                  </div>\n               </div>\n\n               <div className=\"card-footer pt-0 pb-0 text-center\">\n                  <div className=\"row\">\n                     <div className=\"col-4 pt-3 pb-3 border-right\">\n                        <h3 className=\"mb-1\">150</h3>\n                        <span>Follower</span>\n                     </div>\n                     <div className=\"col-4 pt-3 pb-3 border-right\">\n                        <h3 className=\"mb-1\">140</h3>\n                        <span>Place Stay</span>\n                     </div>\n                     <div className=\"col-4 pt-3 pb-3\">\n                        <h3 className=\"mb-1\">45</h3>\n                        <span>Reviews</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-6\">\n            <div className=\"card active_users\">\n               <div className=\"card-header bg-success  border-0 pb-0\">\n                  {/* <h4 className=\"card-title text-white\">Active Users</h4> */}\n                  {/* <BarChart color=\"#47FF7B\" height=\"180\" width=\"320\" /> */}\n                  <LiveBar />\n               </div>\n               <div className=\"card-body pt-0\">\n                  <div className=\"list-group-flush mt-4\">\n                     <div className=\"list-group-item bg-transparent d-flex justify-content-between px-0 py-2 font-weight-semi-bold border-top-0\">\n                        <p className=\"mb-0\">Top Active Pages</p>\n                        <p className=\"mb-0\">Active Users</p>\n                     </div>\n                     <div className=\"list-group-item bg-transparent d-flex justify-content-between px-0 py-2\">\n                        <p className=\"mb-0\">/bootstrap-themes/</p>\n                        <p className=\"mb-0\">3</p>\n                     </div>\n                     <div className=\"list-group-item bg-transparent d-flex justify-content-between px-0 py-2\">\n                        <p className=\"mb-0\">/tags/html5/</p>\n                        <p className=\"mb-0\">3</p>\n                     </div>\n                     <div className=\"list-group-item bg-transparent d-xxl-flex justify-content-between px-0 py-1 d-none\">\n                        <p className=\"mb-0\">/</p>\n                        <p className=\"mb-0\">2</p>\n                     </div>\n                     <div className=\"list-group-item border-0 bg-transparent d-xxl-flex justify-content-between px-0 py-1 d-none\">\n                        <p className=\"mb-0\">/preview/falcon/dashboard/</p>\n                        <p className=\"mb-0\">2</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-4 col-lg-12 col-sm-12\">\n            <div className=\"card overflow-hidden\">\n               <div className=\"text-center p-3 overlay-box \" style={{ backgroundImage: `url(${bg1})` }}>\n                  <div className=\"profile-photo\">\n                     <img src={profile} width=\"100\" className=\"m-auto img-fluid rounded-circle d-block\" alt=\"\" />\n                  </div>\n                  <h3 className=\"mt-3 mb-1 text-white\">Deangelo Sena</h3>\n                  <p className=\"text-white mb-0\">Senior Manager</p>\n               </div>\n               <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Patient Gender</span> <strong className=\"text-muted\">Female </strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Years Old</span> <strong className=\"text-muted\">Age: 24 </strong>\n                  </li>\n               </ul>\n               <div className=\"card-footer border-0 mt-0\">\n                  <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\">\n                     <i className=\"fa fa-bell-o\" /> Reminder Alarm\n                  </button>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-12 col-lg-12 col-xxl-12 col-sm-12\">\n            <div className=\"card\">\n               <div className=\"card-header\">\n                  <h4 className=\"card-title\">Recent Payments Queue</h4>\n               </div>\n               <div className=\"card-body\">\n                  <div className=\"table-responsive recentOrderTable\">\n                     <table className=\"table verticle-middle table-responsive-md\">\n                        <thead>\n                           <tr>\n                              <th scope=\"col\">Ward No.</th>\n                              <th scope=\"col\">Patient</th>\n                              <th scope=\"col\">Dr Name</th>\n                              <th scope=\"col\">Date</th>\n                              <th scope=\"col\">Status</th>\n                              <th scope=\"col\">Bills</th>\n                              <th scope=\"col\" />\n                           </tr>\n                        </thead>\n                        <tbody>\n                           <tr>\n                              <td>12</td>\n                              <td>Mr. Bobby</td>\n                              <td>Dr. Jackson</td>\n                              <td>01 August 2020</td>\n                              <td>\n                                 <span className=\"badge badge-rounded badge-primary\">Checkin</span>\n                              </td>\n                              <td>$120</td>\n                              <td>\n                                 <Dropdown className=\"dropdown custom-dropdown mb-0\">\n                                    <Dropdown.Toggle\n                                       className=\"btn sharp btn-primary tp-btn icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                          width=\"18px\"\n                                          height=\"18px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                             <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item className=\"dropdown-item\" href=\"#;\">\n                                          Details\n                                       </Dropdown.Item>\n                                       <Dropdown.Item className=\"dropdown-item text-danger\" href=\"#;\">\n                                          Cancel\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr>\n                              <td>10 </td>\n                              <td>Mr. Dexter</td>\n                              <td>Dr. Charles</td>\n                              <td>31 July 2020</td>\n                              <td>\n                                 <span className=\"badge badge-rounded badge-warning\">Panding</span>\n                              </td>\n                              <td>$540</td>\n                              <td>\n                                 <Dropdown className=\"dropdown custom-dropdown mb-0\">\n                                    <Dropdown.Toggle\n                                       className=\"btn sharp btn-primary tp-btn icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                          width=\"18px\"\n                                          height=\"18px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                             <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item className=\"dropdown-item\" href=\"#;\">\n                                          Details\n                                       </Dropdown.Item>\n                                       <Dropdown.Item className=\"dropdown-item text-danger\" href=\"#;\">\n                                          Cancel\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr>\n                              <td>03 </td>\n                              <td>Mr. Nathan</td>\n                              <td>Dr. Frederick</td>\n                              <td>30 July 2020</td>\n                              <td>\n                                 <span className=\"badge badge-rounded badge-danger\">Canceled</span>\n                              </td>\n                              <td>$301</td>\n                              <td>\n                                 <Dropdown className=\"dropdown custom-dropdown mb-0\">\n                                    <Dropdown.Toggle\n                                       className=\"btn sharp btn-primary tp-btn icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                          width=\"18px\"\n                                          height=\"18px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                             <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item className=\"dropdown-item\" href=\"#;\">\n                                          Details\n                                       </Dropdown.Item>\n                                       <Dropdown.Item className=\"dropdown-item text-danger\" href=\"#;\">\n                                          Cancel\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr>\n                              <td>05</td>\n                              <td>Mr. Aurora</td>\n                              <td>Dr. Roman</td>\n                              <td>29 July 2020</td>\n                              <td>\n                                 <span className=\"badge badge-rounded badge-success\">Checkin</span>\n                              </td>\n                              <td>$099</td>\n                              <td>\n                                 <Dropdown className=\"dropdown custom-dropdown mb-0\">\n                                    <Dropdown.Toggle\n                                       className=\"btn sharp btn-primary tp-btn icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                          width=\"18px\"\n                                          height=\"18px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                             <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item className=\"dropdown-item\" href=\"#;\">\n                                          Details\n                                       </Dropdown.Item>\n                                       <Dropdown.Item className=\"dropdown-item text-danger\" href=\"#;\">\n                                          Cancel\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr>\n                              <td>06</td>\n                              <td>Mr. Matthew</td>\n                              <td>Dr. Samantha</td>\n                              <td>28 July 2020</td>\n                              <td>\n                                 <span className=\"badge badge-rounded badge-success\">Checkin</span>\n                              </td>\n                              <td>$520</td>\n                              <td>\n                                 <Dropdown className=\"dropdown custom-dropdown mb-0\">\n                                    <Dropdown.Toggle\n                                       className=\"btn sharp btn-primary tp-btn icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                          width=\"18px\"\n                                          height=\"18px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                             <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item className=\"dropdown-item\" href=\"#;\">\n                                          Details\n                                       </Dropdown.Item>\n                                       <Dropdown.Item className=\"dropdown-item text-danger\" href=\"#;\">\n                                          Cancel\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                        </tbody>\n                     </table>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-4 col-lg-6 col-xxl-4 col-sm-6\">\n            <div className=\"card text-white bg-primary\">\n               <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Blood type :</span>\n                     <strong>O+</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Allergies :</span>\n                     <strong>Penicilin, peanuts </strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Pressure :</span>\n                     <strong>120/100 mmHG</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Diseases :</span>\n                     <strong>Diabetes</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Temperture :</span>\n                     <strong>34 Degree</strong>\n                  </li>\n               </ul>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-6 col-xxl-4 col-sm-6\">\n            <div className=\"card text-white bg-warning text-black\">\n               <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Regular Checkups</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Dr Theodore Handle :</span>\n                     <strong>Dentist</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Dr Valentino Morose :</span>\n                     <strong>Surgeon</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Dr Fleece Marigold :</span>\n                     <strong>Clinical</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Dr Eric Widget :</span>\n                     <strong>Cardiology</strong>\n                  </li>\n               </ul>\n            </div>\n         </div>\n\n         <div className=\"col-xl-4 col-lg-12 col-xxl-4 col-sm-12\">\n            <div className=\"card\">\n               <div className=\"card-body text-center ai-icon  text-primary\">\n                  <svg\n                     id=\"rocket-icon\"\n                     className=\"my-2\"\n                     viewBox=\"0 0 24 24\"\n                     width=\"80\"\n                     height=\"80\"\n                     stroke=\"currentColor\"\n                     strokeWidth=\"1\"\n                     fill=\"none\"\n                     strokeLinecap=\"round\"\n                     strokeLinejoin=\"round\"\n                  >\n                     <path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\" />\n                     <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\" />\n                     <path d=\"M16 10a4 4 0 0 1-8 0\" />\n                  </svg>\n                  <h4 className=\"my-2\">You don’t have badges yet</h4>\n                  <a href=\"#;\" className=\"btn my-2 btn-primary btn-lg px-4\">\n                     <i className=\"fa fa-usd\" /> Earn Budges\n                  </a>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-8 col-lg-12 col-xxl-8 col-sm-12\">\n            <div className=\"row\">\n               <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <div className=\"clearfix\">\n                           <h3 className=\"card-title\">Blood pressure</h3>\n                           <span>In the normal</span>\n                        </div>\n                        <div className=\"clearfix text-center\">\n                           <h3 className=\"text-primary mb-0\">120/89</h3>\n                           <span>mmHG</span>\n                        </div>\n                     </div>\n                     <div className=\"card-body text-center\">\n                        <div className=\"ico-sparkline\">\n                           <Sparklines data={sampleData}>\n                              <SparklinesBars style={{ fill: '#47ff7b' }} />\n                           </Sparklines>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <div className=\"clearfix\">\n                           <h3 className=\"card-title\">Heart Rate</h3>\n                           <span className=\"text-danger\">Above the normal</span>\n                        </div>\n                        <div className=\"clearfix text-center\">\n                           <h3 className=\"text-danger mb-0\">107</h3>\n                           <span>Per Min</span>\n                        </div>\n                     </div>\n                     <div className=\"card-body text-center\">\n                        <div className=\"ico-sparkline\">\n                           <div id=\"composite-bar\">\n                              <Sparklines data={sampleData}>\n                                 <SparklinesBars style={{ fill: '#65EDFF' }} />\n                              </Sparklines>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <div className=\"clearfix\">\n                           <h3 className=\"card-title\">Glucose Rate</h3>\n                           <span>In the normal</span>\n                        </div>\n                        <div className=\"clearfix text-center\">\n                           <h3 className=\"text-success mb-0\">97</h3>\n                           <span>mg/dl</span>\n                        </div>\n                     </div>\n                     <div className=\"card-body text-center\">\n                        <div className=\"ico-sparkline\">\n                           <div id=\"sparkline8\">\n                              <Sparklines data={sampleData}>\n                                 <SparklinesLine style={{ fill: '#9F8BCE' }} />\n                              </Sparklines>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <div className=\"clearfix\">\n                           <h3 className=\"card-title\">Clolesterol</h3>\n                           <span>In the normal</span>\n                        </div>\n                        <div className=\"clearfix text-center\">\n                           <h3 className=\"text-info mb-0\">124</h3>\n                           <span>mg/dl</span>\n                        </div>\n                     </div>\n                     <div className=\"card-body text-center\">\n                        <div className=\"ico-sparkline\">\n                           <Sparklines data={sampleData}>\n                              <SparklinesLine style={{ fill: '#c5e39f' }} />\n                           </Sparklines>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-12 col-sm-12\">\n            <div className=\"card overflow-hidden\">\n               <div className=\"text-center p-5 overlay-box\" style={{ backgroundImage: `url(${bg5})` }}>\n                  <img src={profile} width=\"100\" className=\"img-fluid rounded-circle\" alt=\"\" />\n                  <h3 className=\"mt-3 mb-0 text-white\">Deangelo Sena</h3>\n               </div>\n               <div className=\"card-body\">\n                  <div className=\"row text-center\">\n                     <div className=\"col-6\">\n                        <div className=\"bgl-primary rounded p-3\">\n                           <h4 className=\"mb-0\">Female</h4>\n                           <small>Patient Gender</small>\n                        </div>\n                     </div>\n                     <div className=\"col-6\">\n                        <div className=\"bgl-primary rounded p-3\">\n                           <h4 className=\"mb-0\">Age: 24</h4>\n                           <small>Years Old</small>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"card-footer mt-0\">\n                  <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\">\n                     View Profile\n                  </button>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-sm-6\">\n            <div className=\"card bg-primary\">\n               <div className=\"card-body pb-0\">\n                  <div className=\"row\">\n                     <div className=\"col\">\n                        <h5 className=\"text-white\">Power</h5>\n                        <span className=\"text-white\">2017.1.20</span>\n                     </div>\n                     <div className=\"col text-right\">\n                        <h5 className=\"text-white\">\n                           <i className=\"fa fa-caret-up\" /> 260\n                        </h5>\n                        <span className=\"text-white\">+12.5(2.8%)</span>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <BarChart3 color=\"#E2F3D2\" height={150} />\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-sm-6\">\n            <div className=\"card bg-success\">\n               <div className=\"card-body pb-0\">\n                  <div className=\"row\">\n                     <div className=\"col\">\n                        <h5 className=\"text-white\">Power</h5>\n                        <span className=\"text-white\">2017.1.20</span>\n                     </div>\n                     <div className=\"col text-right\">\n                        <h5 className=\"text-white\">\n                           <i className=\"fa fa-caret-up\" /> 260\n                        </h5>\n                        <span className=\"text-white\">+12.5(2.8%)</span>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <LineChart height={150} color=\"#43D66C\" border=\"#45FDC6\" />\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-4 col-lg-6 col-xxl-4 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"card-body pb-0\">\n                  <div className=\"row\">\n                     <div className=\"col\">\n                        <h5>3650</h5>\n                        <span>VIEWS OF YOUR PROJECT</span>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <BarChart2 />\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-6 col-xxl-4 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"card-body\">\n                  <h5>Latency</h5>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <RealTime height=\"100\" />\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-12 col-xxl-4 col-sm-12\">\n            <div className=\"card\">\n               <div className=\"card-body\">\n                  <div className=\"row justify-content-between align-items-center\">\n                     <div className=\"col-auto\">\n                        <h4 className=\"text-uppercase\">74,206 K</h4>\n                        <span>Lifetime earnings</span>\n                     </div>\n                     <div className=\"col-auto\">\n                        <div className=\"chart-wrapper height100\">\n                           <BarChart3 />\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-12 col-xxl-12\">\n            <div className=\"row\">\n               <div className=\"col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-body pb-0\">\n                        <div className=\"row justify-content-between\">\n                           <div className=\"col-auto\">\n                              <h5>Lorem Ipsum</h5>\n                           </div>\n                           <div className=\"col-auto\">\n                              <h5>\n                                 <span>\n                                    <i className=\"fa fa-caret-up\" />\n                                 </span>\n                                 <span>2,250</span>\n                              </h5>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"chart-wrapper\">\n                        <LineChart4 color=\"#8ED3E2\" />\n                     </div>\n                     <div className=\"card-footer\">\n                        <div className=\"row\">\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-body pb-0\">\n                        <div className=\"row justify-content-between\">\n                           <div className=\"col-auto\">\n                              <h5>Lorem Ipsum</h5>\n                           </div>\n                           <div className=\"col-auto\">\n                              <h5>\n                                 <span>\n                                    <i className=\"fa fa-caret-up\" />\n                                 </span>\n                                 <span>2,250</span>\n                              </h5>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"chart-wrapper\">\n                        <BarChartNoPadding />\n                     </div>\n                     <div className=\"card-footer\">\n                        <div className=\"row\">\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         {' '}\n         <div className=\"col-xl-6 col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-body pb-0\">\n                  <h4 className=\"card-title text-uppercase font-weight-normal\">Market Now</h4>\n                  <h2 className=\"font-weight-normal text-danger\">\n                     <span>\n                        <i className=\"fa fa-caret-up\" />\n                     </span>\n                     <span>3454664</span>\n                  </h2>\n                  <div className=\"row mt-5\">\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">APPL</h5>\n                        <span className=\"text-success\">+ 82.24 %</span>\n                     </div>\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">FB</h5>\n                        <span className=\"text-danger\">- 12.24 %</span>\n                     </div>\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">GOOG</h5>\n                        <span className=\"text-success\">+ 42.24 %</span>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper mt-3\">\n                  <BarChartNoPadding color=\"#4962E1\" />\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-6 col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-body pb-0\">\n                  <h4 className=\"card-title text-uppercase font-weight-normal\">Sales Analysis</h4>\n                  <h2 className=\"font-weight-normal text-danger\">\n                     <span>\n                        <i className=\"fa fa-caret-up\" />\n                     </span>\n                     <span>3454664</span>\n                  </h2>\n                  <div className=\"row mt-5\">\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">Today</h5>\n                        <span className=\"text-success\">+ 8224</span>\n                     </div>\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">Today</h5>\n                        <span className=\"text-danger\">- 1224</span>\n                     </div>\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">Week</h5>\n                        <span className=\"text-success\">+ 4224</span>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <div id=\"chart_widget_8\">\n                     {' '}\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine\n                           style={{\n                              strokeWidth: 1,\n                              stroke: '#8ED3E2',\n                              fill: 'none',\n                           }}\n                        />\n                     </Sparklines>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         {' '}\n         <div className=\"col-xl-6 col-lg-12\">\n            <div className=\"card\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Top Products</h4>\n               </div>\n               <div className=\"card-body pb-0\">\n                  <div className=\"widget-media\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-info\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Resport created successfully</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-success\">\n                                 <i className=\"fa fa-home\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <LineChart4 color=\"#2780D4\" />\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-6 col-lg-12\">\n            <div className=\"card\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Top Products</h4>\n               </div>\n               <div className=\"card-body pb-0\">\n                  <div className=\"widget-media\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar4} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-info\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar2} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Resport created successfully</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-success\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar3} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <LineChart4 color=\"#5514A4\" />\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         {' '}\n         <div className=\"col-xl-6 col-xxl-8 col-lg-12\">\n            <div className=\"row\">\n               <div className=\"col-sm-12\">\n                  <div className=\"card\">\n                     <div className=\"row no-gutters\">\n                        <div className=\"col-5 p-0\">\n                           <div className=\"card-body\">\n                              <h6 className=\"font-weight-normal text-uppercase\">Weekly sales</h6>\n                              <h4>$ 14000</h4>\n                              <div>\n                                 <span className=\"badge badge-light\">60%</span>\n                                 <span>Higher</span>\n                              </div>\n                           </div>\n                        </div>\n                        <div className=\"col-7 p-0\">\n                           <div className=\"chart-wrapper\">\n                              <LineChart4 color=\"rgb(170, 137, 209)\" borderColor=\"#5514A4\" />\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-sm-6\">\n                  <div className=\"card\">\n                     <div className=\"card-body\">\n                        <h5>570</h5>\n                        <p>All Sales</p>\n                     </div>\n                     <div className=\"chart-wrapper\">\n                        <LineChart6 height=\"200\" color=\"#82DB14\" />\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-sm-6\">\n                  <div className=\"card\">\n                     <div className=\"card-body\">\n                        <h5>570</h5>\n                        <p>All Sales</p>\n                     </div>\n                     <div className=\"chart-wrapper\">\n                        <LineChart6 height=\"200\" color=\"#5514A4\" />\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-6 col-xxl-4 col-lg-12\">\n            <div className=\"card\">\n               <div className=\"chart-wrapper\">\n                  <LineChart4 color=\"#48A9F8\" />\n               </div>\n               <div className=\"card-body\">\n                  <h4 className=\"card-title\">Sales Status</h4>\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <div className=\"d-flex justify-content-between\">\n                           <h6>67%</h6>\n                           <span>Grow</span>\n                        </div>\n                        <div className=\"progress\">\n                           <div className=\"progress-bar bg-primary\" style={{ width: '80%' }} />\n                        </div>\n                     </div>\n                     <div className=\"col-12 mt-4\">\n                        <div className=\"d-flex justify-content-between\">\n                           <h6>67%</h6>\n                           <span>Grow</span>\n                        </div>\n                        <div className=\"progress\">\n                           <div className=\"progress-bar bg-success\" style={{ width: '70%' }} />\n                        </div>\n                     </div>\n                     <div className=\"col-12 mt-4\">\n                        <div className=\"d-flex justify-content-between\">\n                           <h6>67%</h6>\n                           <span>Grow</span>\n                        </div>\n                        <div className=\"progress\">\n                           <div className=\"progress-bar bg-info\" style={{ width: '40%' }} />\n                        </div>\n                     </div>\n                     <div className=\"col-12 mt-4\">\n                        <div className=\"d-flex justify-content-between\">\n                           <h6>67%</h6>\n                           <span>Grow</span>\n                        </div>\n                        <div className=\"progress\">\n                           <div className=\"progress-bar bg-warning\" style={{ width: '80%' }} />\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         {' '}\n         <div className=\"col-xl-3 col-xxl-3 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"social-graph-wrapper widget-facebook\">\n                  <span className=\"s-icon\">\n                     <i className=\"fa fa-facebook\" />\n                  </span>\n               </div>\n               <div className=\"row\">\n                  <div className=\"col-6 border-right\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">89</span> k\n                        </h4>\n                        <p className=\"m-0\">Friends</p>\n                     </div>\n                  </div>\n                  <div className=\"col-6\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">119</span> k\n                        </h4>\n                        <p className=\"m-0\">Followers</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-xxl-3 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"social-graph-wrapper widget-linkedin\">\n                  <span className=\"s-icon\">\n                     <i className=\"fa fa-linkedin\" />\n                  </span>\n               </div>\n               <div className=\"row\">\n                  <div className=\"col-6 border-right\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">89</span> k\n                        </h4>\n                        <p className=\"m-0\">Friends</p>\n                     </div>\n                  </div>\n                  <div className=\"col-6\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">119</span> k\n                        </h4>\n                        <p className=\"m-0\">Followers</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-xxl-3 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"social-graph-wrapper widget-googleplus\">\n                  <span className=\"s-icon\">\n                     <i className=\"fa fa-google-plus\" />\n                  </span>\n               </div>\n               <div className=\"row\">\n                  <div className=\"col-6 border-right\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">89</span> k\n                        </h4>\n                        <p className=\"m-0\">Friends</p>\n                     </div>\n                  </div>\n                  <div className=\"col-6\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">119</span> k\n                        </h4>\n                        <p className=\"m-0\">Followers</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-xxl-3 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"social-graph-wrapper widget-twitter\">\n                  <span className=\"s-icon\">\n                     <i className=\"fa fa-twitter\" />\n                  </span>\n               </div>\n               <div className=\"row\">\n                  <div className=\"col-6 border-right\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">89</span> k\n                        </h4>\n                        <p className=\"m-0\">Friends</p>\n                     </div>\n                  </div>\n                  <div className=\"col-6\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">119</span> k\n                        </h4>\n                        <p className=\"m-0\">Followers</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   </>\n);\n\nexport default Widget;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Login.js",["343","344","345"],"import { api, get, post, useAlert } from 'jsx/helpers';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { When } from 'react-if';\r\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\r\nimport { connect } from 'react-redux';\r\nimport { userRoles } from 'jsx/helpers/enums';\r\nimport { setLogin } from '../../store/auth/actions';\r\n\r\nconst Login = (props) => {\r\n   const history = useHistory();\r\n   const [loginData, setLoginData] = useState({});\r\n   const [isLoading, setIsLoading] = useState(false);\r\n\r\n   const alert = useAlert();\r\n\r\n   const handleBlur = (e) => {\r\n      const newLoginData = { ...loginData };\r\n      newLoginData[e.target.name] = e.target.value;\r\n      setLoginData(newLoginData);\r\n   };\r\n\r\n   useEffect(() => {\r\n      setIsLoading(true);\r\n      const token = localStorage.getItem('auth_token');\r\n      if (token) {\r\n         get(`auth/decode/${token}`)\r\n            .then((decode) => {\r\n               props.setLogin({ ...decode, auth_token: token });\r\n               localStorage.setItem('auth_token', token);\r\n               setIsLoading(false);\r\n               if (decode?.isConfirmed) {\r\n                  if (decode?.role === userRoles.CASHIER) {\r\n                     history.push('/purchase');\r\n                  } else if (decode?.role === userRoles.ADMINISTRATOR) {\r\n                     history.push('/dashboard');\r\n                  } else {\r\n                     alert.setErrorAlert({ message: 'Unable to login', err: 'Account not confirmed!' });\r\n                  }\r\n               } else {\r\n                  localStorage.clear();\r\n                  props.setLogin({});\r\n                  alert.setErrorAlert({ message: 'Unable to login', err: 'Account not confirmed!' });\r\n               }\r\n            })\r\n            .catch((err) => setIsLoading(false));\r\n      } else setIsLoading(false);\r\n   }, []);\r\n\r\n   const handleLogin = async (e) => {\r\n      e.preventDefault();\r\n      setIsLoading(true);\r\n      try {\r\n         const res = await api.post('/auth/login', loginData);\r\n         setIsLoading(false);\r\n         const decode = await get(`auth/decode/${res.data}`);\r\n         props.setLogin({ ...decode, auth_token: res.data });\r\n         localStorage.setItem('auth_token', res.data);\r\n         if (decode?.isConfirmed) {\r\n            if (decode?.role === userRoles.CASHIER) {\r\n               history.push('/purchase');\r\n            } else if (decode?.role === userRoles.ADMINISTRATOR) {\r\n               history.push('/dashboard');\r\n            } else {\r\n               alert.setErrorAlert({ message: 'Unable to login', err: 'Account not confirmed!' });\r\n            }\r\n         } else {\r\n            localStorage.clear();\r\n            props.setLogin({});\r\n            alert.setErrorAlert({ message: 'Unable to login', err: 'Account not confirmed!' });\r\n         }\r\n      } catch (err) {\r\n         setIsLoading(false);\r\n         alert.setErrorAlert({ message: 'Unable to login', err });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <When condition={isLoading}>\r\n            <SpinnerOverlay />\r\n         </When>\r\n         <div className=\"authincation\">\r\n            <div className=\"container p-0\">\r\n               <div className=\"row justify-content-center align-items-center tw-h-screen\">\r\n                  <div className=\"col-lg-6 col-md-9\">\r\n                     <div className=\"authincation-content\">\r\n                        <div className=\"row no-gutters\">\r\n                           <div className=\"col-xl-12\">\r\n                              <div className=\"auth-form\">\r\n                                 {alert.getAlert()}\r\n                                 <h4 className=\"text-center mb-4\">Sign in your account</h4>\r\n                                 <form action=\"\" onSubmit={handleLogin}>\r\n                                    <div className=\"form-group\">\r\n                                       <label className=\"mb-1\" htmlFor=\"login-email\">\r\n                                          <strong>Email</strong>\r\n                                       </label>\r\n                                       <input\r\n                                          id=\"login-email\"\r\n                                          type=\"text\"\r\n                                          className=\"form-control\"\r\n                                          name=\"name\"\r\n                                          onChange={handleBlur}\r\n                                       />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                       <label className=\"mb-1\" htmlFor=\"login-password\">\r\n                                          <strong>Password</strong>\r\n                                       </label>\r\n                                       <input\r\n                                          id=\"login-password\"\r\n                                          type=\"password\"\r\n                                          className=\"form-control\"\r\n                                          name=\"password\"\r\n                                          onChange={handleBlur}\r\n                                       />\r\n                                    </div>\r\n                                    <div className=\"form-row d-flex justify-content-between mt-4 mb-2\">\r\n                                       <div className=\"form-group\">\r\n                                          <Link to=\"/page-forgot-password\">Forgot Password?</Link>\r\n                                       </div>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                       <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                                          Sign Me In\r\n                                       </button>\r\n                                    </div>\r\n                                 </form>\r\n                                 <div className=\"new-account mt-3\">\r\n                                    <p>\r\n                                       Don't have an account?{' '}\r\n                                       <Link className=\"text-primary\" to=\"/page-register\">\r\n                                          Sign up\r\n                                       </Link>\r\n                                    </p>\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n   setLogin: (payload) => dispatch(setLogin(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/products/ProductActions.js",["346","347","348","349","350","351","352"],"import useUrlState from '@ahooksjs/use-url-state';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport { useFormik } from 'formik';\nimport Button from 'jsx/components/Button';\nimport Pagination from 'jsx/components/Pagination';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, patch, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport { userRoles } from 'jsx/helpers/enums';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport _ from 'lodash';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ButtonGroup, Card, OverlayTrigger, Popover, Table } from 'react-bootstrap';\nimport { AiFillCaretLeft, AiFillEye, AiFillSave, AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport CreatableSelect from '../../components/CreatableSelect';\n\nconst ProductActions = (props) => {\n   dayjs.extend(relativeTime);\n\n   const history = useHistory();\n   const params = useParams();\n   const [isError, setIsError] = useState(false);\n   const [salePage, setSalePage] = useState(1);\n   const [saleLimit, setSaleLimit] = useState(5);\n   const [saleSort, setSaleSort] = useState({ field: 'sourcePrice', order: 1 });\n   const [inventoriesPage, setInventoriesPage] = useState(1);\n   const [inventoriesLimit, setInventoriesLimit] = useState(5);\n   const [inventoriesSort, setInventoriesSort] = useState({ field: 'sourcePrice', order: 1 });\n\n   const [urlState, setUrlState] = useUrlState({});\n\n   const alert = useAlert();\n   const getTypes = useQuery('types', () => get('/types'));\n   const queryClient = useQueryClient();\n\n   const isEditing = useMemo(\n      () => props.user?.role !== userRoles.CASHIER && urlState?.type === 'edit',\n      [urlState.type]\n   );\n   const isViewProduct = useMemo(() => urlState?.type === 'view', [urlState.type]);\n   const isAddProduct = useMemo(() => params?.id === 'add', [params.id]);\n\n   const query = useQuery(\n      [\n         'product',\n         params.id,\n         salePage,\n         saleLimit,\n         saleSort.field,\n         saleSort.order,\n         inventoriesPage,\n         inventoriesLimit,\n         inventoriesSort.field,\n         inventoriesSort.order,\n      ],\n      () =>\n         get(\n            `/products/id/${params.id}?salePage=${salePage}&saleLimit=${saleLimit}&saleSort[${saleSort.field}]=${saleSort.order}&inventoriesPage=${inventoriesPage}&inventoriesLimit=${inventoriesLimit}&inventoriesSort[${inventoriesSort.field}]=${inventoriesSort.order}`\n         ),\n      {\n         enabled: !isAddProduct,\n         onError: (err) => {\n            setIsError(true);\n            alert.setErrorAlert({\n               message: 'Invalid URL!',\n               err: { message: ['The page will redirect to manage products.'] },\n               callback: () => history.push('/products'),\n               duration: 3000,\n            });\n         },\n      }\n   );\n   const patchMutation = useMutation((payload) => patch(`/products/id/${params.id}`, payload), {\n      onSuccess: () => {\n         history.push('/products');\n      },\n      onError: (err) => {\n         alert.setErrorAlert({\n            message: 'Unable to edit product.',\n            err,\n         });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/products', payload), {\n      onSuccess: () => {\n         history.push('/products');\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add product', err });\n      },\n   });\n   const postTypeMutation = useMutation((payload) => post('/types', payload), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('types');\n      },\n   });\n\n   const mutation = useMemo(() => (isEditing ? patchMutation : postMutation), [isEditing, patchMutation, postMutation]);\n\n   if (!isEditing && !isViewProduct && !isAddProduct) {\n      history.push('/products');\n   }\n\n   const formik = useFormik({\n      initialValues: {\n         modelNumber: '',\n         retailPrice: '',\n         type: '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         mutation.mutate(values);\n      },\n   });\n\n   const handleCreateType = async (title) => {\n      postTypeMutation.mutate({ title });\n      // history.push({ pathname: '/types', search: `?action=add&title=${title}&redirect=/products/add` });\n   };\n   const handleInventoriesSort = (key) => {\n      setInventoriesSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n\n   useEffect(() => {\n      if (isEditing && query.data?.product) {\n         formik.setFieldValue('title', query.data?.product?.title ?? '');\n         formik.setFieldValue('modelNumber', query.data?.product?.modelNumber ?? '');\n         formik.setFieldValue('retailPrice', query.data?.product?.retailPrice ?? '');\n         formik.setFieldValue('type', query.data?.product?.type?._id ?? '');\n      }\n   }, [isEditing, query.data?.product]);\n   return (\n      <>\n         <div className=\"row p-0 m-0\">\n            <div className=\"col-10\">\n               <PageTItle activeMenu=\"View\" motherMenu=\"Products\" />\n            </div>\n            <div className=\"col-1\">\n               <Button\n                  icon={AiFillCaretLeft}\n                  variant=\"warning light\"\n                  onClick={() => history.replace('/products')}\n                  loading={mutation.isLoading}\n               >\n                  Back\n               </Button>\n            </div>\n         </div>\n         {alert.getAlert()}\n         <Card>\n            <When condition={getTypes.isLoading || postTypeMutation.isLoading || query.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <If condition={isAddProduct || isEditing}>\n               <Then>\n                  <form onSubmit={formik.handleSubmit}>\n                     <Card.Header>\n                        <Card.Title>{isEditing ? 'Edit Product' : 'Add New product'}</Card.Title>\n                     </Card.Header>\n                     <Card.Body>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Model Number</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"modelNumber\"\n                                 disabled={isError}\n                                 value={formik.values.modelNumber}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Retail Price</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"retailPrice\"\n                                 disabled={isError}\n                                 value={formik.values.retailPrice}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Type</label>\n                              {(query.data?.product || isAddProduct) && (\n                                 <CreatableSelect\n                                    isClearable\n                                    defaultValue={\n                                       isEditing && {\n                                          _id: query.data?.product?.type?.id,\n                                          label: query.data?.product?.type?.title,\n                                          value: query.data?.product?.type?.title,\n                                       }\n                                    }\n                                    onChange={(e) => formik.setFieldValue('type', e?._id)}\n                                    options={\n                                       getTypes.data?.length > 0 &&\n                                       getTypes.data.map((e) => ({ ...e, label: e.title, value: e.title }))\n                                    }\n                                    onCreateOption={handleCreateType}\n                                 />\n                              )}\n                           </div>\n                        </div>\n                     </Card.Body>\n                     <Card.Footer>\n                        <div className=\"row\">\n                           <div className=\"col-xl-12 tw-justify-center\">\n                              <ButtonGroup>\n                                 {/* <Button\n                                    icon={AiFillCaretLeft}\n                                    variant=\"warning light\"\n                                    onClick={() => history.replace('/products')}\n                                    loading={mutation.isLoading}\n                                 >\n                                    Back\n                                 </Button> */}\n                                 <Button\n                                    icon={AiFillSave}\n                                    variant=\"primary\"\n                                    type=\"submit\"\n                                    loading={mutation.isLoading}\n                                    disabled={isError}\n                                 >\n                                    Save\n                                 </Button>\n                              </ButtonGroup>\n                           </div>\n                        </div>\n                     </Card.Footer>\n                  </form>\n               </Then>\n               <Else>\n                  <Card.Header>\n                     <Card.Title>View product</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Model Number</label>\n                           <h4>{query.data?.product?.modelNumber ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Retail Price</label>\n                           <h4>{query.data?.product?.retailPrice ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Type</label>\n                           <h4>{query.data?.product?.type?.title ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                  </Card.Body>\n               </Else>\n            </If>\n         </Card>\n         <When condition={isViewProduct}>\n            <Card>\n               <When condition={query.isLoading}>\n                  <SpinnerOverlay />\n               </When>\n               <Card.Header>\n                  <Card.Title>View Related Purchases</Card.Title>\n               </Card.Header>\n               <Card.Body>\n                  <If condition={query.data?.inventories?.totalDocs > 0}>\n                     <Then>\n                        <Table className=\"tw-relative\" responsive>\n                           <thead>\n                              <tr>\n                                 <th className=\"width80\">\n                                    <strong>#</strong>\n                                 </th>\n                                 <th>\n                                    <strong\n                                       className=\"tw-cursor-pointer\"\n                                       onClick={() => handleInventoriesSort('supplier')}\n                                    >\n                                       SUPPLIER\n                                       <span>\n                                          <When condition={inventoriesSort.field !== 'supplier'}>\n                                             <FaSort className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'supplier' && inventoriesSort.order === -1\n                                             }\n                                          >\n                                             <FaSortDown className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'supplier' && inventoriesSort.order === 1\n                                             }\n                                          >\n                                             <FaSortUp className=\"d-inline mx-1\" />\n                                          </When>\n                                       </span>\n                                    </strong>\n                                 </th>\n                                 <th>\n                                    <strong\n                                       className=\"tw-cursor-pointer\"\n                                       onClick={() => handleInventoriesSort('modelNumber')}\n                                    >\n                                       MODEL NUMBER\n                                       <span>\n                                          <When condition={inventoriesSort.field !== 'modelNumber'}>\n                                             <FaSort className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'modelNumber' && inventoriesSort.order === -1\n                                             }\n                                          >\n                                             <FaSortDown className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'modelNumber' && inventoriesSort.order === 1\n                                             }\n                                          >\n                                             <FaSortUp className=\"d-inline mx-1\" />\n                                          </When>\n                                       </span>\n                                    </strong>\n                                 </th>\n                                 <th>\n                                    <strong\n                                       className=\"tw-cursor-pointer\"\n                                       onClick={() => handleInventoriesSort('sourcePrice')}\n                                    >\n                                       PRICE\n                                       <span>\n                                          <When condition={inventoriesSort.field !== 'sourcePrice'}>\n                                             <FaSort className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'sourcePrice' && inventoriesSort.order === -1\n                                             }\n                                          >\n                                             <FaSortDown className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'sourcePrice' && inventoriesSort.order === 1\n                                             }\n                                          >\n                                             <FaSortUp className=\"d-inline mx-1\" />\n                                          </When>\n                                       </span>\n                                    </strong>\n                                 </th>\n                                 <th>\n                                    <strong className=\"tw-cursor-pointer\" onClick={() => handleInventoriesSort('paid')}>\n                                       PAID\n                                       <span>\n                                          <When condition={inventoriesSort.field !== 'paid'}>\n                                             <FaSort className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'paid' && inventoriesSort.order === -1\n                                             }\n                                          >\n                                             <FaSortDown className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={inventoriesSort.field === 'paid' && inventoriesSort.order === 1}\n                                          >\n                                             <FaSortUp className=\"d-inline mx-1\" />\n                                          </When>\n                                       </span>\n                                    </strong>\n                                 </th>\n                              </tr>\n                           </thead>\n                           <tbody>\n                              {query.data?.inventories?.docs.map((e, index) => (\n                                 <tr key={`${e._id}`} className={e.isRemaining && 'tw-bg-red-400 tw-text-gray-50'}>\n                                    <td>\n                                       <strong className={e.isRemaining && 'tw-text-gray-50'}>\n                                          {query.data.inventories?.pagingCounter * (index + 1)}\n                                       </strong>\n                                    </td>\n                                    <td>{e?.supplier?.name ?? 'N/A'}</td>\n                                    <td>{e?.product?.modelNumber ?? 'N/A'}</td>\n                                    <td>{e?.sourcePrice ?? 'N/a'}</td>\n                                    <td>{e?.paid ?? 'N/A'}</td>\n                                    <td>\n                                       <OverlayTrigger\n                                          trigger={['hover', 'hover']}\n                                          placement=\"top\"\n                                          overlay={\n                                             <Popover className=\"tw-border-gray-500\">\n                                                <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                   dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                      ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                      : dayjs(e.createdAt).fromNow()\n                                                }.`}</Popover.Content>\n                                             </Popover>\n                                          }\n                                       >\n                                          <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                       </OverlayTrigger>\n                                    </td>\n                                 </tr>\n                              ))}\n                           </tbody>\n                        </Table>\n                     </Then>\n                     <Else>\n                        <When condition={!query.isLoading}>\n                           <p className=\"tw-m-0\">No Purchases created</p>\n                        </When>\n                     </Else>\n                  </If>\n               </Card.Body>\n            </Card>\n         </When>\n         <When condition={inventoriesLimit > 5 ? true : query.data?.inventories?.totalPages > 1}>\n            <Pagination\n               page={inventoriesPage}\n               onPageChange={setInventoriesPage}\n               onLimitChange={setInventoriesLimit}\n               {..._.omit(query.data, ['docs'])}\n               isLimitDisabled={query.isLoading}\n            />\n         </When>\n      </>\n   );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n   user: auth.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductActions);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/sale/AddSale.js",["353","354","355","356","357"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/purchase/AddPurchase.js",["358"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/customers/CustomerActions.js",["359","360","361","362","363","364"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/suppliers/SupplierActions.js",["365","366","367","368","369","370","371","372","373"],"import useUrlState from '@ahooksjs/use-url-state';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useFormik } from 'formik';\nimport Button from 'jsx/components/Button';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, patch, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ButtonGroup, Card, OverlayTrigger, Pagination, Popover, Table } from 'react-bootstrap';\nimport { AiFillCaretLeft, AiFillSave, AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\nimport { Else, If, Then, When } from 'react-if';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { userRoles } from 'jsx/helpers/enums';\n\nconst SupplierActions = (props) => {\n   const history = useHistory();\n   const params = useParams();\n   const [isError, setIsError] = useState(false);\n\n   const [urlState, setUrlState] = useUrlState({});\n\n   const alert = useAlert();\n   const isEditing = useMemo(\n      () => props.user?.role !== userRoles.CASHIER && urlState?.type === 'edit',\n      [urlState.type]\n   );\n   const isViewSupplier = useMemo(() => urlState?.type === 'view', [urlState.type]);\n   const isAddSupplier = useMemo(() => params?.id === 'add', [params.id]);\n\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [sort, setSort] = useState({ field: 'sourcePrice', order: 1 });\n\n   const query = useQuery(['supplier', params.id], () => get(`/suppliers/id/${params.id}`), {\n      enabled: !isAddSupplier,\n      onError: (err) => {\n         setIsError(true);\n         alert.setErrorAlert({\n            message: 'Invalid URL!',\n            err: { message: ['The page will redirect to manage suppliers.'] },\n            callback: () => history.push('/suppliers'),\n            duration: 3000,\n         });\n      },\n   });\n   const patchMutation = useMutation((payload) => patch(`/suppliers/id/${params.id}`, payload), {\n      onSuccess: () => {\n         history.push('/suppliers');\n      },\n      onError: (err) => {\n         alert.setErrorAlert({\n            message: 'Unable to edit supplier.',\n            err,\n         });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/suppliers', payload), {\n      onSuccess: () => {\n         history.push('/suppliers');\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add supplier', err });\n      },\n   });\n\n   const mutation = useMemo(() => (isEditing ? patchMutation : postMutation), [isEditing, patchMutation, postMutation]);\n\n   if (!isEditing && !isViewSupplier && !isAddSupplier) {\n      history.push('/suppliers');\n   }\n\n   const formik = useFormik({\n      initialValues: {\n         name: '',\n         phone: '',\n         company: '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         mutation.mutate(values);\n      },\n   });\n\n   useEffect(() => {\n      if (isEditing && query.data) {\n         formik.setFieldValue('name', query.data?.supplier?.name ?? '');\n         formik.setFieldValue('phone', query.data?.supplier?.phone ?? '');\n         formik.setFieldValue('company', query.data?.supplier?.company ?? '');\n      }\n   }, [isEditing, query.data]);\n\n   const handleSort = (key) => {\n      setSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n\n   return (\n      <>\n         <PageTItle activeMenu=\"Suppliers\" motherMenu=\"Manage\" />\n         {alert.getAlert()}\n         <Card>\n            <When condition={patchMutation.isLoading || postMutation.isLoading || query.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <If condition={isAddSupplier || isEditing}>\n               <Then>\n                  <form onSubmit={formik.handleSubmit}>\n                     <Card.Header>\n                        <Card.Title>{isEditing ? 'Edit Supplier' : 'Add New Supplier'}</Card.Title>\n                     </Card.Header>\n                     <Card.Body>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Name</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"name\"\n                                 disabled={isError}\n                                 value={formik.values.name}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Phone</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"phone\"\n                                 disabled={isError}\n                                 value={formik.values.phone}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Company</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"company\"\n                                 disabled={isError}\n                                 value={formik.values.company}\n                              />\n                           </div>\n                        </div>\n                     </Card.Body>\n                     <Card.Footer>\n                        <div className=\"row\">\n                           <div className=\"col-xl-12 tw-justify-center\">\n                              <ButtonGroup>\n                                 <Button\n                                    icon={AiFillCaretLeft}\n                                    variant=\"warning light\"\n                                    onClick={() => history.replace('/suppliers')}\n                                    loading={mutation.isLoading}\n                                 >\n                                    Back\n                                 </Button>\n                                 <Button\n                                    icon={AiFillSave}\n                                    variant=\"primary\"\n                                    type=\"submit\"\n                                    loading={mutation.isLoading}\n                                    disabled={isError}\n                                 >\n                                    Save\n                                 </Button>\n                              </ButtonGroup>\n                           </div>\n                        </div>\n                     </Card.Footer>\n                  </form>\n               </Then>\n               <Else>\n                  <Card.Header>\n                     <Card.Title>View Supplier</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Name</label>\n                           <h4>{query.data?.supplier?.name ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Phone</label>\n                           <h4>{query.data?.supplier?.phone ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Company</label>\n                           <h4>{query.data?.supplier?.company ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                  </Card.Body>\n                  <Card>\n                     <When condition={query.isLoading}>\n                        <SpinnerOverlay />\n                     </When>\n                     <Card.Header>\n                        <Card.Title>View Related Purchases</Card.Title>\n                     </Card.Header>\n                     <Card.Body>\n                        <If condition={query.data?.inventories?.totalDocs > 0}>\n                           <Then>\n                              <Table className=\"tw-relative\" responsive>\n                                 <thead>\n                                    <tr>\n                                       <th className=\"width80\">\n                                          <strong>#</strong>\n                                       </th>\n                                       <th>\n                                          <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('supplier')}>\n                                             SUPPLIER\n                                             <span>\n                                                <When condition={sort.field !== 'supplier'}>\n                                                   <FaSort className=\"d-inline mx-1\" />\n                                                </When>\n                                                <When condition={sort.field === 'supplier' && sort.order === -1}>\n                                                   <FaSortDown className=\"d-inline mx-1\" />\n                                                </When>\n                                                <When condition={sort.field === 'supplier' && sort.order === 1}>\n                                                   <FaSortUp className=\"d-inline mx-1\" />\n                                                </When>\n                                             </span>\n                                          </strong>\n                                       </th>\n                                       <th>\n                                          <strong\n                                             className=\"tw-cursor-pointer\"\n                                             onClick={() => handleSort('modelNumber')}\n                                          >\n                                             MODEL NUMBER\n                                             <span>\n                                                <When condition={sort.field !== 'modelNumber'}>\n                                                   <FaSort className=\"d-inline mx-1\" />\n                                                </When>\n                                                <When condition={sort.field === 'modelNumber' && sort.order === -1}>\n                                                   <FaSortDown className=\"d-inline mx-1\" />\n                                                </When>\n                                                <When condition={sort.field === 'modelNumber' && sort.order === 1}>\n                                                   <FaSortUp className=\"d-inline mx-1\" />\n                                                </When>\n                                             </span>\n                                          </strong>\n                                       </th>\n                                       <th>\n                                          <strong\n                                             className=\"tw-cursor-pointer\"\n                                             onClick={() => handleSort('sourcePrice')}\n                                          >\n                                             PRICE\n                                             <span>\n                                                <When condition={sort.field !== 'sourcePrice'}>\n                                                   <FaSort className=\"d-inline mx-1\" />\n                                                </When>\n                                                <When condition={sort.field === 'sourcePrice' && sort.order === -1}>\n                                                   <FaSortDown className=\"d-inline mx-1\" />\n                                                </When>\n                                                <When condition={sort.field === 'sourcePrice' && sort.order === 1}>\n                                                   <FaSortUp className=\"d-inline mx-1\" />\n                                                </When>\n                                             </span>\n                                          </strong>\n                                       </th>\n                                       <th>\n                                          <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('paid')}>\n                                             PAID\n                                             <span>\n                                                <When condition={sort.field !== 'paid'}>\n                                                   <FaSort className=\"d-inline mx-1\" />\n                                                </When>\n                                                <When condition={sort.field === 'paid' && sort.order === -1}>\n                                                   <FaSortDown className=\"d-inline mx-1\" />\n                                                </When>\n                                                <When condition={sort.field === 'paid' && sort.order === 1}>\n                                                   <FaSortUp className=\"d-inline mx-1\" />\n                                                </When>\n                                             </span>\n                                          </strong>\n                                       </th>\n                                    </tr>\n                                 </thead>\n                                 <tbody>\n                                    {query.data?.inventories?.docs.map((e, index) => (\n                                       <tr\n                                          key={`${e._id}`}\n                                          className={e.isRemaining && 'tw-bg-red-400 tw-text-gray-50'}\n                                       >\n                                          <td>\n                                             <strong className={e.isRemaining && 'tw-text-gray-50'}>\n                                                {query.data.inventories?.pagingCounter * (index + 1)}\n                                             </strong>\n                                          </td>\n                                          <td>{e?.supplier?.name ?? 'N/A'}</td>\n                                          <td>{e?.product?.modelNumber ?? 'N/A'}</td>\n                                          <td>{e?.sourcePrice ?? 'N/a'}</td>\n                                          <td>{e?.paid ?? 'N/A'}</td>\n                                          <td>\n                                             {/* <OverlayTrigger\n                                                trigger={['hover', 'hover']}\n                                                placement=\"top\"\n                                                overlay={\n                                                   <Popover className=\"tw-border-gray-500\">\n                                                      <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                         dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                            ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                            : dayjs(e.createdAt).fromNow()\n                                                      }.`}</Popover.Content>\n                                                   </Popover>\n                                                }\n                                             >\n                                                <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                             </OverlayTrigger> */}\n                                          </td>\n                                       </tr>\n                                    ))}\n                                 </tbody>\n                              </Table>\n                           </Then>\n                           <Else>\n                              <When condition={!query.isLoading}>\n                                 <p className=\"tw-m-0\">No Purchases created</p>\n                              </When>\n                           </Else>\n                        </If>\n                     </Card.Body>\n                  </Card>\n                  <When condition={setLimit > 5 ? true : query.data?.inventories?.totalPages > 1}>\n                     <Pagination\n                        page={page}\n                        onPageChange={setPage}\n                        onLimitChange={setLimit}\n                        {..._.omit(query.data, ['docs'])}\n                        isLimitDisabled={query.isLoading}\n                     />\n                  </When>\n               </Else>\n            </If>\n         </Card>\n      </>\n   );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n   user: auth.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SupplierActions);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/index.js",["374","375"],"import React, { memo, useEffect } from 'react';\nimport { setLogin, setLogout } from 'store/auth/actions';\nimport { connect } from 'react-redux';\nimport Nav from './nav';\nimport Footer from './Footer';\nimport { get } from '../helpers';\n\nconst token = localStorage.getItem('auth_token');\n\nconst Layout = ({ children: Children, isPublic, setUser, logout }) => {\n   const getUserProfile = async () => {\n      try {\n         const res = await get(`/auth/decode/${token}`);\n         if (!res?.isConfirmed) {\n            logout();\n            localStorage.clear();\n            window.location = 'page-login';\n         } else {\n            setUser({ ...res, auth_token: token });\n         }\n      } catch (error) {\n         logout();\n         setUser({});\n         localStorage.clear();\n         window.location = 'page-login';\n      }\n   };\n\n   useEffect(() => {\n      if (token) {\n         getUserProfile();\n      }\n   }, [token]);\n\n   const MemoizedNav = memo(Nav);\n   if (isPublic)\n      return (\n         <>\n            <div id=\"main-wrapper\" className=\"show\">\n               <div className=\"container-fluid\">\n                  {/* <Children /> */}\n                  {Children}\n               </div>\n            </div>\n         </>\n      );\n\n   return (\n      <>\n         <div id=\"main-wrapper\" className=\"show\">\n            <MemoizedNav />\n            <div className=\"content-body\">\n               <div className=\"container-fluid\">\n                  {/* <Children /> */}\n                  {Children}\n               </div>\n            </div>\n            <Footer />\n         </div>\n      </>\n   );\n};\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n   setUser: (payload) => dispatch(setLogin(payload)),\n   logout: () => dispatch(setLogout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/suppliers/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/employees/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/index.js",["376"],"import React, { Fragment, useState } from 'react';\nimport SideBar from './SideBar';\nimport NavHader from './NavHader';\nimport Header from './Header';\nimport ChatBox from '../ChatBox';\n\nconst JobieNav = ({ title }) => {\n   const [toggle, setToggle] = useState('');\n   const onClick = (name) => setToggle(toggle === name ? '' : name);\n   return (\n      <>\n         <NavHader />\n         <SideBar />\n         <Header\n            onNote={() => onClick('chatbox')}\n            onNotification={() => onClick('notification')}\n            onProfile={() => onClick('profile')}\n            toggle={toggle}\n            title={title}\n            onBox={() => onClick('box')}\n         />\n         {/* <ChatBox onClick={() => onClick('chatbox')} toggle={toggle} /> */}\n      </>\n   );\n};\n\nexport default JobieNav;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/expenses/index.js",["377","378","379","380","381"],"import { useDebounce } from 'ahooks';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport Button from 'jsx/components/Button';\nimport Pagination from 'jsx/components/Pagination';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { del, get, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport { userRoles } from 'jsx/helpers/enums';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport _ from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport { ButtonGroup, Card, Col, OverlayTrigger, Popover, Row, Table } from 'react-bootstrap';\nimport { AiFillDelete, AiFillEdit, AiFillEye, AiFillPlusCircle, AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport ExpenseTypes from '../expenseTypes';\nimport Salaries from '../salaries';\n\nconst Expenses = (props) => {\n   dayjs.extend(relativeTime);\n   const history = useHistory();\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [sort, setSort] = useState({ field: null, order: -1 });\n   const [search, setSearch] = useState('');\n   const debouncedSearchValue = useDebounce(search, { wait: 500 });\n\n   const alert = useAlert();\n   const queryClient = useQueryClient();\n\n   const query = useQuery(['expenses', page, limit, sort.field, sort.order, debouncedSearchValue], () =>\n      get('/expenses', page, limit, sort.field, sort.order, debouncedSearchValue)\n   );\n   const deleteMutation = useMutation((id) => del(`/expenses/id/${id}`), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('expenses');\n         alert.setAlert({\n            message: 'Sale deleted successfully',\n            variant: 'success',\n         });\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to delete sale', err });\n      },\n   });\n\n   const handleOnClickEdit = (obj) => {\n      history.push({ pathname: `/expenses/${obj._id}`, search: `?type=edit` });\n   };\n\n   const handleOnClickView = (obj) => {\n      history.push({ pathname: `/expenses/${obj._id}`, search: `?type=view` });\n   };\n   const handleOnClickAdd = () => {\n      history.push('/expenses/add');\n   };\n\n   const handleOnClickDelete = (id) => {\n      swal({\n         title: 'Are you sure?',\n         text: 'Once deleted, you will not be able to recover it!',\n         icon: 'warning',\n         buttons: true,\n         dangerMode: true,\n      }).then((willDelete) => {\n         if (willDelete) {\n            deleteMutation.mutate(id);\n         }\n      });\n   };\n\n   const alertMarkup = alert.getAlert();\n\n   const handleSort = (key) => {\n      setSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n   useEffect(() => {\n      if (page > query.data?.totalPages) {\n         setPage((prev) => prev - 1);\n      }\n   }, [page, query.data?.totalPages]);\n\n   return (\n      <>\n         <PageTItle activeMenu=\"Expenses\" motherMenu=\"Diamond Tiles\" />\n         <div className=\"row my-3\">\n            <When condition={props.user?.role !== userRoles.CASHIER}>\n               <div className=\"col-xl-5  my-2\">\n                  <Salaries />\n               </div>\n            </When>\n            <div className={props?.user?.role == userRoles.CASHIER ? 'col-xl-12 my-2' : 'col-xl-7  my-2'}>\n               <ExpenseTypes />\n            </div>\n         </div>\n         {alertMarkup ? (\n            <Row>\n               <Col lg={12}>{alertMarkup}</Col>\n            </Row>\n         ) : null}\n         <div className=\"row\">\n            <Col lg={12}>\n               <Card>\n                  <When condition={query.isLoading || deleteMutation.isLoading}>\n                     <SpinnerOverlay />\n                  </When>\n                  <Card.Header>\n                     <Card.Title>Manage Expenses</Card.Title>\n                     <ButtonGroup className=\"tw-float-right\">\n                        <input\n                           type=\"text\"\n                           className=\"input-rounded tw-rounded-r-none tw-pl-6 tw-shadow-inner tw-ring-1 \"\n                           placeholder=\"Search Expenses...\"\n                           disabled={deleteMutation.isLoading}\n                           onChange={(e) => setSearch(e.target.value)}\n                        />\n                        <Button size=\"sm\" variant=\"primary\" icon={AiFillPlusCircle} onClick={handleOnClickAdd}>\n                           Add New Expense\n                        </Button>\n                     </ButtonGroup>\n                  </Card.Header>\n                  <Card.Body>\n                     <If condition={query.data?.totalDocs > 0}>\n                        <Then>\n                           <Table className=\"tw-relative\" responsive>\n                              <thead>\n                                 <tr>\n                                    <th className=\"width80\">\n                                       <strong>#</strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('title')}>\n                                          TITLE\n                                          <span>\n                                             <When condition={sort.field !== 'title'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'title' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'title' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('type')}>\n                                          TYPE\n                                          <span>\n                                             <When condition={sort.field !== 'type'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'type' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'type' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('amount')}>\n                                          AMOUNT\n                                          <span>\n                                             <When condition={sort.field !== 'amount'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'amount' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'amount' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                 </tr>\n                              </thead>\n                              <tbody>\n                                 {query.data?.docs.map((e, index) => (\n                                    <tr key={`${e._id}`}>\n                                       <td>\n                                          <strong>{query.data.pagingCounter * (index + 1)}</strong>\n                                       </td>\n                                       <td>{e?.title ?? 'N/A'}</td>\n                                       <td>{e?.type?.title ?? 'N/A'}</td>\n                                       <td>{e?.amount ?? 'N/A'}</td>\n                                       <td>\n                                          <OverlayTrigger\n                                             trigger={['hover', 'hover']}\n                                             placement=\"top\"\n                                             overlay={\n                                                <Popover className=\"tw-border-gray-500\">\n                                                   <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                      dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                         ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                         : dayjs(e.createdAt).fromNow()\n                                                   }.`}</Popover.Content>\n                                                </Popover>\n                                             }\n                                          >\n                                             <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                          </OverlayTrigger>\n                                       </td>\n                                       <td>\n                                          <ButtonGroup>\n                                             <Button\n                                                variant=\"dark\"\n                                                size=\"sm\"\n                                                icon={AiFillEye}\n                                                onClick={() => handleOnClickView(e)}\n                                             >\n                                                View\n                                             </Button>\n                                             <When condition={props.user?.role !== userRoles.CASHIER}>\n                                                <Button\n                                                   variant=\"danger\"\n                                                   size=\"sm\"\n                                                   icon={AiFillDelete}\n                                                   onClick={() => handleOnClickDelete(e._id)}\n                                                >\n                                                   Delete\n                                                </Button>\n                                             </When>\n                                          </ButtonGroup>\n                                       </td>\n                                    </tr>\n                                 ))}\n                              </tbody>\n                           </Table>\n                        </Then>\n                        <Else>\n                           <When condition={!query.isLoading && !debouncedSearchValue}>\n                              <p className=\"tw-m-0\">No Expenses created</p>\n                           </When>\n                           <When condition={!query.isLoading && debouncedSearchValue}>\n                              <p className=\"tw-m-0\">No result found!</p>\n                           </When>\n                        </Else>\n                     </If>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </div>\n         <When condition={limit > 5 ? true : query.data?.totalPages > 1}>\n            <Pagination\n               page={page}\n               onPageChange={setPage}\n               onLimitChange={setLimit}\n               {..._.omit(query.data, ['docs'])}\n               isLimitDisabled={query.isLoading || deleteMutation.isLoading}\n            />\n         </When>\n      </>\n   );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n   user: auth.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Expenses);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/dashboard/index.js",["382","383"],"import React, { useState } from 'react';\nimport { Dropdown, Table, ButtonGroup } from 'react-bootstrap';\nimport Button from 'jsx/components/Button';\n\nimport { AiFillEye } from 'react-icons/ai';\n\nconst Dashboard = () => {\n   const [activeModal, setActiveModal] = useState(false);\n   return (\n      <>\n         <div className=\"row\">\n            <div className=\"col-xl col-md-6\">\n               <div className=\"card\">\n                  <div className=\"card-body p-4\">\n                     <span className=\"circle bg-primary\" />\n                     <h2 className=\"fs-16 text-black font-w600 mb-0\">Best Performing Product</h2>\n                     <div className=\"d-flex flex-row justify-content-between mt-2\">\n                        <span className=\"fs-14\">porcelein</span>\n                        <ButtonGroup>\n                           <Button variant=\"info\" size=\"sm\" icon={AiFillEye} onClick={() => {}} />\n                        </ButtonGroup>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl col-md-6\">\n               <div className=\"card\">\n                  <div className=\"card-body p-4\">\n                     <span className=\"circle bg-primary\" />\n                     <h2 className=\"fs-16 text-black font-w600 mb-0\">Worst Performing Product</h2>\n                     <div className=\"d-flex flex-row justify-content-between mt-2\">\n                        <span className=\"fs-14\">porcelein</span>\n                        <ButtonGroup>\n                           <Button variant=\"info\" size=\"sm\" icon={AiFillEye} onClick={() => {}} />\n                        </ButtonGroup>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl col-md-6\">\n               <div className=\"card\">\n                  <div className=\"card-body p-4\">\n                     <span className=\"circle bg-primary\" />\n                     <h2 className=\"fs-16 text-black font-w600 mb-0\">Best Performing Supplier</h2>\n                     <div className=\"d-flex flex-row justify-content-between mt-2\">\n                        <span className=\"fs-14\">HK SUPPlIES</span>\n                        <ButtonGroup>\n                           <Button variant=\"info\" size=\"sm\" icon={AiFillEye} onClick={() => {}} />\n                        </ButtonGroup>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl col-md-6\">\n               <div className=\"card\">\n                  <div className=\"card-body p-4\">\n                     <span className=\"circle bg-primary\" />\n                     <h2 className=\"fs-16 text-black font-w600 mb-0\">Worst Performing Supplier</h2>\n                     <div className=\"d-flex flex-row justify-content-between mt-2\">\n                        <span className=\"fs-14\">OV TRADERS</span>\n                        <ButtonGroup>\n                           <Button variant=\"info\" size=\"sm\" icon={AiFillEye} onClick={() => {}} />\n                        </ButtonGroup>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"row\">\n            <div className=\"col-xl-5 col-xxl-5\">\n               <div className=\"row\">\n                  <div className=\"col-xl-12\">\n                     <div className=\"card\">\n                        <div className=\"card-header d-sm-flex d-block pb-0 border-0\">\n                           <div className=\"d-flex align-items-center\">\n                              <div className=\"mr-auto pr-3\">\n                                 <h4 className=\"text-black fs-20\">Number of Sales</h4>\n                                 {/* <p className=\"fs-13 mb-0 text-black\">Lorem ipsum dolor sit amet, consectetur</p> */}\n                              </div>\n                           </div>\n                           <Dropdown className=\"dropdown mt-sm-0 mt-3\">\n                              <Dropdown.Toggle\n                                 as=\"button\"\n                                 variant=\"\"\n                                 className=\"btn rounded border border-light dropdown-toggle\"\n                              >\n                                 This Year\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item>Last Year</Dropdown.Item>\n                                 {/* <Dropdown.Item>Last 6 Months</Dropdown.Item> */}\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </div>\n                        <div className=\"card-body pb-0 h-100\">{/* <ApexLine3 /> */}</div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n\n            <div className=\"col-xl-7 col-xxl-7\">\n               <div className=\"row\">\n                  <div className=\"col-xl-12 col-md-6\">\n                     <div className=\"card\">\n                        <div className=\"card-header d-sm-flex d-block pb-0 border-0\">\n                           <div className=\"d-flex align-items-center\">\n                              <div className=\"mr-auto pr-3\">\n                                 <h4 className=\"text-black fs-20\">Sales</h4>\n                                 {/* <p className=\"fs-13 mb-0 text-black\">Lorem ipsum dolor sit amet, consectetur</p> */}\n                              </div>\n                           </div>\n                        </div>\n                        <div className=\"card-body text-center\">\n                           <div className=\"d-flex mb-sm-5 mb-3\">\n                              <Table className=\"tw-relative\" responsive>\n                                 <thead>\n                                    <tr>\n                                       <th className=\"width80\">\n                                          <strong>#</strong>\n                                       </th>\n                                       <th>\n                                          <strong>CUSTOMER</strong>\n                                       </th>\n                                       <th>\n                                          <strong>INVENTORY</strong>\n                                       </th>\n                                       <th>\n                                          <strong>QUANTITY</strong>\n                                       </th>\n                                       <th>\n                                          <strong>RETAIL PRICE</strong>\n                                       </th>\n                                       <th>\n                                          <strong>PAID</strong>\n                                       </th>\n                                    </tr>\n                                 </thead>\n                                 <tbody>\n                                    <tr>\n                                       <td>2</td>\n                                       <td>Jane Doe</td>\n                                       <td>porcelein</td>\n                                       <td>1</td>\n                                       <td>2500</td>\n                                       <td>2500</td>\n                                    </tr>\n                                    <tr>\n                                       <td>2</td>\n                                       <td>Jane Doe</td>\n                                       <td>porcelein</td>\n                                       <td>1</td>\n                                       <td>2500</td>\n                                       <td>2500</td>\n                                    </tr>\n                                    <tr>\n                                       <td>3</td>\n                                       <td>John Doe</td>\n                                       <td>porcelein</td>\n                                       <td>3</td>\n                                       <td>1999</td>\n                                       <td>1588</td>\n                                    </tr>\n                                 </tbody>\n                              </Table>\n                           </div>\n                           <ButtonGroup>\n                              <Button icon={AiFillEye}>View More</Button>\n                           </ButtonGroup>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"row\">\n            <div className=\"col-xl-7 col-xxl-7\">\n               <div className=\"row\">\n                  <div className=\"col-xl-12 col-md-6\">\n                     <div className=\"card\">\n                        <div className=\"card-header d-sm-flex d-block pb-0 border-0\">\n                           <div className=\"d-flex align-items-center\">\n                              <div className=\"mr-auto pr-3\">\n                                 <h4 className=\"text-black fs-20\">Purchases</h4>\n                                 {/* <p className=\"fs-13 mb-0 text-black\">Lorem ipsum dolor sit amet, consectetur</p> */}\n                              </div>\n                           </div>\n                        </div>\n                        <div className=\"card-body text-center\">\n                           <div className=\"d-flex mb-sm-5 mb-3\">\n                              <Table className=\"tw-relative\" responsive>\n                                 <thead>\n                                    <tr>\n                                       <th className=\"width80\">\n                                          <strong>#</strong>\n                                       </th>\n                                       <th>\n                                          <strong>SUPPLIER</strong>\n                                       </th>\n                                       <th>\n                                          <strong>MODEL NUMBER</strong>\n                                       </th>\n                                       <th>\n                                          <strong>PRICE</strong>\n                                       </th>\n                                       <th>\n                                          <strong>PAID</strong>\n                                       </th>\n                                    </tr>\n                                 </thead>\n                                 <tbody>\n                                    <tr>\n                                       <td>2</td>\n                                       <td>Jane Doe</td>\n                                       <td>porcelein</td>\n                                       <td>1</td>\n                                       <td>2500</td>\n                                    </tr>\n                                    <tr>\n                                       <td>2</td>\n                                       <td>Jane Doe</td>\n                                       <td>porcelein</td>\n                                       <td>1</td>\n                                       <td>2500</td>\n                                    </tr>\n                                    <tr>\n                                       <td>3</td>\n                                       <td>John Doe</td>\n                                       <td>porcelein</td>\n                                       <td>3</td>\n                                       <td>1999</td>\n                                    </tr>\n                                 </tbody>\n                              </Table>\n                           </div>\n                           <ButtonGroup>\n                              <Button icon={AiFillEye}>View More</Button>\n                           </ButtonGroup>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-5 col-xxl-5\">\n               <div className=\"row\">\n                  <div className=\"col-xl-12\">\n                     <div className=\"card\">\n                        <div className=\"card-header d-sm-flex d-block pb-0 border-0\">\n                           <div className=\"d-flex align-items-center\">\n                              <div className=\"mr-auto pr-3\">\n                                 <h4 className=\"text-black fs-20\">Number of Purchases</h4>\n                                 {/* <p className=\"fs-13 mb-0 text-black\">Lorem ipsum dolor sit amet, consectetur</p> */}\n                              </div>\n                           </div>\n                           <Dropdown className=\"dropdown mt-sm-0 mt-3\">\n                              <Dropdown.Toggle\n                                 as=\"button\"\n                                 variant=\"\"\n                                 className=\"btn rounded border border-light dropdown-toggle\"\n                              >\n                                 This Year\n                              </Dropdown.Toggle>\n                              <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                 <Dropdown.Item>Last Year</Dropdown.Item>\n                                 {/* <Dropdown.Item>Last 6 Months</Dropdown.Item> */}\n                              </Dropdown.Menu>\n                           </Dropdown>\n                        </div>\n                        <div className=\"card-body pb-0 h-100\">{/* <ApexLine3 /> */}</div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"row\">\n            <div className=\"col-xl-2\">\n               <div className=\"card\">\n                  <div className=\"card-body p-4\">\n                     <span className=\"circle bg-primary\" />\n                     <h2 className=\"fs-16 text-black font-w600 mb-0\">Net Profit</h2>\n                     <div className=\"d-flex flex-row justify-content-between mt-2\">\n                        <span className=\"fs-14\">24%</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-2\">\n               <div className=\"card\">\n                  <div className=\"card-body p-4\">\n                     <span className=\"circle bg-primary\" />\n                     <h2 className=\"fs-16 text-black font-w600 mb-0\">Gross Profit</h2>\n                     <div className=\"d-flex flex-row justify-content-between mt-2\">\n                        <span className=\"fs-14\">24%</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl col-md-6\">\n               <div className=\"card\">\n                  <div className=\"card-body p-4\">\n                     <span className=\"circle bg-primary\" />\n                     <h2 className=\"fs-16 text-black font-w600 mb-0\">Recent Sale</h2>\n                     <div className=\"d-flex flex-row justify-content-between mt-2\">\n                        <span className=\"fs-14\">porcelein</span>\n                        <ButtonGroup>\n                           <Button variant=\"info\" size=\"sm\" icon={AiFillEye} onClick={() => {}} />\n                        </ButtonGroup>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl col-md-6\">\n               <div className=\"card\">\n                  <div className=\"card-body p-4\">\n                     <span className=\"circle bg-primary\" />\n                     <h2 className=\"fs-16 text-black font-w600 mb-0\">Recent Purchase</h2>\n                     <div className=\"d-flex flex-row justify-content-between mt-2\">\n                        <span className=\"fs-14\">porcelein</span>\n                        <ButtonGroup>\n                           <Button variant=\"info\" size=\"sm\" icon={AiFillEye} onClick={() => {}} />\n                        </ButtonGroup>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-12\">\n               <div className=\"card\">\n                  <div className=\"card-header d-sm-flex d-block pb-0 border-0\">\n                     <div className=\"d-flex align-items-center\">\n                        <div className=\"mr-auto pr-3\">\n                           <h4 className=\"text-black fs-20\">Expenses</h4>\n                           {/* <p className=\"fs-13 mb-0 text-black\">Lorem ipsum dolor sit amet, consectetur</p> */}\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"card-body p-4 text-center\">\n                     <div className=\"d-flex mb-sm-5 mb-3\">\n                        <Table className=\"tw-relative\" responsive>\n                           <thead>\n                              <tr>\n                                 <th className=\"width80\">\n                                    <strong>#</strong>\n                                 </th>\n                                 <th>\n                                    <strong>TITLE</strong>\n                                 </th>\n                                 <th>\n                                    <strong>TYPE</strong>\n                                 </th>\n                                 <th>\n                                    <strong>EMPLOYEE</strong>\n                                 </th>\n                                 <th>\n                                    <strong>AMOUNT</strong>\n                                 </th>\n                              </tr>\n                           </thead>\n                           <tbody>\n                              <tr>\n                                 <td>2</td>\n                                 <td>Jane Doe</td>\n                                 <td>misc</td>\n                                 <td>1</td>\n                                 <td>2500</td>\n                              </tr>\n                              <tr>\n                                 <td>2</td>\n                                 <td>Jane Doe</td>\n                                 <td>misc</td>\n                                 <td>1</td>\n                                 <td>2500</td>\n                              </tr>\n                              <tr>\n                                 <td>3</td>\n                                 <td>John Doe</td>\n                                 <td>misc</td>\n                                 <td>3</td>\n                                 <td>1999</td>\n                              </tr>\n                           </tbody>\n                        </Table>\n                     </div>\n                     <ButtonGroup>\n                        <Button icon={AiFillEye}>View More</Button>\n                     </ButtonGroup>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </>\n   );\n};\n\nexport default Dashboard;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/customers/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/products/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/purchase/index.js",["384","385","386","387","388"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/sale/index.js",["389","390","391","392","393"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/Ext.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/PageTitle.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Button.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/SpinnerOverlay.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/units/index.js",["394","395","396","397","398","399","400","401","402","403","404"],"import useUrlState from '@ahooksjs/use-url-state';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport Button from 'jsx/components/Button';\nimport ModalWrapper from 'jsx/components/ModalWrapper';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { del, get, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ButtonGroup, Card, Col, OverlayTrigger, Popover, Row, Table } from 'react-bootstrap';\nimport { AiFillDelete, AiFillPlusCircle, AiOutlineQuestionCircle, AiFillEye } from 'react-icons/ai';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport { userRoles } from 'jsx/helpers/enums';\nimport CreatableSelect from '../../components/CreatableSelect';\n\nconst Units = (props) => {\n   const history = useHistory();\n   dayjs.extend(relativeTime);\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [urlState, setUrlState] = useUrlState({});\n   const [search, setSearch] = useState('');\n\n   const [showModal, setShowModal] = useState(false);\n   const [selectedRow, setSelectedRow] = useState(null);\n\n   const alert = useAlert();\n\n   const queryClient = useQueryClient();\n\n   const query = useQuery(['units', page, limit, search], () => get('/units', page, limit, '', '', search));\n   const getTypes = useQuery('types', () => get('/types'));\n   const deleteMutation = useMutation((id) => del(`/units/id/${id}`), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('units');\n         alert.setAlert({\n            message: 'Unit deleted successfully',\n            variant: 'success',\n         });\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to delete Unit', err });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/units', payload), {\n      onSuccess: () => {\n         setShowModal(false);\n         setUrlState({});\n         query.refetch();\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add unit', err });\n      },\n   });\n   const postTypeMutation = useMutation((payload) => post('/types', payload), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('types');\n      },\n   });\n\n   const isAdd = useMemo(() => urlState?.action === 'add', [urlState.action]);\n   const mutation = useMemo(() => postMutation, [postMutation]);\n\n   const formik = useFormik({\n      initialValues: {\n         title: '',\n         value: '',\n         type: '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         mutation.mutate(values);\n      },\n   });\n\n   const handleOnClickAdd = () => {\n      setShowModal(true);\n      formik.setFieldValue('title', '');\n      formik.setFieldValue('value', '');\n      formik.setFieldValue('type', '');\n      // setUrlState({ action: 'add' });\n   };\n\n   const handleOnClickDelete = (id) => {\n      swal({\n         title: 'Are you sure?',\n         text: 'Once deleted, you will not be able to recover it!',\n         icon: 'warning',\n         buttons: true,\n         dangerMode: true,\n      }).then((willDelete) => {\n         if (willDelete) {\n            deleteMutation.mutate(id);\n         }\n      });\n   };\n   const handleOnClickView = (id) => {\n      history.push(`/products/units/${id}`);\n   };\n\n   const handleCreateType = (title) => {\n      postTypeMutation.mutate({ title });\n\n      // history.push({ pathname: '/types', search: `?action=add&title=${title}&redirect=/units?action=add` });\n   };\n\n   const alertMarkup = alert.getAlert();\n\n   return (\n      <>\n         {/* <PageTItle activeMenu=\"units\" motherMenu=\"Manage\" /> */}\n         {/* <div className=\"row tw-mb-8\">\n            <div className=\"col-xl-6\">\n               <Button variant=\"primary\" icon={AiFillPlusCircle} onClick={handleOnClickAdd}>\n                  Add New Unit\n               </Button>\n            </div>\n         </div> */}\n         {alertMarkup ? (\n            <Row>\n               <Col lg={12}>{alertMarkup}</Col>\n            </Row>\n         ) : null}\n         <Card className=\"h-100\">\n            <When condition={query.isLoading || deleteMutation.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <Card.Header>\n               <Card.Title>Manage units</Card.Title>\n               <Button size=\"sm\" variant=\"primary\" icon={AiFillPlusCircle} onClick={handleOnClickAdd}>\n                  Add New Unit\n               </Button>\n            </Card.Header>\n            <Card.Body>\n               <If condition={query.data?.length > 0}>\n                  <Then>\n                     <Table className=\"tw-relative\" responsive>\n                        <thead>\n                           <tr>\n                              <th className=\"width80\">\n                                 <strong>#</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\">TITLE</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\">VALUE</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\">TYPE</strong>\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {query.data?.map((e, index) => (\n                              <tr key={`${e._id}`}>\n                                 <td>\n                                    <strong>{index + 1}</strong>\n                                 </td>\n                                 <td>{e.title}</td>\n                                 <td>{e.value}</td>\n                                 <td>{(e.type && e.type?.title) ?? 'N/A'}</td>\n                                 <td>\n                                    <OverlayTrigger\n                                       trigger={['hover', 'hover']}\n                                       placement=\"top\"\n                                       overlay={\n                                          <Popover className=\"tw-border-gray-500\">\n                                             <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                   ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                   : dayjs(e.createdAt).fromNow()\n                                             }.`}</Popover.Content>\n                                          </Popover>\n                                       }\n                                    >\n                                       <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                    </OverlayTrigger>\n                                 </td>\n                                 <When condition={props.user?.role !== userRoles.CASHIER}>\n                                    <td>\n                                       <Button\n                                          variant=\"danger\"\n                                          size=\"sm\"\n                                          icon={AiFillDelete}\n                                          onClick={() => handleOnClickDelete(e._id)}\n                                       />\n                                    </td>\n                                 </When>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </Table>\n                  </Then>\n                  <Else>\n                     <When condition={!query.isLoading}>\n                        <p className=\"tw-m-0\">No units created</p>\n                     </When>\n                  </Else>\n               </If>\n            </Card.Body>\n         </Card>\n\n         {/* ADD Modal */}\n         <ModalWrapper\n            show={showModal}\n            onHide={() => {\n               setShowModal(false);\n               setUrlState({});\n            }}\n            title=\"Add New Unit\"\n            isLoading={query.isLoading || postMutation.isLoading}\n            size=\"md\"\n            onSubmit={formik.handleSubmit}\n            submitButtonText=\"Confirm\"\n         >\n            <When condition={getTypes.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <form onSubmit={formik.handleSubmit}>\n               <div className=\"row\">\n                  <div className=\"form-group col-xl-6\">\n                     <label className=\"col-form-label\">Title</label>\n                     <input\n                        className=\"form-control\"\n                        onChange={formik.handleChange}\n                        type=\"text\"\n                        name=\"title\"\n                        value={formik.values.title}\n                     />\n                  </div>\n               </div>\n               <div className=\"row\">\n                  <div className=\"form-group col-xl-6\">\n                     <label className=\"col-form-label\">Value</label>\n                     <input\n                        className=\"form-control\"\n                        onChange={formik.handleChange}\n                        type=\"text\"\n                        name=\"value\"\n                        value={formik.values.value}\n                     />\n                  </div>\n                  <button type=\"submit\" className=\"tw-invisible\" />\n               </div>\n            </form>\n            <div className=\"row\">\n               <div className=\"form-group col-xl-6\">\n                  <label className=\"col-form-label\">Type</label>\n                  <CreatableSelect\n                     isClearable\n                     onChange={(e) => formik.setFieldValue('type', e?._id)}\n                     options={\n                        getTypes.data?.length > 0 &&\n                        getTypes.data.map((e) => ({ ...e, label: e.title, value: e.title }))\n                     }\n                     onCreateOption={handleCreateType}\n                  />\n               </div>\n            </div>\n         </ModalWrapper>\n      </>\n   );\n};\nconst mapStateToProps = ({ auth }) => ({\n   user: auth.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Units));\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Pagination.js",["405","406"],"import cls from 'classnames';\nimport { useState } from 'react';\nimport { AiOutlineDoubleLeft, AiOutlineDoubleRight, AiOutlineLeft, AiOutlineRight } from 'react-icons/ai';\nimport Select from './Select';\n\nconst getOption = (v) => ({ value: v, label: v });\nconst options = [getOption(5), getOption(10), getOption(25)];\n\nconst PaginationItem = ({\n   children,\n   className = '',\n   disabled,\n   first = false,\n   last = false,\n   active = false,\n   ...props\n}) => (\n   <li\n      {...props}\n      className={cls(\n         'tw-transition-all tw-cursor-pointer tw-flex tw-items-center tw-text-[#7E7E7E] tw-px-[12px] tw-py-[6px] tw-bg-white tw-border tw-border-solid',\n         className,\n         { 'tw-border-[#44bdec] tw-bg-[#44bdec] tw-text-white': active },\n         { 'tw-cursor-not-allowed': disabled },\n         { 'hover:tw-border-[#44bdec] hover:tw-bg-[#44bdec] hover:tw-text-white': !disabled },\n         { 'tw-rounded-l-md': first },\n         { 'tw-rounded-r-md': last }\n      )}\n   >\n      {children}\n   </li>\n);\n\nconst FirstPage = (props) => (\n   <PaginationItem first {...props}>\n      <AiOutlineDoubleLeft />\n   </PaginationItem>\n);\n\nconst PrevPage = (props) => (\n   <PaginationItem {...props}>\n      <AiOutlineLeft />\n   </PaginationItem>\n);\n\nconst EllipsisPage = (props) => (\n   <PaginationItem disabled {...props}>\n      ...\n   </PaginationItem>\n);\n\nconst NextPage = (props) => (\n   <PaginationItem {...props}>\n      <AiOutlineRight />\n   </PaginationItem>\n);\n\nconst LastPage = (props) => (\n   <PaginationItem last {...props}>\n      <AiOutlineDoubleRight />\n   </PaginationItem>\n);\n\nconst Page = ({ children, ...props }) => <PaginationItem {...props}>{children}</PaginationItem>;\n\nconst Pagination = ({\n   isLimitDisabled,\n   page,\n   onPageChange,\n   onLimitChange,\n   totalPages,\n   hasNextPage,\n   hasPrevPage,\n   totalDocs,\n}) => {\n   const [option, setOption] = useState(getOption(5));\n\n   const renderPagination = () => {\n      const pages = [];\n\n      const handleFirstPage = () => {\n         if (page > 1) onPageChange(1);\n      };\n\n      const handlePrevPage = () => {\n         if (page > 1) onPageChange((prev) => prev - 1);\n      };\n\n      const handleNextPage = () => {\n         if (page < totalPages) onPageChange((prev) => prev + 1);\n      };\n\n      const handleLastPage = () => {\n         if (page < totalPages) onPageChange(totalPages);\n      };\n\n      pages.push(<FirstPage disabled={page === 1} onClick={handleFirstPage} />);\n      pages.push(<PrevPage disabled={page === 1} onClick={handlePrevPage} />);\n\n      for (let currPage = 0; currPage < totalPages; currPage++) {\n         pages.push(\n            <Page active={page === currPage + 1} onClick={() => onPageChange(currPage + 1)}>\n               {currPage + 1}\n            </Page>\n         );\n      }\n\n      pages.push(<NextPage disabled={!hasNextPage} onClick={handleNextPage} />);\n      pages.push(<LastPage disabled={!hasNextPage} onClick={handleLastPage} />);\n\n      return pages;\n   };\n\n   return (\n      <div className=\"tw-flex tw-flex-col tw-items-center tw-gap-3 tw-overflow-visible\">\n         <p className=\"tw-m-0\">{`Showing ${\n            // eslint-disable-next-line no-nested-ternary\n            totalPages === page ? totalDocs : page * option.value > totalDocs ? totalDocs : page * option.value\n         } of ${totalDocs}`}</p>\n         <ul className=\"tw-flex \">{renderPagination()}</ul>\n         <Select\n            isDisabled={isLimitDisabled}\n            className=\"tw-mb-6\"\n            options={options}\n            placeholder=\"Select Page Size\"\n            value={option}\n            onChange={(opt) => {\n               setOption(opt);\n               onLimitChange(opt.value);\n            }}\n         />\n      </div>\n   );\n};\n\nexport default Pagination;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/types/index.js",["407","408","409"],"import useUrlState from '@ahooksjs/use-url-state';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport Button from 'jsx/components/Button';\nimport ModalWrapper from 'jsx/components/ModalWrapper';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { del, get, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport React, { useMemo, useState } from 'react';\nimport { ButtonGroup, Card, Col, OverlayTrigger, Popover, Row, Table } from 'react-bootstrap';\nimport { AiFillDelete, AiFillEye, AiFillPlusCircle, AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { connect } from 'react-redux';\nimport { userRoles } from 'jsx/helpers/enums';\n\nconst Types = (props) => {\n   const history = useHistory();\n   dayjs.extend(relativeTime);\n   const [urlState, setUrlState] = useUrlState({});\n\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [search, setSearch] = useState('');\n   const [showModal, setShowModal] = useState(false);\n   const [title, setTitle] = useState('');\n\n   const alert = useAlert();\n   const queryClient = useQueryClient();\n\n   const query = useQuery('types', () => get('/types', page, limit, '', '', search));\n   const postMutation = useMutation((payload) => post('/types', payload), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('units');\n         if (urlState.redirect) {\n            history.replace(urlState.redirect);\n         }\n         setShowModal(false);\n         query.refetch();\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add unit', err });\n      },\n   });\n   const deleteMutation = useMutation((id) => del(`/types/id/${id}`), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('types');\n         alert.setAlert({\n            message: 'Type deleted successfully',\n            variant: 'success',\n         });\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to delete Type', err });\n      },\n   });\n\n   const mutation = useMemo(() => postMutation, [postMutation]);\n\n   const handleOnClickAdd = () => {\n      setShowModal(true);\n      setTitle('');\n      // setUrlState({ action: 'add' });\n   };\n\n   const handleOnClickDelete = (id) => {\n      swal({\n         title: 'Are you sure?',\n         text: 'Once deleted, you will not be able to recover it!',\n         icon: 'warning',\n         buttons: true,\n         dangerMode: true,\n      }).then((willDelete) => {\n         if (willDelete) {\n            deleteMutation.mutate(id);\n         }\n      });\n   };\n   const handleOnClickView = (id) => {\n      history.push(`/products/types/${id}`);\n   };\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      mutation.mutate({ title });\n   };\n   const alertMarkup = alert.getAlert();\n\n   return (\n      <>\n         {alertMarkup ? (\n            <Row>\n               <Col lg={12}>{alertMarkup}</Col>\n            </Row>\n         ) : null}\n         <Card className=\"h-100\">\n            <When condition={query.isLoading || deleteMutation.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <Card.Header>\n               <Card.Title>Manage types</Card.Title>\n               <Button size=\"sm\" variant=\"primary\" icon={AiFillPlusCircle} onClick={handleOnClickAdd}>\n                  Add New Type\n               </Button>\n            </Card.Header>\n            <Card.Body>\n               <If condition={query.data?.length > 0}>\n                  <Then>\n                     <Table className=\"tw-relative\" responsive>\n                        <thead>\n                           <tr>\n                              <th className=\"width80\">\n                                 <strong>#</strong>\n                              </th>\n                              <th>\n                                 <strong>TITLE</strong>\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {query.data?.map((e, index) => (\n                              <tr key={`${e._id}`}>\n                                 <td>\n                                    <strong>{index + 1}</strong>\n                                 </td>\n                                 <td>{e.title}</td>\n                                 <td>\n                                    <OverlayTrigger\n                                       trigger={['hover', 'hover']}\n                                       placement=\"top\"\n                                       overlay={\n                                          <Popover className=\"tw-border-gray-500\">\n                                             <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                   ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                   : dayjs(e.createdAt).fromNow()\n                                             }.`}</Popover.Content>\n                                          </Popover>\n                                       }\n                                    >\n                                       <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                    </OverlayTrigger>\n                                 </td>\n                                 <td>\n                                    <ButtonGroup>\n                                       <Button\n                                          variant=\"dark\"\n                                          size=\"sm\"\n                                          icon={AiFillEye}\n                                          onClick={() => handleOnClickView(e._id)}\n                                       />\n                                       <When condition={props.user?.role !== userRoles.CASHIER}>\n                                          <Button\n                                             variant=\"danger\"\n                                             size=\"sm\"\n                                             icon={AiFillDelete}\n                                             onClick={() => handleOnClickDelete(e._id)}\n                                          />\n                                       </When>\n                                    </ButtonGroup>\n                                 </td>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </Table>\n                  </Then>\n                  <Else>\n                     <When condition={!query.isLoading}>\n                        <p className=\"tw-m-0\">No types created</p>\n                     </When>\n                  </Else>\n               </If>\n            </Card.Body>\n         </Card>\n         {/* <When condition={limit > 5 ? true : query.data?.totalPages > 1}>\n            <Pagination\n               page={page}\n               onPageChange={setPage}\n               onLimitChange={setLimit}\n               {..._.omit(query.data)}\n               isLimitDisabled={query.isLoading || deleteMutation.isLoading}\n            />\n         </When> */}\n         <ModalWrapper\n            show={showModal}\n            onHide={() => {\n               setShowModal(false);\n               setUrlState({});\n            }}\n            title=\"Add New Type\"\n            isLoading={query.isLoading || postMutation.isLoading}\n            size=\"md\"\n            onSubmit={handleSubmit}\n            submitButtonText=\"Confirm\"\n         >\n            <form onSubmit={handleSubmit}>\n               <div className=\"row\">\n                  <div className=\"form-group col-xl-6\">\n                     <label className=\"col-form-label\">Title</label>\n                     <input\n                        className=\"form-control\"\n                        onChange={(e) => setTitle(e.target.value)}\n                        type=\"text\"\n                        name=\"title\"\n                        value={title}\n                     />\n                     <button type=\"submit\" className=\"tw-invisible\" />\n                  </div>\n               </div>\n            </form>\n         </ModalWrapper>\n      </>\n   );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n   user: auth.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Types));\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/useAlert.js",["410","411"],"import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { When } from 'react-if';\nimport cls from 'classnames';\nimport { getError } from './server';\n\nexport const useAlert = () => {\n   const [isShowing, setIsShowing] = useState(false);\n   const [message, setMessage] = useState('');\n   const [variant, setVariant] = useState('success');\n\n   const callback = useRef(null);\n   const timeout = useRef(null);\n\n   // eslint-disable-next-line arrow-body-style\n   useEffect(() => {\n      return () => {\n         if (timeout.current) clearTimeout(timeout.current);\n      };\n   }, []);\n\n   const resetTimeout = useCallback((duration) => {\n      if (timeout.current) clearTimeout(timeout.current);\n      timeout.current = setTimeout(() => {\n         setIsShowing(false);\n         timeout.current = null;\n         if (callback.current) callback.current();\n      }, duration);\n   }, []);\n\n   const getAlert = useCallback(\n      () =>\n         isShowing ? (\n            <Alert\n               className=\"alert-dismissible fade show\"\n               variant={variant}\n               dismissible\n               onClose={() => setIsShowing(false)}\n            >\n               <p className={cls(`tw-m-0 tw-opacity-60`, { 'tw-text-black': variant === 'success' })}>{message}</p>\n            </Alert>\n         ) : null,\n      [isShowing, message, variant]\n   );\n\n   const setAlert = useCallback(\n      ({ message: msg = '', variant: v = 'success', callback: cb = null, duration: d = 3000 }) => {\n         callback.current = cb;\n         resetTimeout(d);\n         setIsShowing(true);\n         setMessage(msg);\n         setVariant(v);\n      },\n      [resetTimeout]\n   );\n\n   const setErrorAlert = useCallback(\n      ({ message: msg = 'Unable to dispatch action', err, callback: cb = null, duration: d = 6000 }) => {\n         resetTimeout(d);\n         console.log(err.response);\n         const m = (\n            <>\n               <strong>{msg}</strong>\n               <br />\n               {getError(err).map((e, i, a) => (\n                  <React.Fragment key={`error-${i}`}>\n                     <p className=\"tw-m-0\">{e}</p>\n                     {i < a.length - 2 ? <br /> : null}\n                  </React.Fragment>\n               ))}\n            </>\n         );\n\n         callback.current = cb;\n         setIsShowing(true);\n         setMessage(m);\n         setVariant('danger');\n      },\n      [resetTimeout]\n   );\n\n   const alert = useMemo(() => ({ getAlert, setAlert, setErrorAlert }), [getAlert, setAlert, setErrorAlert]);\n\n   return alert;\n};\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/server.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Select.js",["412","413"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/ModalWrapper.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/CreatableSelect.js",["414","415"],"import Creatable from 'react-select/creatable';\n\nconst selectStyles = {\n   control: (provided, state) => {\n      provided.borderColor = state.menuIsOpen ? '#44bdec' : 'hsl(0, 0%, 80%)';\n      provided.boxShadow = state.menuIsOpen ? '0 0 0 1px #44bdec' : '';\n      provided['&:hover'] = { borderColor: '#44bdec' };\n      provided.justifyContent = 'center';\n      provided.paddingTop = '0.2rem';\n      provided.paddingBottom = '0.2rem';\n\n      return provided;\n   },\n   valueContainer: (provided, state) => {\n      provided.justifyContent = 'center';\n      return provided;\n   },\n   menu: (provided, state) => {\n      provided.textAlign = 'center';\n      return provided;\n   },\n   option: (provided, state) => {\n      provided.backgroundColor = state.isSelected || state.isFocused ? '#44bdec' : 'transparent';\n\n      if (state.isFocused) provided.color = 'white';\n      return provided;\n   },\n};\n\nconst Select = ({ className = '', ...props }) => (\n   <Creatable menuPlacement=\"auto\" className={`tw-w-[auto] ${className}`} styles={selectStyles} {...props} />\n);\n\nexport default Select;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/useQuery.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/ChatBox.js",["416"],"import React, { useState } from 'react';\n\n/// Scroll\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nconst ChatBox = ({ onClick, toggle }) => {\n   const [toggleTab, settoggleTab] = useState(window.location.hash.slice(1) ? window.location.hash.slice(1) : 'chat');\n\n   const dataToggle = [\n      { href: '#notes', name: 'Notes' },\n      { href: '#alerts', name: 'Alerts' },\n      { href: '#chat', name: 'Chat' },\n   ];\n\n   return (\n      <div className={`chatbox ${toggle === 'chatbox' ? 'active' : ''}`}>\n         <div className=\"chatbox-close\" label=\"chatbox-close\" role=\"button\" tabIndex=\"0\" onClick={() => onClick()} />\n         <div className=\"custom-tab-1\">\n            <ul className=\"nav nav-tabs\">\n               {dataToggle.map((data, i) => (\n                  <li className=\"nav-item\" key={i}>\n                     <a\n                        className={`nav-link ${toggleTab === data.name.toLocaleLowerCase() ? 'active' : ''}`}\n                        data-toggle=\"tab\"\n                        href={data.href}\n                        onClick={() => settoggleTab(data.name.toLocaleLowerCase())}\n                     >\n                        {data.name}\n                     </a>\n                  </li>\n               ))}\n            </ul>\n            <div className=\"tab-content\">\n               {/* <Chat PerfectScrollbar={PerfectScrollbar} toggle={toggle} toggleTab={toggleTab} />\n               <Notes PerfectScrollbar={PerfectScrollbar} toggle={toggle} toggleTab={toggleTab} />\n               <Alerts PerfectScrollbar={PerfectScrollbar} toggle={toggle} toggleTab={toggleTab} /> */}\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default ChatBox;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/Header.js",["417","418","419","420","421"],"import React from 'react';\n/// Image\nimport Avatar from 'react-avatar';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { setLogout } from 'store/auth/actions';\n\nconst pages = ['products', 'suppliers', 'customers', 'users', 'employees', 'purchase', 'sale', 'khaata', 'expenses'];\n\nconst Header = ({ onNote, toggle, onProfile, onNotification, onBox, logout }) => {\n   const history = useHistory();\n   const path = window.location.pathname.split('/');\n   const name = path[path.length - 1].split('-');\n   const filterName = name.length >= 3 ? name.filter((n, i) => i > 0) : name;\n\n   let finalName = '';\n\n   for (const page of pages) {\n      if (filterName.includes(page)) {\n         finalName = filterName.find((f) => f === page);\n         break;\n      }\n   }\n\n   const handleLogout = () => localStorage.clear();\n\n   React.useEffect(() => {\n      const token = localStorage.getItem('auth_token');\n      if (!token) {\n         logout();\n         localStorage.clear();\n         history.push('/page-login');\n      }\n   }, []);\n\n   return (\n      <div className=\"header\">\n         <div className=\"header-content\">\n            <nav className=\"navbar navbar-expand\">\n               <div className=\"collapse navbar-collapse justify-content-between\">\n                  <div className=\"header-left\">\n                     <div className=\"dashboard_bar\" style={{ textTransform: 'capitalize' }}>\n                        {finalName || 'Dashboard'}\n                     </div>\n                  </div>\n                  <ul className=\"navbar-nav header-right\">\n                     <li className=\"nav-item dropdown header-profile\">\n                        <Link\n                           to=\"#\"\n                           role=\"button\"\n                           data-toggle=\"dropdown\"\n                           className={`nav-item dropdown header-profile ${toggle === 'profile' ? 'show' : ''}`}\n                           onClick={() => onProfile()}\n                        >\n                           {/* <img alt=\"Profile\" src={profile} width={20} /> */}\n                           <Avatar name=\"Foo Bar\" size=\"38\" textSizeRatio={2.9} round />\n                        </Link>\n                        <div className={`dropdown-menu dropdown-menu-right ${toggle === 'profile' ? 'show' : ''}`}>\n                           <Link to=\"/\" className=\"dropdown-item ai-icon\" onClick={handleLogout}>\n                              <svg\n                                 id=\"icon-logout\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                                 className=\"text-danger\"\n                                 width={18}\n                                 height={18}\n                                 viewBox=\"0 0 24 24\"\n                                 fill=\"none\"\n                                 stroke=\"currentColor\"\n                                 strokeWidth={2}\n                                 strokeLinecap=\"round\"\n                                 strokeLinejoin=\"round\"\n                              >\n                                 <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\n                                 <polyline points=\"16 17 21 12 16 7\" />\n                                 <line x1={21} y1={12} x2={9} y2={12} />\n                              </svg>\n                              <span className=\"ml-2\">Logout </span>\n                           </Link>\n                        </div>\n                     </li>\n                  </ul>\n               </div>\n            </nav>\n         </div>\n      </div>\n   );\n};\n\nconst mapStateToProps = ({ auth }) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n   logout: () => dispatch(setLogout()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/NavHader.js",["422","423"],"import React, { useState } from 'react';\n\n/// React router dom\nimport { Link } from 'react-router-dom';\n\n/// images\nimport logo from '../../../images/logo.png';\nimport logoText from '../../../images/logo-text.png';\n\nconst NavHader = () => {\n   const [toggle, setToggle] = useState(false);\n   return (\n      <div className=\"nav-header\">\n         <Link to=\"/\" className=\"brand-logo\">\n            {/* <img className=\"logo-abbr\" src={logo} alt=\"\" />\n            <img className=\"logo-compact\" src={logoText} alt=\"\" /> */}\n            {/* <img className=\"brand-title\" src={logoText} alt=\"\" /> */}\n            <h1 className=\"brand-title tw-text-2xl tw-text-black tw-font-bold\">Diamond Tiles</h1>\n         </Link>\n\n         <div className=\"nav-control\" role=\"button\" tabIndex=\"0\" onClick={() => setToggle(!toggle)}>\n            <div className={`hamburger ${toggle ? 'is-active' : ''}`}>\n               <span className=\"line\" />\n               <span className=\"line\" />\n               <span className=\"line\" />\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default NavHader;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/SideBar.js",["424","425","426"],"/// Menu\nimport MetisMenu from 'metismenujs';\nimport React, { Component, useEffect } from 'react';\n/// Scroll\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n/// Link\nimport { Link, useLocation } from 'react-router-dom';\nimport { When } from 'react-if';\n\nimport { connect } from 'react-redux';\nimport { setLogin } from 'store/auth/actions';\nimport { userRoles } from 'jsx/helpers/enums';\n/// Active menu\nconst manage = ['/employees', '/customers', '/products', '/users', '/types', '/units'];\n\nclass MM extends Component {\n   componentDidMount() {\n      this.$el = this.el;\n      this.mm = new MetisMenu(this.$el);\n   }\n\n   componentWillUnmount() {\n      this.mm.dispose();\n   }\n\n   render() {\n      return (\n         <div className=\"mm-wrapper\">\n            <ul className=\"metismenu\" ref={(el) => (this.el = el)}>\n               {this.props.children}\n            </ul>\n         </div>\n      );\n   }\n}\n\nconst SideBar = (props) => {\n   const { pathname: path } = useLocation();\n\n   useEffect(() => {\n      const btn = document.querySelector('.nav-control');\n      const aaa = document.querySelector('#main-wrapper');\n\n      function toggleFunc() {\n         return aaa.classList.toggle('menu-toggle');\n      }\n\n      btn.addEventListener('click', toggleFunc);\n   }, []);\n\n   return (\n      <div className=\"deznav\">\n         <PerfectScrollbar className=\"deznav-scroll\">\n            <MM className=\"metismenu\" id=\"menu\">\n               <When condition={props.user?.role !== userRoles.CASHIER}>\n                  <li className={path === '/dashboard' ? 'mm-active' : ''}>\n                     <Link className=\"\" to=\"/dashboard\" aria-expanded=\"false\">\n                        <i className=\"flaticon-381-networking\" />\n                        <span className=\"nav-text\">Dashboard</span>\n                     </Link>\n                  </li>\n               </When>\n               <li className={path === '/inventory' ? 'mm-active' : ''}>\n                  <Link className=\"\" to=\"/inventory\" aria-expanded=\"false\">\n                     <i className=\"flaticon-381-notepad\" />\n                     <span className=\"nav-text\">Inventory</span>\n                  </Link>\n               </li>\n               <li className={`${manage.includes(path.slice(1)) ? 'mm-active' : ''}`}>\n                  <Link className=\"has-arrow ai-icon color\" aria-expanded=\"false\">\n                     <i className=\"flaticon-381-notepad\" />\n                     <span className=\"nav-text\">Manage</span>\n                  </Link>\n                  <ul aria-expanded=\"false\">\n                     <li>\n                        <Link to=\"/products\">Products</Link>\n                     </li>\n                     <li>\n                        <Link to=\"/suppliers\">Suppliers</Link>\n                     </li>\n                     <li>\n                        <Link to=\"/customers\">Customers</Link>\n                     </li>\n                     {/* <li>\n                        <Link to=\"/app-calender\">Users</Link>\n                     </li> */}\n                     <When condition={props.user?.role !== userRoles.CASHIER}>\n                        <li>\n                           <Link to=\"/employees\">Employees</Link>\n                        </li>\n                     </When>\n                  </ul>\n               </li>\n               <li className={path === '/purchase' ? 'mm-active' : ''}>\n                  <Link className=\"\" to=\"/purchase\" aria-expanded=\"false\">\n                     <i className=\"flaticon-381-more\" />\n                     <span className=\"nav-text\">Purchase</span>\n                  </Link>\n               </li>\n               <li className={path === '/sale' ? 'mm-active' : ''}>\n                  <Link className=\"\" to=\"/sale\" aria-expanded=\"false\">\n                     <i className=\"flaticon-381-calendar\" />\n                     <span className=\"nav-text\">Sale</span>\n                  </Link>\n               </li>\n               <li className={path === '/khaata' ? 'mm-active' : ''}>\n                  <Link className=\"\" to=\"/khaata\" aria-expanded=\"false\">\n                     <i className=\"flaticon-381-book\" />\n                     <span className=\"nav-text\">Khaata</span>\n                  </Link>\n               </li>\n               <li className={path === '/expenses' ? 'mm-active' : ''}>\n                  <Link className=\"\" to=\"/expenses\" aria-expanded=\"false\">\n                     <i className=\"flaticon-381-briefcase\" />\n                     <span className=\"nav-text\">Expenses</span>\n                  </Link>\n               </li>\n            </MM>\n         </PerfectScrollbar>\n      </div>\n   );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n   user: auth.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n   setLogin: (payload) => dispatch(setLogin(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/salaries/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/expenseTypes/index.js",["427","428"],"import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useFormik } from 'formik';\nimport Button from 'jsx/components/Button';\nimport ModalWrapper from 'jsx/components/ModalWrapper';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { del, get, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport { userRoles } from 'jsx/helpers/enums';\nimport React, { useState } from 'react';\nimport { ButtonGroup, Card, Col, OverlayTrigger, Popover, Row, Table } from 'react-bootstrap';\nimport { AiFillDelete, AiFillPlusCircle, AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert';\n\nconst ExpenseTypes = (props) => {\n   dayjs.extend(relativeTime);\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [sort, setSort] = useState({ field: null, order: -1 });\n\n   const [showModal, setShowModal] = useState(false);\n\n   const alert = useAlert();\n\n   const queryClient = useQueryClient();\n\n   const query = useQuery(['expenses/types', page, limit, sort.field, sort.order], () =>\n      get('/expenses/types', page, limit, sort.field, sort.order)\n   );\n   const deleteMutation = useMutation((id) => del(`/expenses/types/id/${id}`), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('expenses/types');\n         alert.setAlert({\n            message: 'Expense type deleted successfully.',\n            variant: 'success',\n         });\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to delete Expense type.', err });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/expenses/types', payload), {\n      onSuccess: () => {\n         setShowModal(false);\n         query.refetch();\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add Expense type.', err });\n      },\n   });\n\n   const formik = useFormik({\n      initialValues: {\n         title: '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         postMutation.mutate(values);\n      },\n   });\n\n   const handleOnClickAdd = () => {\n      setShowModal(true);\n      formik.setFieldValue('title', '');\n   };\n\n   const handleOnClickDelete = (id) => {\n      swal({\n         title: 'Are you sure?',\n         text: 'Once deleted, you will not be able to recover it!',\n         icon: 'warning',\n         buttons: true,\n         dangerMode: true,\n      }).then((willDelete) => {\n         if (willDelete) {\n            deleteMutation.mutate(id);\n         }\n      });\n   };\n\n   const handleSort = (key) => {\n      setSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n   const alertMarkup = alert.getAlert();\n\n   return (\n      <>\n         {alertMarkup ? (\n            <Row>\n               <Col lg={12}>{alertMarkup}</Col>\n            </Row>\n         ) : null}\n         <Card className=\"h-100\">\n            <When condition={query.isLoading || deleteMutation.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <Card.Header>\n               <Card.Title>Manage Types</Card.Title>\n               <Button size=\"sm\" variant=\"primary\" icon={AiFillPlusCircle} onClick={handleOnClickAdd}>\n                  Add New Expense Type\n               </Button>\n            </Card.Header>\n            <Card.Body>\n               <If condition={query.data?.length > 0}>\n                  <Then>\n                     <Table className=\"tw-relative\" responsive>\n                        <thead>\n                           <tr>\n                              <th className=\"width80\">\n                                 <strong>#</strong>\n                              </th>\n                              <th className=\"tw-cursor-pointer\" onClick={() => handleSort('title')}>\n                                 <strong className=\"tw-cursor-pointer\">\n                                    TITLE\n                                    <span>\n                                       <When condition={sort.field !== 'title'}>\n                                          <FaSort className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'title' && sort.order === -1}>\n                                          <FaSortDown className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'title' && sort.order === 1}>\n                                          <FaSortUp className=\"d-inline mx-1\" />\n                                       </When>\n                                    </span>\n                                 </strong>\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {query.data?.map((e, index) => (\n                              <tr key={`${e._id}`}>\n                                 <td>\n                                    <strong>{index + 1}</strong>\n                                 </td>\n                                 <td>{e.title}</td>\n                                 <td>\n                                    <OverlayTrigger\n                                       trigger={['hover', 'hover']}\n                                       placement=\"top\"\n                                       overlay={\n                                          <Popover className=\"tw-border-gray-500\">\n                                             <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                   ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                   : dayjs(e.createdAt).fromNow()\n                                             }.`}</Popover.Content>\n                                          </Popover>\n                                       }\n                                    >\n                                       <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                    </OverlayTrigger>\n                                 </td>\n                                 <When condition={props.user?.role !== userRoles.CASHIER}>\n                                    <td>\n                                       <ButtonGroup>\n                                          <Button\n                                             variant=\"danger\"\n                                             size=\"sm\"\n                                             icon={AiFillDelete}\n                                             onClick={() => handleOnClickDelete(e._id)}\n                                          />\n                                       </ButtonGroup>\n                                    </td>\n                                 </When>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </Table>\n                  </Then>\n                  <Else>\n                     <When condition={!query.isLoading}>\n                        <p className=\"tw-m-0\">No types found</p>\n                     </When>\n                  </Else>\n               </If>\n            </Card.Body>\n         </Card>\n\n         {/* ADD Modal */}\n         <ModalWrapper\n            show={showModal}\n            onHide={() => {\n               setShowModal(false);\n            }}\n            title=\"Add New Expense Type\"\n            isLoading={query.isLoading || postMutation.isLoading}\n            size=\"md\"\n            onSubmit={formik.handleSubmit}\n            submitButtonText=\"Confirm\"\n         >\n            <form onSubmit={formik.handleSubmit}>\n               <div className=\"row\">\n                  <div className=\"form-group col-xl-6\">\n                     <label className=\"col-form-label\">Title</label>\n                     <input\n                        className=\"form-control\"\n                        onChange={formik.handleChange}\n                        type=\"text\"\n                        name=\"title\"\n                        value={formik.values.title}\n                     />\n                  </div>\n               </div>\n            </form>\n         </ModalWrapper>\n      </>\n   );\n};\n\nconst mapStateToProps = ({ auth }) => ({\n   user: auth.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(ExpenseTypes));\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/invoice.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/khaata/index.js",["429","430","431","432","433","434","435","436","437"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/expenses/ExpenseActions.js",["438","439","440","441","442"],"import useUrlState from '@ahooksjs/use-url-state';\nimport { useDebounce } from 'ahooks';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useFormik } from 'formik';\nimport Button from 'jsx/components/Button';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport React, { useMemo, useState } from 'react';\nimport { ButtonGroup, Card } from 'react-bootstrap';\nimport { AiFillCaretLeft, AiFillSave } from 'react-icons/ai';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport { useHistory, useParams } from 'react-router-dom';\nimport CreatableSelect from '../../components/CreatableSelect';\n\nconst ExpenseActions = () => {\n   dayjs.extend(relativeTime);\n\n   const history = useHistory();\n   const params = useParams();\n   const [isError, setIsError] = useState(false);\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [sort, setSort] = useState({ field: null, order: -1 });\n   const [search, setSearch] = useState('');\n   const debouncedSearchValue = useDebounce(search, { wait: 500 });\n\n   const [urlState, setUrlState] = useUrlState({});\n\n   const alert = useAlert();\n   const getTypes = useQuery('expenses/types', () => get('/expenses/types', 1, 999));\n   const queryClient = useQueryClient();\n\n   const isView = useMemo(() => urlState?.type === 'view', [urlState.type]);\n   const isAdd = useMemo(() => params?.id === 'add', [params.id]);\n\n   const query = useQuery(\n      ['expenses', params.id, page, limit, sort.field, sort.order, debouncedSearchValue],\n      () => get(`/expenses/id/${params.id}`, page, limit, sort.field, sort.order, debouncedSearchValue),\n      {\n         enabled: !isAdd,\n         onError: (err) => {\n            setIsError(true);\n            alert.setErrorAlert({\n               message: 'Invalid URL!',\n               err: { message: ['The page will redirect to manage expenses.'] },\n               callback: () => history.push('/expenses'),\n               duration: 3000,\n            });\n         },\n      }\n   );\n\n   const postMutation = useMutation((payload) => post('/expenses', payload), {\n      onSuccess: () => {\n         history.push('/expenses');\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add product', err });\n      },\n   });\n   const postTypeMutation = useMutation((payload) => post('/expenses/types', payload), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('expenses/types');\n      },\n   });\n\n   const mutation = useMemo(() => postMutation, [postMutation]);\n\n   if (!isView && !isAdd) {\n      history.push('/expenses');\n   }\n\n   const formik = useFormik({\n      initialValues: {\n         title: '',\n         amount: '',\n         type: '',\n         comments: '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         mutation.mutate(values);\n      },\n   });\n\n   const handleCreateType = async (title) => {\n      postTypeMutation.mutate({ title });\n      // history.push({ pathname: '/types', search: `?action=add&title=${title}&redirect=/products/add` });\n   };\n   return (\n      <>\n         <div className=\"row p-0 m-0\">\n            <div className=\"col-10\">\n               <PageTItle activeMenu=\"View\" motherMenu=\"Products\" />\n            </div>\n            <div className=\"col-1\">\n               <Button\n                  icon={AiFillCaretLeft}\n                  variant=\"warning light\"\n                  onClick={() => history.goBack()}\n                  loading={mutation.isLoading}\n               >\n                  Back\n               </Button>\n            </div>\n         </div>\n         {alert.getAlert()}\n         <Card>\n            <When condition={getTypes.isLoading || postTypeMutation.isLoading || query.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <If condition={isAdd}>\n               <Then>\n                  <form onSubmit={formik.handleSubmit}>\n                     <Card.Header>\n                        <Card.Title>Add New Expense</Card.Title>\n                     </Card.Header>\n                     <Card.Body>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Title</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"title\"\n                                 disabled={isError}\n                                 value={formik.values.title}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Amount</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"amount\"\n                                 disabled={isError}\n                                 value={formik.values.amount}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Comments</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"comments\"\n                                 disabled={isError}\n                                 value={formik.values.comments}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Type</label>\n                              {isAdd && (\n                                 <CreatableSelect\n                                    isClearable\n                                    onChange={(e) => formik.setFieldValue('type', e?._id)}\n                                    options={\n                                       getTypes.data?.length > 0 &&\n                                       getTypes.data.map((e) => ({ ...e, label: e.title, value: e.title }))\n                                    }\n                                    onCreateOption={handleCreateType}\n                                 />\n                              )}\n                           </div>\n                        </div>\n                     </Card.Body>\n                     <Card.Footer>\n                        <div className=\"row\">\n                           <div className=\"col-xl-12 tw-justify-center\">\n                              <ButtonGroup>\n                                 {/* <Button\n                                    icon={AiFillCaretLeft}\n                                    variant=\"warning light\"\n                                    onClick={() => history.replace('/products')}\n                                    loading={mutation.isLoading}\n                                 >\n                                    Back\n                                 </Button> */}\n                                 <Button\n                                    icon={AiFillSave}\n                                    variant=\"primary\"\n                                    type=\"submit\"\n                                    loading={mutation.isLoading}\n                                    disabled={isError}\n                                 >\n                                    Save\n                                 </Button>\n                              </ButtonGroup>\n                           </div>\n                        </div>\n                     </Card.Footer>\n                  </form>\n               </Then>\n               <Else>\n                  <Card.Header>\n                     <Card.Title>View product</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Title</label>\n                           <h4>{query.data?.title ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Amount</label>\n                           <h4>{query.data?.amount ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Type</label>\n                           <h4>{query.data?.type?.title ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Comments</label>\n                           <h4>{query.data?.comments ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                  </Card.Body>\n               </Else>\n            </If>\n         </Card>\n      </>\n   );\n};\n\nexport default ExpenseActions;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/store/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/store/reducers.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/store/auth/reducer.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/store/auth/actionTypes.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/store/auth/actions.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/inventory/index.js",["443","444","445"],"import { useDebounce } from 'ahooks';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport Pagination from 'jsx/components/Pagination';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, useAlert, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card, Col, OverlayTrigger, Popover, Row, Table } from 'react-bootstrap';\nimport { AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router-dom';\n\nconst Khaata = () => {\n   dayjs.extend(relativeTime);\n   const history = useHistory();\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [sort, setSort] = useState({ field: null, order: -1 });\n   const [search, setSearch] = useState('');\n   const debouncedSearchValue = useDebounce(search, { wait: 500 });\n\n   const alert = useAlert();\n   const queryClient = useQueryClient();\n\n   const query = useQuery(['inventories/products', page, limit, sort.field, sort.order], () =>\n      get('/inventories/products', page, limit, sort.field, sort.order)\n   );\n   const alertMarkup = alert.getAlert();\n\n   const handleSort = (key) => {\n      setSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n\n   useEffect(() => {\n      if (page > query.data?.totalPages) {\n         setPage((prev) => prev - 1);\n      }\n   }, [page, query.data?.totalPages]);\n\n   return (\n      <>\n         <PageTItle activeMenu=\"inventory\" motherMenu=\"Diamond Tiles\" />\n         {alertMarkup ? (\n            <Row>\n               <Col lg={12}>{alertMarkup}</Col>\n            </Row>\n         ) : null}\n         <div className=\"row\">\n            <Col lg={12}>\n               <Card>\n                  <When condition={query.isLoading}>\n                     <SpinnerOverlay />\n                  </When>\n                  <Card.Header>\n                     <Card.Title>Inventory</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <If condition={query.data?.totalDocs > 0}>\n                        <Then>\n                           <Table className=\"tw-relative\" responsive>\n                              <thead>\n                                 <tr>\n                                    <th className=\"width80\">\n                                       <strong>#</strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('modelNumber')}>\n                                          MODEL NUMBER\n                                          <span>\n                                             <When condition={sort.field !== 'modelNumber'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'modelNumber' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'modelNumber' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('retialPrice')}>\n                                          RETAIL PRICE\n                                          <span>\n                                             <When condition={sort.field !== 'retialPrice'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'retialPrice' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'retialPrice' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('quantity')}>\n                                          QUANTITY\n                                          <span>\n                                             <When condition={sort.field !== 'quantity'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'quantity' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'quantity' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                 </tr>\n                              </thead>\n                              <tbody>\n                                 {query.data &&\n                                    query.data?.docs.map((e, index) => (\n                                       <tr key={`${e._id}`}>\n                                          <td>\n                                             <strong>{query.data.pagingCounter * (index + 1)}</strong>\n                                          </td>\n                                          <td>{e?.modelNumber ?? 'N/A'}</td>\n                                          <td>{e?.retailPrice ?? 'N/A'}</td>\n                                          <td>{e?.quantity ?? 'N/a'}</td>\n                                          <td>\n                                             <OverlayTrigger\n                                                trigger={['hover', 'hover']}\n                                                placement=\"top\"\n                                                overlay={\n                                                   <Popover className=\"tw-border-gray-500\">\n                                                      <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                         dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                            ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                            : dayjs(e.createdAt).fromNow()\n                                                      }.`}</Popover.Content>\n                                                   </Popover>\n                                                }\n                                             >\n                                                <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                             </OverlayTrigger>\n                                          </td>\n                                       </tr>\n                                    ))}\n                              </tbody>\n                           </Table>\n                        </Then>\n                        <Else>\n                           <When condition={!query.isLoading && !debouncedSearchValue}>\n                              <p className=\"tw-m-0\">No inventory created</p>\n                           </When>\n                           <When condition={!query.isLoading && debouncedSearchValue}>\n                              <p className=\"tw-m-0\">No result found!</p>\n                           </When>\n                        </Else>\n                     </If>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </div>\n         <When condition={limit > 5 ? true : query.data?.totalPages > 1}>\n            <Pagination\n               page={page}\n               onPageChange={setPage}\n               onLimitChange={setLimit}\n               {..._.omit(query.data, ['docs'])}\n               isLimitDisabled={query.isLoading}\n            />\n         </When>\n      </>\n   );\n};\n\nexport default Khaata;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/enums.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/purchase/PurchaseInvoice.js",["446","447","448","449","450","451","452","453","454"],"import React from 'react';\nimport ReactToPrint from 'react-to-print';\nimport { connect } from 'react-redux';\nimport dayjs from 'dayjs';\nimport logo from '../../../images/diamond-tiles-logo.png';\n\nclass PurchaseInvoice extends React.Component {\n   render() {\n      return (\n         <div className=\"m-5\">\n            <div className=\"row mb-2\">\n               <h1 className=\"col-10 text-center flex-2\">INVOICE</h1>\n               <img className=\"col-2 flex-1 text-end\" src={logo} style={{ maxWidth: '100px', maxHeight: '100px' }} />\n            </div>\n            <div className=\"d-flex flex-row justify-content-between mt-5\">\n               <div className=\"\">\n                  <h4 className=\"p-0 m-0\">Diamond Tiles</h4>\n                  <p className=\"p-0 m-0\">Main G. T Road, Bahtr Mor, Wah Cantt</p>\n                  <p className=\"p-0 m-0\">0305-2200111</p>\n                  <p className=\"p-0 m-0\">diamondtiles.pk</p>\n               </div>\n               {/* <div className=\"\">\n                  <h4 className=\"p-0 m-0\">INVOICE TO</h4>\n                  <p className=\"p-0 m-0\">John Doe</p>\n                  <p className=\"p-0 m-0\">0305-2200111</p>\n               </div> */}\n               <div className=\"\">\n                  <h4 className=\"p-0 m-0 text-right\">Invoice Number</h4>\n                  <p className=\"p-0 m-0 text-right\">{`#${this.props.invoiceNum}`}</p>\n                  <h4 className=\"p-0 m-0 text-right\">Date of Invoice</h4>\n                  <p className=\"p-0 m-0 text-right\">{dayjs().format('DD-MMM-YYYY')}</p>\n               </div>\n            </div>\n            <table className=\"table table-striped my-4\">\n               <thead>\n                  <tr>\n                     <th className=\"center\">Serial Number</th>\n                     <th className=\"center\">Model Number</th>\n                     <th className=\"center\">Price</th>\n                     <th className=\"center\">Quantity</th>\n                     <th className=\"center\">Unit</th>\n                     <th className=\"center\">Subtotal</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {this.props?.data().data &&\n                     this.props?.data().data.map((e) => (\n                        <tr key={e?._id}>\n                           <td>{e?.serialNumber ?? ''}</td>\n                           <td>{e?.modelNumber ?? ''}</td>\n                           <td>{e?.price ?? ''}</td>\n                           <td>{e?.quantity ?? ''}</td>\n                           <td>{e?.unit ?? ''}</td>\n                           <td>{e?.subTotal ?? ''}</td>\n                        </tr>\n                     ))}\n               </tbody>\n            </table>\n            <div className=\"row mt-5\">\n               <div className=\"col-lg-4 col-sm-5\"> </div>\n               <div className=\"col-lg-4 col-sm-5 ml-auto\">\n                  <table className=\"table table-clear\">\n                     <tbody>\n                        <tr>\n                           <td className=\"left\">\n                              <strong>Total</strong>\n                           </td>\n                           <td className=\"right\">\n                              <strong>{this.props?.data().total}</strong>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className=\"left\">\n                              <strong>Paid</strong>\n                           </td>\n                           <td className=\"right\">\n                              <strong>{this.props?.data().paid}</strong>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className=\"left\">\n                              <strong>Remaining</strong>\n                           </td>\n                           <td className=\"right\">\n                              <strong>{this.props?.data().remaining}</strong>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n            </div>\n            <div className=\"d-flex flex-row justify-content-center mt-5\">\n               <p>POS Developed by Hassan Naveed - 03415615279</p>\n            </div>\n         </div>\n      );\n   }\n}\n\nclass Print extends React.Component {\n   render() {\n      return (\n         <div>\n            <ReactToPrint\n               // eslint-disable-next-line react/button-has-type\n               trigger={() => <button ref={this.props.printRef} className=\"tw-invisible\" />}\n               content={() => this.componentRef}\n            />\n            <PurchaseInvoice\n               ref={(el) => (this.componentRef = el)}\n               data={this.props.data}\n               invoiceNum={this.props.invoiceNum}\n            />\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = ({ auth }) => ({\n   user: auth.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Print);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/sale/SaleInvoice.js",["455","456","457","458","459","460","461","462","463"],"import React from 'react';\nimport ReactToPrint from 'react-to-print';\nimport { connect } from 'react-redux';\nimport dayjs from 'dayjs';\nimport logo from '../../../images/diamond-tiles-logo.png';\n\nclass SaleInvoice extends React.Component {\n   render() {\n      return (\n         <div className=\"m-5\">\n            <div className=\"row mb-2\">\n               <h1 className=\"col-10 text-center flex-2\">INVOICE</h1>\n               <img className=\"col-2 flex-1 text-end\" src={logo} style={{ maxWidth: '100px', maxHeight: '100px' }} />\n            </div>\n            <div className=\"d-flex flex-row justify-content-between mt-5\">\n               <div className=\"\">\n                  <h4 className=\"p-0 m-0\">Diamond Tiles</h4>\n                  <p className=\"p-0 m-0\">Main G. T Road, Bahtr Mor, Wah Cantt</p>\n                  <p className=\"p-0 m-0\">0305-2200111</p>\n                  <p className=\"p-0 m-0\">diamondtiles.pk</p>\n               </div>\n               {/* <div className=\"\">\n                  <h4 className=\"p-0 m-0\">INVOICE TO</h4>\n                  <p className=\"p-0 m-0\">John Doe</p>\n                  <p className=\"p-0 m-0\">0305-2200111</p>\n               </div> */}\n               <div className=\"\">\n                  <h4 className=\"p-0 m-0 text-right\">Invoice Number</h4>\n                  <p className=\"p-0 m-0 text-right\">{`#${this.props.invoiceNum}`}</p>\n                  <h4 className=\"p-0 m-0 text-right\">Date of Invoice</h4>\n                  <p className=\"p-0 m-0 text-right\">{dayjs().format('DD-MMM-YYYY')}</p>\n               </div>\n            </div>\n            <table className=\"table table-striped my-4\">\n               <thead>\n                  <tr>\n                     <th className=\"center\">Serial Number</th>\n                     <th className=\"center\">Model Number</th>\n                     <th className=\"center\">Price</th>\n                     <th className=\"center\">Quantity</th>\n                     <th className=\"center\">Unit</th>\n                     <th className=\"center\">Subtotal</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {this.props?.data().data &&\n                     this.props?.data().data.map((e) => (\n                        <tr key={e?._id}>\n                           <td>{e?.serialNumber ?? ''}</td>\n                           <td>{e?.modelNumber ?? ''}</td>\n                           <td>{e?.price ?? ''}</td>\n                           <td>{e?.quantity ?? ''}</td>\n                           <td>{e?.unit ?? ''}</td>\n                           <td>{e?.subTotal ?? ''}</td>\n                        </tr>\n                     ))}\n               </tbody>\n            </table>\n            <div className=\"row mt-5\">\n               <div className=\"col-lg-4 col-sm-5\"> </div>\n               <div className=\"col-lg-4 col-sm-5 ml-auto\">\n                  <table className=\"table table-clear\">\n                     <tbody>\n                        <tr>\n                           <td className=\"left\">\n                              <strong>Total</strong>\n                           </td>\n                           <td className=\"right\">\n                              <strong>{this.props?.data().total}</strong>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className=\"left\">\n                              <strong>Paid</strong>\n                           </td>\n                           <td className=\"right\">\n                              <strong>{this.props?.data().paid}</strong>\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className=\"left\">\n                              <strong>Remaining</strong>\n                           </td>\n                           <td className=\"right\">\n                              <strong>{this.props?.data().remaining}</strong>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n            </div>\n            <div className=\"d-flex flex-row justify-content-center mt-5\">\n               <p>POS Developed by Hassan Naveed - 03415615279</p>\n            </div>\n         </div>\n      );\n   }\n}\n\nclass Print extends React.Component {\n   render() {\n      return (\n         <div>\n            <ReactToPrint\n               // eslint-disable-next-line react/button-has-type\n               trigger={() => <button ref={this.props.printRef} className=\"tw-invisible\" />}\n               content={() => this.componentRef}\n            />\n            <SaleInvoice\n               ref={(el) => (this.componentRef = el)}\n               data={this.props.data}\n               invoiceNum={this.props.invoiceNum}\n            />\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = ({ auth }) => ({\n   user: auth.user,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Print);\n",{"ruleId":"464","replacedBy":"465"},{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","replacedBy":"469"},{"ruleId":"470","replacedBy":"471"},{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","severity":1,"message":"475","line":42,"column":26,"nodeType":"476","messageId":"477","endLine":42,"endColumn":61},{"ruleId":"478","severity":1,"message":"479","line":67,"column":28,"nodeType":"480","messageId":"481","endLine":67,"endColumn":38},{"ruleId":"482","severity":1,"message":"483","line":70,"column":28,"nodeType":"484","messageId":"485","endLine":70,"endColumn":40},{"ruleId":"482","severity":1,"message":"483","line":82,"column":28,"nodeType":"484","messageId":"485","endLine":82,"endColumn":40},{"ruleId":"464","replacedBy":"486"},{"ruleId":"466","replacedBy":"487"},{"ruleId":"468","replacedBy":"488"},{"ruleId":"470","replacedBy":"489"},{"ruleId":"472","replacedBy":"490"},{"ruleId":"482","severity":1,"message":"491","line":12,"column":13,"nodeType":"484","messageId":"485","endLine":12,"endColumn":19},{"ruleId":"482","severity":1,"message":"492","line":21,"column":16,"nodeType":"484","messageId":"485","endLine":21,"endColumn":19},{"ruleId":"482","severity":1,"message":"493","line":10,"column":36,"nodeType":"484","messageId":"485","endLine":10,"endColumn":50},{"ruleId":"482","severity":1,"message":"494","line":10,"column":52,"nodeType":"484","messageId":"485","endLine":10,"endColumn":59},{"ruleId":"482","severity":1,"message":"495","line":11,"column":39,"nodeType":"484","messageId":"485","endLine":11,"endColumn":62},{"ruleId":"482","severity":1,"message":"496","line":20,"column":21,"nodeType":"484","messageId":"485","endLine":20,"endColumn":32},{"ruleId":"482","severity":1,"message":"497","line":25,"column":19,"nodeType":"484","messageId":"485","endLine":25,"endColumn":28},{"ruleId":"482","severity":1,"message":"498","line":26,"column":10,"nodeType":"484","messageId":"485","endLine":26,"endColumn":30},{"ruleId":"482","severity":1,"message":"499","line":28,"column":21,"nodeType":"484","messageId":"485","endLine":28,"endColumn":32},{"ruleId":"500","severity":1,"message":"501","line":96,"column":7,"nodeType":"502","endLine":96,"endColumn":30,"suggestions":"503"},{"ruleId":"482","severity":1,"message":"504","line":14,"column":4,"nodeType":"484","messageId":"485","endLine":14,"endColumn":16},{"ruleId":"482","severity":1,"message":"505","line":15,"column":4,"nodeType":"484","messageId":"485","endLine":15,"endColumn":14},{"ruleId":"482","severity":1,"message":"506","line":16,"column":4,"nodeType":"484","messageId":"485","endLine":16,"endColumn":13},{"ruleId":"482","severity":1,"message":"507","line":17,"column":4,"nodeType":"484","messageId":"485","endLine":17,"endColumn":20},{"ruleId":"482","severity":1,"message":"508","line":29,"column":18,"nodeType":"484","messageId":"485","endLine":29,"endColumn":26},{"ruleId":"482","severity":1,"message":"509","line":50,"column":10,"nodeType":"484","messageId":"485","endLine":50,"endColumn":27},{"ruleId":"482","severity":1,"message":"510","line":54,"column":10,"nodeType":"484","messageId":"485","endLine":54,"endColumn":27},{"ruleId":"482","severity":1,"message":"511","line":57,"column":10,"nodeType":"484","messageId":"485","endLine":57,"endColumn":26},{"ruleId":"482","severity":1,"message":"512","line":3,"column":27,"nodeType":"484","messageId":"485","endLine":3,"endColumn":35},{"ruleId":"482","severity":1,"message":"513","line":34,"column":7,"nodeType":"484","messageId":"485","endLine":34,"endColumn":10},{"ruleId":"514","severity":1,"message":"515","line":51,"column":28,"nodeType":"516","endLine":51,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":61,"column":28,"nodeType":"516","endLine":61,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":71,"column":28,"nodeType":"516","endLine":71,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":80,"column":28,"nodeType":"516","endLine":80,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":87,"column":28,"nodeType":"516","endLine":87,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":94,"column":28,"nodeType":"516","endLine":94,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":117,"column":28,"nodeType":"516","endLine":117,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":127,"column":28,"nodeType":"516","endLine":127,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":137,"column":28,"nodeType":"516","endLine":137,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":146,"column":28,"nodeType":"516","endLine":146,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":153,"column":28,"nodeType":"516","endLine":153,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":160,"column":28,"nodeType":"516","endLine":160,"endColumn":78},{"ruleId":"514","severity":1,"message":"515","line":592,"column":34,"nodeType":"516","endLine":592,"endColumn":89},{"ruleId":"514","severity":1,"message":"515","line":595,"column":34,"nodeType":"516","endLine":595,"endColumn":94},{"ruleId":"514","severity":1,"message":"515","line":629,"column":34,"nodeType":"516","endLine":629,"endColumn":89},{"ruleId":"514","severity":1,"message":"515","line":632,"column":34,"nodeType":"516","endLine":632,"endColumn":94},{"ruleId":"514","severity":1,"message":"515","line":668,"column":34,"nodeType":"516","endLine":668,"endColumn":89},{"ruleId":"514","severity":1,"message":"515","line":671,"column":34,"nodeType":"516","endLine":671,"endColumn":94},{"ruleId":"514","severity":1,"message":"515","line":707,"column":34,"nodeType":"516","endLine":707,"endColumn":89},{"ruleId":"514","severity":1,"message":"515","line":710,"column":34,"nodeType":"516","endLine":710,"endColumn":94},{"ruleId":"514","severity":1,"message":"515","line":744,"column":34,"nodeType":"516","endLine":744,"endColumn":89},{"ruleId":"514","severity":1,"message":"515","line":747,"column":34,"nodeType":"516","endLine":747,"endColumn":94},{"ruleId":"514","severity":1,"message":"515","line":783,"column":34,"nodeType":"516","endLine":783,"endColumn":89},{"ruleId":"514","severity":1,"message":"515","line":786,"column":34,"nodeType":"516","endLine":786,"endColumn":94},{"ruleId":"514","severity":1,"message":"515","line":1525,"column":22,"nodeType":"516","endLine":1525,"endColumn":92},{"ruleId":"482","severity":1,"message":"517","line":1,"column":20,"nodeType":"484","messageId":"485","endLine":1,"endColumn":24},{"ruleId":"500","severity":1,"message":"518","line":48,"column":7,"nodeType":"502","endLine":48,"endColumn":9,"suggestions":"519"},{"ruleId":"482","severity":1,"message":"520","line":149,"column":28,"nodeType":"484","messageId":"485","endLine":149,"endColumn":32},{"ruleId":"482","severity":1,"message":"506","line":15,"column":27,"nodeType":"484","messageId":"485","endLine":15,"endColumn":36},{"ruleId":"482","severity":1,"message":"521","line":29,"column":21,"nodeType":"484","messageId":"485","endLine":29,"endColumn":32},{"ruleId":"482","severity":1,"message":"522","line":30,"column":22,"nodeType":"484","messageId":"485","endLine":30,"endColumn":34},{"ruleId":"482","severity":1,"message":"523","line":31,"column":21,"nodeType":"484","messageId":"485","endLine":31,"endColumn":32},{"ruleId":"482","severity":1,"message":"499","line":36,"column":21,"nodeType":"484","messageId":"485","endLine":36,"endColumn":32},{"ruleId":"500","severity":1,"message":"524","line":44,"column":7,"nodeType":"502","endLine":44,"endColumn":22,"suggestions":"525"},{"ruleId":"500","severity":1,"message":"501","line":139,"column":7,"nodeType":"502","endLine":139,"endColumn":39,"suggestions":"526"},{"ruleId":"482","severity":1,"message":"527","line":2,"column":8,"nodeType":"484","messageId":"485","endLine":2,"endColumn":15},{"ruleId":"482","severity":1,"message":"528","line":7,"column":17,"nodeType":"484","messageId":"485","endLine":7,"endColumn":26},{"ruleId":"482","severity":1,"message":"529","line":13,"column":8,"nodeType":"484","messageId":"485","endLine":13,"endColumn":9},{"ruleId":"482","severity":1,"message":"530","line":14,"column":10,"nodeType":"484","messageId":"485","endLine":14,"endColumn":21},{"ruleId":"482","severity":1,"message":"531","line":159,"column":61,"nodeType":"484","messageId":"485","endLine":159,"endColumn":66},{"ruleId":"482","severity":1,"message":"531","line":139,"column":61,"nodeType":"484","messageId":"485","endLine":139,"endColumn":66},{"ruleId":"482","severity":1,"message":"532","line":26,"column":21,"nodeType":"484","messageId":"485","endLine":26,"endColumn":32},{"ruleId":"482","severity":1,"message":"499","line":29,"column":21,"nodeType":"484","messageId":"485","endLine":29,"endColumn":32},{"ruleId":"482","severity":1,"message":"497","line":33,"column":19,"nodeType":"484","messageId":"485","endLine":33,"endColumn":28},{"ruleId":"500","severity":1,"message":"524","line":39,"column":7,"nodeType":"502","endLine":39,"endColumn":22,"suggestions":"533"},{"ruleId":"500","severity":1,"message":"501","line":103,"column":7,"nodeType":"502","endLine":103,"endColumn":30,"suggestions":"534"},{"ruleId":"482","severity":1,"message":"535","line":319,"column":66,"nodeType":"484","messageId":"485","endLine":319,"endColumn":71},{"ruleId":"482","severity":1,"message":"536","line":2,"column":8,"nodeType":"484","messageId":"485","endLine":2,"endColumn":13},{"ruleId":"482","severity":1,"message":"537","line":3,"column":8,"nodeType":"484","messageId":"485","endLine":3,"endColumn":20},{"ruleId":"482","severity":1,"message":"493","line":10,"column":29,"nodeType":"484","messageId":"485","endLine":10,"endColumn":43},{"ruleId":"482","severity":1,"message":"494","line":10,"column":57,"nodeType":"484","messageId":"485","endLine":10,"endColumn":64},{"ruleId":"482","severity":1,"message":"495","line":11,"column":39,"nodeType":"484","messageId":"485","endLine":11,"endColumn":62},{"ruleId":"482","severity":1,"message":"499","line":25,"column":21,"nodeType":"484","messageId":"485","endLine":25,"endColumn":32},{"ruleId":"500","severity":1,"message":"524","line":30,"column":7,"nodeType":"502","endLine":30,"endColumn":22,"suggestions":"538"},{"ruleId":"482","severity":1,"message":"539","line":36,"column":11,"nodeType":"484","messageId":"485","endLine":36,"endColumn":16},{"ruleId":"500","severity":1,"message":"501","line":97,"column":7,"nodeType":"502","endLine":97,"endColumn":30,"suggestions":"540"},{"ruleId":"500","severity":1,"message":"541","line":33,"column":7,"nodeType":"502","endLine":33,"endColumn":14,"suggestions":"542"},{"ruleId":"482","severity":1,"message":"543","line":63,"column":26,"nodeType":"484","messageId":"485","endLine":63,"endColumn":31},{"ruleId":"482","severity":1,"message":"544","line":5,"column":8,"nodeType":"484","messageId":"485","endLine":5,"endColumn":15},{"ruleId":"482","severity":1,"message":"505","line":13,"column":24,"nodeType":"484","messageId":"485","endLine":13,"endColumn":34},{"ruleId":"482","severity":1,"message":"509","line":51,"column":10,"nodeType":"484","messageId":"485","endLine":51,"endColumn":27},{"ruleId":"478","severity":1,"message":"479","line":91,"column":30,"nodeType":"480","messageId":"481","endLine":91,"endColumn":40},{"ruleId":"478","severity":1,"message":"479","line":96,"column":29,"nodeType":"480","messageId":"481","endLine":96,"endColumn":40},{"ruleId":"545","severity":1,"message":"546","line":96,"column":47,"nodeType":"547","messageId":"548","endLine":96,"endColumn":49},{"ruleId":"482","severity":1,"message":"549","line":8,"column":11,"nodeType":"484","messageId":"485","endLine":8,"endColumn":22},{"ruleId":"482","severity":1,"message":"550","line":8,"column":24,"nodeType":"484","messageId":"485","endLine":8,"endColumn":38},{"ruleId":"482","severity":1,"message":"505","line":12,"column":24,"nodeType":"484","messageId":"485","endLine":12,"endColumn":34},{"ruleId":"482","severity":1,"message":"506","line":12,"column":36,"nodeType":"484","messageId":"485","endLine":12,"endColumn":45},{"ruleId":"482","severity":1,"message":"509","line":46,"column":10,"nodeType":"484","messageId":"485","endLine":46,"endColumn":27},{"ruleId":"482","severity":1,"message":"510","line":50,"column":10,"nodeType":"484","messageId":"485","endLine":50,"endColumn":27},{"ruleId":"482","severity":1,"message":"535","line":204,"column":60,"nodeType":"484","messageId":"485","endLine":204,"endColumn":65},{"ruleId":"482","severity":1,"message":"505","line":15,"column":4,"nodeType":"484","messageId":"485","endLine":15,"endColumn":14},{"ruleId":"482","severity":1,"message":"506","line":16,"column":4,"nodeType":"484","messageId":"485","endLine":16,"endColumn":13},{"ruleId":"482","severity":1,"message":"497","line":35,"column":19,"nodeType":"484","messageId":"485","endLine":35,"endColumn":28},{"ruleId":"482","severity":1,"message":"509","line":57,"column":10,"nodeType":"484","messageId":"485","endLine":57,"endColumn":27},{"ruleId":"482","severity":1,"message":"510","line":61,"column":10,"nodeType":"484","messageId":"485","endLine":61,"endColumn":27},{"ruleId":"482","severity":1,"message":"551","line":8,"column":8,"nodeType":"484","messageId":"485","endLine":8,"endColumn":17},{"ruleId":"482","severity":1,"message":"528","line":9,"column":17,"nodeType":"484","messageId":"485","endLine":9,"endColumn":26},{"ruleId":"482","severity":1,"message":"552","line":10,"column":10,"nodeType":"484","messageId":"485","endLine":10,"endColumn":21},{"ruleId":"482","severity":1,"message":"506","line":11,"column":67,"nodeType":"484","messageId":"485","endLine":11,"endColumn":76},{"ruleId":"482","severity":1,"message":"553","line":24,"column":17,"nodeType":"484","messageId":"485","endLine":24,"endColumn":24},{"ruleId":"482","severity":1,"message":"508","line":25,"column":18,"nodeType":"484","messageId":"485","endLine":25,"endColumn":26},{"ruleId":"482","severity":1,"message":"497","line":27,"column":19,"nodeType":"484","messageId":"485","endLine":27,"endColumn":28},{"ruleId":"482","severity":1,"message":"554","line":30,"column":11,"nodeType":"484","messageId":"485","endLine":30,"endColumn":22},{"ruleId":"482","severity":1,"message":"555","line":30,"column":24,"nodeType":"484","messageId":"485","endLine":30,"endColumn":38},{"ruleId":"482","severity":1,"message":"556","line":67,"column":10,"nodeType":"484","messageId":"485","endLine":67,"endColumn":15},{"ruleId":"482","severity":1,"message":"510","line":104,"column":10,"nodeType":"484","messageId":"485","endLine":104,"endColumn":27},{"ruleId":"482","severity":1,"message":"557","line":46,"column":7,"nodeType":"484","messageId":"485","endLine":46,"endColumn":19},{"ruleId":"482","severity":1,"message":"558","line":73,"column":4,"nodeType":"484","messageId":"485","endLine":73,"endColumn":15},{"ruleId":"482","severity":1,"message":"553","line":23,"column":17,"nodeType":"484","messageId":"485","endLine":23,"endColumn":24},{"ruleId":"482","severity":1,"message":"508","line":24,"column":18,"nodeType":"484","messageId":"485","endLine":24,"endColumn":26},{"ruleId":"482","severity":1,"message":"497","line":25,"column":19,"nodeType":"484","messageId":"485","endLine":25,"endColumn":28},{"ruleId":"482","severity":1,"message":"559","line":3,"column":10,"nodeType":"484","messageId":"485","endLine":3,"endColumn":14},{"ruleId":"560","severity":1,"message":"561","line":60,"column":10,"nodeType":"480","messageId":"548","endLine":60,"endColumn":21},{"ruleId":"482","severity":1,"message":"543","line":14,"column":31,"nodeType":"484","messageId":"485","endLine":14,"endColumn":36},{"ruleId":"482","severity":1,"message":"543","line":18,"column":21,"nodeType":"484","messageId":"485","endLine":18,"endColumn":26},{"ruleId":"482","severity":1,"message":"543","line":14,"column":31,"nodeType":"484","messageId":"485","endLine":14,"endColumn":36},{"ruleId":"482","severity":1,"message":"543","line":18,"column":21,"nodeType":"484","messageId":"485","endLine":18,"endColumn":26},{"ruleId":"482","severity":1,"message":"562","line":4,"column":8,"nodeType":"484","messageId":"485","endLine":4,"endColumn":24},{"ruleId":"482","severity":1,"message":"563","line":10,"column":19,"nodeType":"484","messageId":"485","endLine":10,"endColumn":25},{"ruleId":"482","severity":1,"message":"564","line":10,"column":46,"nodeType":"484","messageId":"485","endLine":10,"endColumn":60},{"ruleId":"482","severity":1,"message":"565","line":10,"column":62,"nodeType":"484","messageId":"485","endLine":10,"endColumn":67},{"ruleId":"500","severity":1,"message":"566","line":34,"column":7,"nodeType":"502","endLine":34,"endColumn":9,"suggestions":"567"},{"ruleId":"482","severity":1,"message":"520","line":89,"column":28,"nodeType":"484","messageId":"485","endLine":89,"endColumn":32},{"ruleId":"482","severity":1,"message":"568","line":7,"column":8,"nodeType":"484","messageId":"485","endLine":7,"endColumn":12},{"ruleId":"482","severity":1,"message":"569","line":8,"column":8,"nodeType":"484","messageId":"485","endLine":8,"endColumn":16},{"ruleId":"478","severity":1,"message":"479","line":30,"column":17,"nodeType":"480","messageId":"481","endLine":30,"endColumn":36},{"ruleId":"478","severity":1,"message":"479","line":55,"column":33,"nodeType":"480","messageId":"481","endLine":55,"endColumn":43},{"ruleId":"478","severity":1,"message":"479","line":87,"column":39,"nodeType":"480","messageId":"481","endLine":87,"endColumn":49},{"ruleId":"482","severity":1,"message":"553","line":20,"column":17,"nodeType":"484","messageId":"485","endLine":20,"endColumn":24},{"ruleId":"482","severity":1,"message":"508","line":21,"column":18,"nodeType":"484","messageId":"485","endLine":21,"endColumn":26},{"ruleId":"482","severity":1,"message":"552","line":12,"column":10,"nodeType":"484","messageId":"485","endLine":12,"endColumn":21},{"ruleId":"482","severity":1,"message":"504","line":14,"column":4,"nodeType":"484","messageId":"485","endLine":14,"endColumn":16},{"ruleId":"482","severity":1,"message":"505","line":15,"column":4,"nodeType":"484","messageId":"485","endLine":15,"endColumn":14},{"ruleId":"482","severity":1,"message":"506","line":16,"column":4,"nodeType":"484","messageId":"485","endLine":16,"endColumn":13},{"ruleId":"482","severity":1,"message":"507","line":17,"column":4,"nodeType":"484","messageId":"485","endLine":17,"endColumn":20},{"ruleId":"482","severity":1,"message":"570","line":29,"column":10,"nodeType":"484","messageId":"485","endLine":29,"endColumn":17},{"ruleId":"482","severity":1,"message":"497","line":33,"column":19,"nodeType":"484","messageId":"485","endLine":33,"endColumn":28},{"ruleId":"482","severity":1,"message":"571","line":37,"column":10,"nodeType":"484","messageId":"485","endLine":37,"endColumn":21},{"ruleId":"482","severity":1,"message":"535","line":169,"column":62,"nodeType":"484","messageId":"485","endLine":169,"endColumn":67},{"ruleId":"482","severity":1,"message":"553","line":24,"column":17,"nodeType":"484","messageId":"485","endLine":24,"endColumn":24},{"ruleId":"482","severity":1,"message":"508","line":25,"column":18,"nodeType":"484","messageId":"485","endLine":25,"endColumn":26},{"ruleId":"482","severity":1,"message":"572","line":26,"column":17,"nodeType":"484","messageId":"485","endLine":26,"endColumn":24},{"ruleId":"482","severity":1,"message":"497","line":27,"column":19,"nodeType":"484","messageId":"485","endLine":27,"endColumn":28},{"ruleId":"482","severity":1,"message":"499","line":30,"column":21,"nodeType":"484","messageId":"485","endLine":30,"endColumn":32},{"ruleId":"482","severity":1,"message":"570","line":19,"column":10,"nodeType":"484","messageId":"485","endLine":19,"endColumn":17},{"ruleId":"482","severity":1,"message":"497","line":23,"column":19,"nodeType":"484","messageId":"485","endLine":23,"endColumn":28},{"ruleId":"482","severity":1,"message":"571","line":27,"column":10,"nodeType":"484","messageId":"485","endLine":27,"endColumn":21},{"ruleId":"478","severity":1,"message":"479","line":29,"column":58,"nodeType":"480","messageId":"481","endLine":29,"endColumn":79},{"ruleId":"478","severity":1,"message":"479","line":46,"column":20,"nodeType":"480","messageId":"481","endLine":46,"endColumn":36},{"ruleId":"478","severity":1,"message":"479","line":47,"column":22,"nodeType":"480","messageId":"481","endLine":47,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":69,"column":40,"nodeType":"480","messageId":"481","endLine":69,"endColumn":56},{"ruleId":"478","severity":1,"message":"479","line":77,"column":40,"nodeType":"480","messageId":"481","endLine":77,"endColumn":56},{"ruleId":"478","severity":1,"message":"479","line":85,"column":40,"nodeType":"480","messageId":"481","endLine":85,"endColumn":56},{"ruleId":"478","severity":1,"message":"479","line":106,"column":44,"nodeType":"480","messageId":"481","endLine":106,"endColumn":63},{"ruleId":"478","severity":1,"message":"479","line":111,"column":22,"nodeType":"480","messageId":"481","endLine":111,"endColumn":37},{"ruleId":"478","severity":1,"message":"479","line":112,"column":28,"nodeType":"480","messageId":"481","endLine":112,"endColumn":49},{"ruleId":"478","severity":1,"message":"479","line":29,"column":58,"nodeType":"480","messageId":"481","endLine":29,"endColumn":79},{"ruleId":"478","severity":1,"message":"479","line":46,"column":20,"nodeType":"480","messageId":"481","endLine":46,"endColumn":36},{"ruleId":"478","severity":1,"message":"479","line":47,"column":22,"nodeType":"480","messageId":"481","endLine":47,"endColumn":38},{"ruleId":"478","severity":1,"message":"479","line":69,"column":40,"nodeType":"480","messageId":"481","endLine":69,"endColumn":56},{"ruleId":"478","severity":1,"message":"479","line":77,"column":40,"nodeType":"480","messageId":"481","endLine":77,"endColumn":56},{"ruleId":"478","severity":1,"message":"479","line":85,"column":40,"nodeType":"480","messageId":"481","endLine":85,"endColumn":56},{"ruleId":"478","severity":1,"message":"479","line":106,"column":44,"nodeType":"480","messageId":"481","endLine":106,"endColumn":63},{"ruleId":"478","severity":1,"message":"479","line":111,"column":22,"nodeType":"480","messageId":"481","endLine":111,"endColumn":37},{"ruleId":"478","severity":1,"message":"479","line":112,"column":28,"nodeType":"480","messageId":"481","endLine":112,"endColumn":49},"lines-around-directive",["573"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react/display-name","Component definition is missing display name","ArrowFunctionExpression","noDisplayName","react/destructuring-assignment","Must use destructuring props assignment","MemberExpression","useDestructAssignment","no-unused-vars","'getComponent' is assigned a value but never used.","Identifier","unusedVar",["573"],[],[],[],[],"'unlock' is assigned a value but never used.","'res' is assigned a value but never used.","'OverlayTrigger' is defined but never used.","'Popover' is defined but never used.","'AiOutlineQuestionCircle' is defined but never used.","'setEmployee' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'debouncedSearchValue' is assigned a value but never used.","'setUrlState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.","ArrayExpression",["574"],"'AiFillDelete' is defined but never used.","'AiFillEdit' is defined but never used.","'AiFillEye' is defined but never used.","'AiFillPlusCircle' is defined but never used.","'setLimit' is assigned a value but never used.","'handleOnClickEdit' is assigned a value but never used.","'handleOnClickView' is assigned a value but never used.","'handleOnClickAdd' is assigned a value but never used.","'Suspense' is defined but never used.","'Ext' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'post' is defined but never used.","React Hook useEffect has missing dependencies: 'alert', 'history', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["575"],"'auth' is defined but never used. Allowed unused args must match /res|next|^err/u.","'setSalePage' is assigned a value but never used.","'setSaleLimit' is assigned a value but never used.","'setSaleSort' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'props.user?.role'. Either include it or remove the dependency array.",["576"],["577"],"'Invoice' is defined but never used.","'useEffect' is defined but never used.","'_' is defined but never used.","'mergeStyles' is defined but never used.","'value' is defined but never used. Allowed unused args must match /res|next|^err/u.","'setCustomer' is assigned a value but never used.",["578"],["579"],"'index' is defined but never used. Allowed unused args must match /res|next|^err/u.","'dayjs' is defined but never used.","'relativeTime' is defined but never used.",["580"],"'limit' is assigned a value but never used.",["581"],"React Hook useEffect has a missing dependency: 'getUserProfile'. Either include it or remove the dependency array. Outer scope values like 'token' aren't valid dependencies because mutating them doesn't re-render the component.",["582"],"'state' is defined but never used. Allowed unused args must match /res|next|^err/u.","'ChatBox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'activeModal' is assigned a value but never used.","'setActiveModal' is assigned a value but never used.","'PageTItle' is defined but never used.","'ButtonGroup' is defined but never used.","'setPage' is assigned a value but never used.","'selectedRow' is assigned a value but never used.","'setSelectedRow' is assigned a value but never used.","'isAdd' is assigned a value but never used.","'EllipsisPage' is assigned a value but never used.","'hasPrevPage' is defined but never used. Allowed unused args must match /res|next|^err/u.","'When' is defined but never used.","no-console","Unexpected console statement.","'PerfectScrollbar' is defined but never used.","'onNote' is defined but never used. Allowed unused args must match /res|next|^err/u.","'onNotification' is defined but never used. Allowed unused args must match /res|next|^err/u.","'onBox' is defined but never used. Allowed unused args must match /res|next|^err/u.","React Hook React.useEffect has missing dependencies: 'history' and 'logout'. Either include them or remove the dependency array. If 'logout' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["583"],"'logo' is defined but never used.","'logoText' is defined but never used.","'history' is assigned a value but never used.","'queryClient' is assigned a value but never used.","'setSort' is assigned a value but never used.","padding-line-between-statements",{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"588","fix":"592"},{"desc":"584","fix":"593"},{"desc":"588","fix":"594"},{"desc":"584","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},"Update the dependencies array to be: [formik, isEditing, query.data]",{"range":"600","text":"601"},"Update the dependencies array to be: [alert, history, props]",{"range":"602","text":"603"},"Update the dependencies array to be: [props.user?.role, urlState?.type]",{"range":"604","text":"605"},"Update the dependencies array to be: [formik, isEditing, query.data?.product]",{"range":"606","text":"607"},{"range":"608","text":"605"},{"range":"609","text":"601"},{"range":"610","text":"605"},{"range":"611","text":"601"},"Update the dependencies array to be: [getUserProfile]",{"range":"612","text":"613"},"Update the dependencies array to be: [history, logout]",{"range":"614","text":"615"},[3803,3826],"[formik, isEditing, query.data]",[1906,1908],"[alert, history, props]",[1972,1987],"[props.user?.role, urlState?.type]",[5129,5161],"[formik, isEditing, query.data?.product]",[1697,1712],[3903,3926],[1278,1293],[3428,3451],[916,923],"[getUserProfile]",[1069,1071],"[history, logout]"]