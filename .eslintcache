[{"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/index.js":"1","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/App.js":"2","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/index.js":"3","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/Footer.js":"4","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/LockScreen.js":"5","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Login.js":"6","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Registration.js":"7","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/ForgotPassword.js":"8","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error403.js":"9","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error400.js":"10","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error500.js":"11","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error503.js":"12","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error404.js":"13","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Widget.js":"14","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/WorkoutStatistic.js":"15","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/DistanceMap.js":"16","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/WorkoutPlan.js":"17","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/Home.js":"18","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Alert.js":"19","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/PersonalRecord.js":"20","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Button.js":"21","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Accordion.js":"22","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Modal.js":"23","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Badge.js":"24","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/ButtonGroup.js":"25","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/DietFoodMenu.js":"26","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/MediaObject.js":"27","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Carousel.js":"28","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Cards.js":"29","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/ListGroup.js":"30","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/ProgressBar.js":"31","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/DropDown.js":"32","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/PopOver.js":"33","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Grid.js":"34","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Pagination.js":"35","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Tab.js":"36","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/DataTable.js":"37","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Typography.js":"38","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/ApexChart.js":"39","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/BootstrapTable.js":"40","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/AppProfile/PostDetails.js":"41","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Calendar/Calendar.js":"42","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/AppProfile/AppProfile.js":"43","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/Checkout/Checkout.js":"44","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductGrid.js":"45","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductOrder.js":"46","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductDetail.js":"47","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/Invoice/Invoice.js":"48","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductList/ProductList.js":"49","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/Customers/Customers.js":"50","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Email/Compose/Compose.js":"51","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Email/Inbox/Inbox.js":"52","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Email/Read/Read.js":"53","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Wizard/Wizard.js":"54","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Summernote/SummerNote.js":"55","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Nestable/Nestable.js":"56","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Element/Element.js":"57","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/Pickers.js":"58","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/jQueryValidation/jQueryValidation.js":"59","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/MainNouiSlider.js":"60","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Jqv Map/JqvMap.js":"61","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Select2/Select2.js":"62","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Toastr/Toastr.js":"63","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Sweet Alert/SweetAlert.js":"64","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/customers/CustomerActions.js":"65","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/index.js":"66","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/index.js":"67","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/employees/index.js":"68","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/products/index.js":"69","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/suppliers/index.js":"70","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/index.js":"71","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/customers/index.js":"72","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Sparkline/index.js":"73","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/index.js":"74","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/rechart/index.js":"75","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/Ext.js":"76","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/realtime.js":"77","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/PageTitle.js":"78","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Select2/CustomGroup.js":"79","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Select2/MultiSelect.js":"80","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Select2/Disabling.js":"81","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/SlideDragable.js":"82","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/Nonlinearslider.js":"83","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/SnappingToValues.js":"84","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/Toggle.js":"85","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/ClickablePips.js":"86","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/Disabling.js":"87","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/NouiColor.js":"88","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/LinearGradientPicker.js":"89","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/MetarialTime.js":"90","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Nestable/NTable.js":"91","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/Color.js":"92","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Nestable/NTable2.js":"93","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/MetarialDateAndTime.js":"94","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Summernote/Rte.js":"95","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Wizard/StepFour.js":"96","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Wizard/StepOne.js":"97","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Wizard/StepThree.js":"98","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/MetarialDate.js":"99","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Wizard/StepTwo.js":"100","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Email/Inbox/InboxMessage.js":"101","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Email/Compose/DropFile.js":"102","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductList/SingleProductList.js":"103","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/index.jsx":"104","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/tableData.js":"105","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductGrid/Products.js":"106","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Calendar/EventCalendar.js":"107","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/ChatBox.js":"108","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/SideBar.js":"109","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/Header.js":"110","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/NavHader.js":"111","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Pie.js":"112","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Line5.js":"113","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Line4.js":"114","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Line3.js":"115","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/RadialBar.js":"116","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Bar3.js":"117","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/rechart/PositiveNagative.js":"118","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/rechart/BarChartNoPadding.js":"119","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/dualLine2.js":"120","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/polar.js":"121","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/radar.js":"122","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/dualArea.js":"123","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/basicArea.js":"124","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/gradinetArea.js":"125","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar6.js":"126","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/dualLine.js":"127","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar1.js":"128","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar5.js":"129","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/pie.js":"130","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/line1.js":"131","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Select2/data.js":"132","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/productData/index.js":"133","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/donught.js":"134","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Sparkline/NagetivePositive.js":"135","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Bar2.js":"136","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Button.js":"137","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/donut.jsx":"138","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/polar.jsx":"139","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/area.jsx":"140","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/productData/allProducts.js":"141","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/line.jsx":"142","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/bar.jsx":"143","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/chatBox/Chat.js":"144","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/SpinnerOverlay.js":"145","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Sparkline/sample-base.js":"146","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Pagination.js":"147","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/index.js":"148","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/productData/ProductStar.js":"149","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/chatBox/MsgBox.js":"150","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Select.js":"151","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/useQuery.js":"152","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/useAlert.js":"153","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/server.js":"154","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/chatBox/Alerts.js":"155","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/chatBox/Notes.js":"156","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/PatientTable.js":"157","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/FeesCollection.js":"158","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/ProfileDatatable.js":"159","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/SimpleDataTable.js":"160","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/BasicDatatable.js":"161","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/Modal.js":"162","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/alertData.js":"163","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/NagetivePositive2.js":"164","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Bar.js":"165","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Line.js":"166","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Line2.js":"167","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar4.js":"168","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar3.js":"169","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar2.js":"170","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/line6.js":"171","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/line4.js":"172","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/line3.js":"173","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartflot/Bar.js":"174","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/suppliers/SupplierActions.js":"175","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/employees/EmployeeActions.js":"176","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/products/ProductActions.js":"177","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/types/index.js":"178","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/units/index.js":"179","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/ModalWrapper.js":"180","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/purchase/index.js":"181","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/CreatableSelect.js":"182","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/sale/index.js":"183","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/expenses/index.js":"184","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/expenseTypes/index.js":"185","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/salaries/index.js":"186","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/types/TypeActions.js":"187","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/dashboard/index.js":"188","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/khaata/index.js":"189","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/purchase/PurchaseActions.js":"190"},{"size":265,"mtime":1627758461767,"results":"191","hashOfConfig":"192"},{"size":840,"mtime":1627758461761,"results":"193","hashOfConfig":"192"},{"size":16227,"mtime":1628532459534,"results":"194","hashOfConfig":"192"},{"size":452,"mtime":1627758461770,"results":"195","hashOfConfig":"192"},{"size":2601,"mtime":1627574498519,"results":"196","hashOfConfig":"192"},{"size":4912,"mtime":1627758461772,"results":"197","hashOfConfig":"192"},{"size":4625,"mtime":1627758461772,"results":"198","hashOfConfig":"192"},{"size":1832,"mtime":1627574498519,"results":"199","hashOfConfig":"192"},{"size":778,"mtime":1627574498518,"results":"200","hashOfConfig":"192"},{"size":755,"mtime":1627574498518,"results":"201","hashOfConfig":"192"},{"size":781,"mtime":1627574498519,"results":"202","hashOfConfig":"192"},{"size":763,"mtime":1627574498519,"results":"203","hashOfConfig":"192"},{"size":825,"mtime":1627574498519,"results":"204","hashOfConfig":"192"},{"size":146784,"mtime":1627574498519,"results":"205","hashOfConfig":"192"},{"size":35600,"mtime":1627574498492,"results":"206","hashOfConfig":"192"},{"size":38938,"mtime":1627574498490,"results":"207","hashOfConfig":"192"},{"size":48000,"mtime":1627574498492,"results":"208","hashOfConfig":"192"},{"size":80407,"mtime":1628525425461,"results":"209","hashOfConfig":"192"},{"size":21580,"mtime":1627574498500,"results":"210","hashOfConfig":"192"},{"size":39146,"mtime":1627574498492,"results":"211","hashOfConfig":"192"},{"size":27445,"mtime":1627574498500,"results":"212","hashOfConfig":"192"},{"size":25373,"mtime":1627574498499,"results":"213","hashOfConfig":"192"},{"size":20141,"mtime":1627574498501,"results":"214","hashOfConfig":"192"},{"size":16520,"mtime":1627574498500,"results":"215","hashOfConfig":"192"},{"size":6856,"mtime":1627574498500,"results":"216","hashOfConfig":"192"},{"size":21441,"mtime":1627574498490,"results":"217","hashOfConfig":"192"},{"size":9051,"mtime":1627574498501,"results":"218","hashOfConfig":"192"},{"size":4494,"mtime":1627574498500,"results":"219","hashOfConfig":"192"},{"size":12661,"mtime":1627574498500,"results":"220","hashOfConfig":"192"},{"size":16023,"mtime":1627574498501,"results":"221","hashOfConfig":"192"},{"size":10233,"mtime":1627758461768,"results":"222","hashOfConfig":"192"},{"size":24951,"mtime":1627574498501,"results":"223","hashOfConfig":"192"},{"size":3235,"mtime":1627574498502,"results":"224","hashOfConfig":"192"},{"size":9192,"mtime":1627574498501,"results":"225","hashOfConfig":"192"},{"size":4109,"mtime":1627758461768,"results":"226","hashOfConfig":"192"},{"size":12781,"mtime":1627758461768,"results":"227","hashOfConfig":"192"},{"size":641,"mtime":1627574498516,"results":"228","hashOfConfig":"192"},{"size":15822,"mtime":1627574498502,"results":"229","hashOfConfig":"192"},{"size":2533,"mtime":1627574498510,"results":"230","hashOfConfig":"192"},{"size":48689,"mtime":1627574498516,"results":"231","hashOfConfig":"192"},{"size":25914,"mtime":1627574498484,"results":"232","hashOfConfig":"192"},{"size":301,"mtime":1627574498485,"results":"233","hashOfConfig":"192"},{"size":41944,"mtime":1627574498484,"results":"234","hashOfConfig":"192"},{"size":14200,"mtime":1627574498487,"results":"235","hashOfConfig":"192"},{"size":472,"mtime":1627574498489,"results":"236","hashOfConfig":"192"},{"size":6693,"mtime":1627574498489,"results":"237","hashOfConfig":"192"},{"size":8303,"mtime":1627758461767,"results":"238","hashOfConfig":"192"},{"size":7666,"mtime":1627574498488,"results":"239","hashOfConfig":"192"},{"size":490,"mtime":1627574498489,"results":"240","hashOfConfig":"192"},{"size":29582,"mtime":1627574498488,"results":"241","hashOfConfig":"192"},{"size":10156,"mtime":1627574498486,"results":"242","hashOfConfig":"192"},{"size":13825,"mtime":1627574498486,"results":"243","hashOfConfig":"192"},{"size":15898,"mtime":1627574498487,"results":"244","hashOfConfig":"192"},{"size":1905,"mtime":1627574498495,"results":"245","hashOfConfig":"192"},{"size":890,"mtime":1627574498494,"results":"246","hashOfConfig":"192"},{"size":2251,"mtime":1627574498496,"results":"247","hashOfConfig":"192"},{"size":58118,"mtime":1627574498493,"results":"248","hashOfConfig":"192"},{"size":8330,"mtime":1627574498494,"results":"249","hashOfConfig":"192"},{"size":16864,"mtime":1627574498495,"results":"250","hashOfConfig":"192"},{"size":7326,"mtime":1627574498497,"results":"251","hashOfConfig":"192"},{"size":1277,"mtime":1627574498495,"results":"252","hashOfConfig":"192"},{"size":35894,"mtime":1627574498498,"results":"253","hashOfConfig":"192"},{"size":12503,"mtime":1627574498499,"results":"254","hashOfConfig":"192"},{"size":12069,"mtime":1627758461768,"results":"255","hashOfConfig":"192"},{"size":7594,"mtime":1628328863252,"results":"256","hashOfConfig":"192"},{"size":842,"mtime":1627816348572,"results":"257","hashOfConfig":"192"},{"size":800,"mtime":1627758523597,"results":"258","hashOfConfig":"192"},{"size":15206,"mtime":1628324531786,"results":"259","hashOfConfig":"192"},{"size":12957,"mtime":1628366418643,"results":"260","hashOfConfig":"192"},{"size":12857,"mtime":1628324593606,"results":"261","hashOfConfig":"192"},{"size":3085,"mtime":1627574498512,"results":"262","hashOfConfig":"192"},{"size":11656,"mtime":1628324551782,"results":"263","hashOfConfig":"192"},{"size":5254,"mtime":1627574498509,"results":"264","hashOfConfig":"192"},{"size":4844,"mtime":1627574498504,"results":"265","hashOfConfig":"192"},{"size":1115,"mtime":1627574498514,"results":"266","hashOfConfig":"192"},{"size":76,"mtime":1627574498517,"results":"267","hashOfConfig":"192"},{"size":1269,"mtime":1627574498509,"results":"268","hashOfConfig":"192"},{"size":467,"mtime":1627574498517,"results":"269","hashOfConfig":"192"},{"size":515,"mtime":1627574498498,"results":"270","hashOfConfig":"192"},{"size":963,"mtime":1627574498498,"results":"271","hashOfConfig":"192"},{"size":700,"mtime":1627574498498,"results":"272","hashOfConfig":"192"},{"size":710,"mtime":1627574498497,"results":"273","hashOfConfig":"192"},{"size":1170,"mtime":1627574498497,"results":"274","hashOfConfig":"192"},{"size":1039,"mtime":1627574498498,"results":"275","hashOfConfig":"192"},{"size":409,"mtime":1627574498498,"results":"276","hashOfConfig":"192"},{"size":508,"mtime":1627574498497,"results":"277","hashOfConfig":"192"},{"size":767,"mtime":1627574498497,"results":"278","hashOfConfig":"192"},{"size":1187,"mtime":1627574498497,"results":"279","hashOfConfig":"192"},{"size":1248,"mtime":1627574498493,"results":"280","hashOfConfig":"192"},{"size":493,"mtime":1627574498494,"results":"281","hashOfConfig":"192"},{"size":712,"mtime":1627574498495,"results":"282","hashOfConfig":"192"},{"size":319,"mtime":1627574498493,"results":"283","hashOfConfig":"192"},{"size":630,"mtime":1627574498496,"results":"284","hashOfConfig":"192"},{"size":532,"mtime":1627574498493,"results":"285","hashOfConfig":"192"},{"size":1172,"mtime":1627574498494,"results":"286","hashOfConfig":"192"},{"size":2803,"mtime":1627574498494,"results":"287","hashOfConfig":"192"},{"size":1792,"mtime":1627574498494,"results":"288","hashOfConfig":"192"},{"size":3154,"mtime":1627574498494,"results":"289","hashOfConfig":"192"},{"size":630,"mtime":1627574498493,"results":"290","hashOfConfig":"192"},{"size":1469,"mtime":1627574498495,"results":"291","hashOfConfig":"192"},{"size":1052,"mtime":1627574498486,"results":"292","hashOfConfig":"192"},{"size":1391,"mtime":1627574498486,"results":"293","hashOfConfig":"192"},{"size":2246,"mtime":1627574498489,"results":"294","hashOfConfig":"192"},{"size":1941,"mtime":1627574498514,"results":"295","hashOfConfig":"192"},{"size":9166,"mtime":1627574498516,"results":"296","hashOfConfig":"192"},{"size":848,"mtime":1627574498489,"results":"297","hashOfConfig":"192"},{"size":4801,"mtime":1627574498485,"results":"298","hashOfConfig":"192"},{"size":1842,"mtime":1627574498517,"results":"299","hashOfConfig":"192"},{"size":18181,"mtime":1628531495709,"results":"300","hashOfConfig":"192"},{"size":5508,"mtime":1627816246048,"results":"301","hashOfConfig":"192"},{"size":1085,"mtime":1627759104828,"results":"302","hashOfConfig":"192"},{"size":1607,"mtime":1627574498512,"results":"303","hashOfConfig":"192"},{"size":2937,"mtime":1627574498511,"results":"304","hashOfConfig":"192"},{"size":2035,"mtime":1627574498511,"results":"305","hashOfConfig":"192"},{"size":1594,"mtime":1628527196608,"results":"306","hashOfConfig":"192"},{"size":1797,"mtime":1627574498512,"results":"307","hashOfConfig":"192"},{"size":1869,"mtime":1627574498511,"results":"308","hashOfConfig":"192"},{"size":1406,"mtime":1627574498514,"results":"309","hashOfConfig":"192"},{"size":1150,"mtime":1627758461769,"results":"310","hashOfConfig":"192"},{"size":1742,"mtime":1627574498504,"results":"311","hashOfConfig":"192"},{"size":684,"mtime":1627574498509,"results":"312","hashOfConfig":"192"},{"size":1048,"mtime":1627574498509,"results":"313","hashOfConfig":"192"},{"size":1193,"mtime":1627574498504,"results":"314","hashOfConfig":"192"},{"size":1035,"mtime":1627574498504,"results":"315","hashOfConfig":"192"},{"size":1021,"mtime":1627574498504,"results":"316","hashOfConfig":"192"},{"size":1683,"mtime":1627574498503,"results":"317","hashOfConfig":"192"},{"size":1405,"mtime":1627574498504,"results":"318","hashOfConfig":"192"},{"size":1102,"mtime":1627574498503,"results":"319","hashOfConfig":"192"},{"size":1166,"mtime":1627574498503,"results":"320","hashOfConfig":"192"},{"size":998,"mtime":1627574498509,"results":"321","hashOfConfig":"192"},{"size":1219,"mtime":1627574498505,"results":"322","hashOfConfig":"192"},{"size":4300,"mtime":1627574498499,"results":"323","hashOfConfig":"192"},{"size":293,"mtime":1627574498490,"results":"324","hashOfConfig":"192"},{"size":845,"mtime":1627574498504,"results":"325","hashOfConfig":"192"},{"size":3077,"mtime":1627574498509,"results":"326","hashOfConfig":"192"},{"size":1686,"mtime":1627574498510,"results":"327","hashOfConfig":"192"},{"size":873,"mtime":1627758461767,"results":"328","hashOfConfig":"192"},{"size":432,"mtime":1627574498514,"results":"329","hashOfConfig":"192"},{"size":771,"mtime":1627574498514,"results":"330","hashOfConfig":"192"},{"size":529,"mtime":1627574498513,"results":"331","hashOfConfig":"192"},{"size":5127,"mtime":1627574498489,"results":"332","hashOfConfig":"192"},{"size":579,"mtime":1627574498514,"results":"333","hashOfConfig":"192"},{"size":718,"mtime":1627574498513,"results":"334","hashOfConfig":"192"},{"size":12913,"mtime":1627574498515,"results":"335","hashOfConfig":"192"},{"size":469,"mtime":1627758461768,"results":"336","hashOfConfig":"192"},{"size":375,"mtime":1627574498510,"results":"337","hashOfConfig":"192"},{"size":3755,"mtime":1628322583421,"results":"338","hashOfConfig":"192"},{"size":82,"mtime":1627917705352,"results":"339","hashOfConfig":"192"},{"size":2488,"mtime":1627574498489,"results":"340","hashOfConfig":"192"},{"size":10647,"mtime":1627574498515,"results":"341","hashOfConfig":"192"},{"size":1078,"mtime":1627758461768,"results":"342","hashOfConfig":"192"},{"size":406,"mtime":1628327123295,"results":"343","hashOfConfig":"192"},{"size":2568,"mtime":1627929496177,"results":"344","hashOfConfig":"192"},{"size":1092,"mtime":1628321758457,"results":"345","hashOfConfig":"192"},{"size":5117,"mtime":1627574498515,"results":"346","hashOfConfig":"192"},{"size":6101,"mtime":1627574498515,"results":"347","hashOfConfig":"192"},{"size":8587,"mtime":1627574498516,"results":"348","hashOfConfig":"192"},{"size":5309,"mtime":1627574498516,"results":"349","hashOfConfig":"192"},{"size":6025,"mtime":1627574498516,"results":"350","hashOfConfig":"192"},{"size":1565,"mtime":1627574498516,"results":"351","hashOfConfig":"192"},{"size":4663,"mtime":1627574498515,"results":"352","hashOfConfig":"192"},{"size":1405,"mtime":1627574498491,"results":"353","hashOfConfig":"192"},{"size":5081,"mtime":1627574498502,"results":"354","hashOfConfig":"192"},{"size":4053,"mtime":1627574498512,"results":"355","hashOfConfig":"192"},{"size":2103,"mtime":1627574498510,"results":"356","hashOfConfig":"192"},{"size":1731,"mtime":1627574498511,"results":"357","hashOfConfig":"192"},{"size":1603,"mtime":1627574498511,"results":"358","hashOfConfig":"192"},{"size":1536,"mtime":1627574498503,"results":"359","hashOfConfig":"192"},{"size":1782,"mtime":1627574498503,"results":"360","hashOfConfig":"192"},{"size":1742,"mtime":1627574498503,"results":"361","hashOfConfig":"192"},{"size":2515,"mtime":1627574498508,"results":"362","hashOfConfig":"192"},{"size":3204,"mtime":1627574498507,"results":"363","hashOfConfig":"192"},{"size":2732,"mtime":1627574498506,"results":"364","hashOfConfig":"192"},{"size":2166,"mtime":1627574498512,"results":"365","hashOfConfig":"192"},{"size":8524,"mtime":1628328253708,"results":"366","hashOfConfig":"192"},{"size":10859,"mtime":1628328924342,"results":"367","hashOfConfig":"192"},{"size":21128,"mtime":1628372083262,"results":"368","hashOfConfig":"192"},{"size":8194,"mtime":1628325631747,"results":"369","hashOfConfig":"192"},{"size":10816,"mtime":1628325689743,"results":"370","hashOfConfig":"192"},{"size":1308,"mtime":1628112456754,"results":"371","hashOfConfig":"192"},{"size":13968,"mtime":1628371736104,"results":"372","hashOfConfig":"192"},{"size":1083,"mtime":1628176069707,"results":"373","hashOfConfig":"192"},{"size":15523,"mtime":1628324662871,"results":"374","hashOfConfig":"192"},{"size":14180,"mtime":1628371327623,"results":"375","hashOfConfig":"192"},{"size":8355,"mtime":1628197062285,"results":"376","hashOfConfig":"192"},{"size":5111,"mtime":1628324725137,"results":"377","hashOfConfig":"192"},{"size":12873,"mtime":1628367826574,"results":"378","hashOfConfig":"192"},{"size":19641,"mtime":1628529513382,"results":"379","hashOfConfig":"192"},{"size":12366,"mtime":1628531105877,"results":"380","hashOfConfig":"192"},{"size":12688,"mtime":1628538381746,"results":"381","hashOfConfig":"192"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},"ws0969",{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"384"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"384"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"384"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"384"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"384"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"384"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"384"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"384"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"384"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"384"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"384"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"384"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"384"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"384"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"384"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"384"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"384"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"384"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"384"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"384"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"384"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"384"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"384"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"384"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"384"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"384"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"384"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"384"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"384"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"384"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"384"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"384"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"384"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"384"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"384"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"384"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"384"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"384"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"384"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"384"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"384"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"384"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"384"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"384"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"384"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"384"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"384"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"384"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"384"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"384"},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"384"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"384"},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"384"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"384"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"384"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"384"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745","usedDeprecatedRules":"384"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"384"},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"384"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"384"},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759","usedDeprecatedRules":"384"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"384"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"384"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"384"},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"384"},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"384"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"384"},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786","usedDeprecatedRules":"384"},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"384"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"384"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"384"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"384"},{"filePath":"799","messages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801","usedDeprecatedRules":"384"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"384"},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807","usedDeprecatedRules":"384"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810","usedDeprecatedRules":"384"},{"filePath":"811","messages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813","usedDeprecatedRules":"384"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"384"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"384"},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"822","messages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"824","messages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"826","usedDeprecatedRules":"384"},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"829","usedDeprecatedRules":"384"},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834","usedDeprecatedRules":"384"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"384"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"842","messages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/index.js",[],["846","847","848","849","850"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/App.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/index.js",["851","852","853","854","855"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/Footer.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/LockScreen.js",["856"],"import React, { useState } from 'react';\r\n\r\nconst LockScreen = () => {\r\n   const [lockScreenData, setLockScreenData] = useState({});\r\n   const handleBlur = (e) => {\r\n      const newLockScreenData = { ...lockScreenData };\r\n      newLockScreenData[e.target.name] = e.target.value;\r\n      setLockScreenData(newLockScreenData);\r\n   };\r\n   const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      const unlock = { ...lockScreenData };\r\n   };\r\n   return (\r\n      <div className=\"authincation\">\r\n         <div className=\"container p-0\">\r\n            <div className=\"row justify-content-center align-items-center authincation-page-area\">\r\n               <div className=\"col-lg-6 col-md-9\">\r\n                  <div className=\"authincation-content\">\r\n                     <div className=\"row no-gutters\">\r\n                        <div className=\"col-xl-12\">\r\n                           <div className=\"auth-form\">\r\n                              <h4 className=\"text-center mb-4\">Account Locked</h4>\r\n                              <form action=\"\" onSubmit={(e) => e.preventDefault(submitHandler)}>\r\n                                 <div className=\"form-group\">\r\n                                    <label htmlFor=\"lock-screen-password\">\r\n                                       <strong>Password</strong>\r\n                                    </label>\r\n                                    <input\r\n                                       id=\"lock-screen-password\"\r\n                                       type=\"password\"\r\n                                       className=\"form-control\"\r\n                                       defaultValue=\"Password\"\r\n                                       name=\"password\"\r\n                                       onChange={handleBlur}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"text-center\">\r\n                                    <button\r\n                                       type=\"submit\"\r\n                                       className=\"btn btn-primary btn-block\"\r\n                                       onClick={() => submitHandler}\r\n                                    >\r\n                                       Unlock\r\n                                    </button>\r\n                                 </div>\r\n                              </form>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default LockScreen;\r\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Login.js",["857"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n   const [loginData, setLoginData] = useState({});\r\n   const handleBlur = (e) => {\r\n      const newLoginData = { ...loginData };\r\n      newLoginData[e.target.name] = e.target.value;\r\n      setLoginData(newLoginData);\r\n   };\r\n   const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      const submitLogin = { ...loginData };\r\n   };\r\n   return (\r\n      <div className=\"authincation\">\r\n         <div className=\"container p-0\">\r\n            <div className=\"row justify-content-center align-items-center tw-h-screen\">\r\n               <div className=\"col-lg-6 col-md-9\">\r\n                  <div className=\"authincation-content\">\r\n                     <div className=\"row no-gutters\">\r\n                        <div className=\"col-xl-12\">\r\n                           <div className=\"auth-form\">\r\n                              <h4 className=\"text-center mb-4\">Sign in your account</h4>\r\n                              <form action=\"\" onSubmit={(e) => e.preventDefault(submitHandler)}>\r\n                                 <div className=\"form-group\">\r\n                                    <label className=\"mb-1\" htmlFor=\"login-email\">\r\n                                       <strong>Email</strong>\r\n                                    </label>\r\n                                    <input\r\n                                       id=\"login-email\"\r\n                                       type=\"email\"\r\n                                       className=\"form-control\"\r\n                                       defaultValue=\"hello@example.com\"\r\n                                       name=\"Email\"\r\n                                       onChange={handleBlur}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"form-group\">\r\n                                    <label className=\"mb-1\" htmlFor=\"login-password\">\r\n                                       <strong>Password</strong>\r\n                                    </label>\r\n                                    <input\r\n                                       id=\"login-password\"\r\n                                       type=\"password\"\r\n                                       className=\"form-control\"\r\n                                       defaultValue=\"Password\"\r\n                                       name=\"password\"\r\n                                       onChange={handleBlur}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"form-row d-flex justify-content-between mt-4 mb-2\">\r\n                                    <div className=\"form-group\">\r\n                                       <div className=\"custom-control custom-checkbox ml-1\">\r\n                                          <input\r\n                                             type=\"checkbox\"\r\n                                             className=\"custom-control-input\"\r\n                                             id=\"basic_checkbox_1\"\r\n                                          />\r\n                                          <label className=\"custom-control-label\" htmlFor=\"basic_checkbox_1\">\r\n                                             Remember my preference\r\n                                          </label>\r\n                                       </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                       <Link to=\"/page-forgot-password\">Forgot Password?</Link>\r\n                                    </div>\r\n                                 </div>\r\n                                 <div className=\"text-center\">\r\n                                    <button\r\n                                       type=\"submit\"\r\n                                       className=\"btn btn-primary btn-block\"\r\n                                       onClick={() => submitHandler}\r\n                                    >\r\n                                       Sign Me In\r\n                                    </button>\r\n                                 </div>\r\n                              </form>\r\n                              <div className=\"new-account mt-3\">\r\n                                 <p>\r\n                                    Don't have an account?{' '}\r\n                                    <Link className=\"text-primary\" to=\"/page-register\">\r\n                                       Sign up\r\n                                    </Link>\r\n                                 </p>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Login;\r\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Registration.js",["858"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n   const [registrationData, setRegistrationData] = useState({});\r\n   const handleBlur = (e) => {\r\n      const newRegistrationData = { ...registrationData };\r\n      newRegistrationData[e.target.name] = e.target.value;\r\n      setRegistrationData(newRegistrationData);\r\n   };\r\n   const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      const submitRegister = { ...registrationData };\r\n   };\r\n   return (\r\n      <div className=\"authincation\">\r\n         <div className=\"container p-0\">\r\n            <div className=\"row justify-content-center align-items-center tw-h-screen\">\r\n               <div className=\"col-lg-6 col-md-9\">\r\n                  <div className=\"authincation-content\">\r\n                     <div className=\"row no-gutters\">\r\n                        <div className=\"col-xl-12\">\r\n                           <div className=\"auth-form\">\r\n                              <h4 className=\"text-center mb-4\">Sign up your account</h4>\r\n                              <form action=\"\" onSubmit={(e) => e.preventDefault(submitHandler)}>\r\n                                 <div className=\"form-group\">\r\n                                    <label className=\"mb-1\" htmlFor=\"registration-username\">\r\n                                       <strong>Username</strong>\r\n                                    </label>\r\n                                    <input\r\n                                       id=\"registration-username\"\r\n                                       type=\"text\"\r\n                                       className=\"form-control\"\r\n                                       placeholder=\"username\"\r\n                                       name=\"name\"\r\n                                       onChange={handleBlur}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"form-group\">\r\n                                    <label className=\"mb-1\" htmlFor=\"registration-email\">\r\n                                       <strong>Email</strong>\r\n                                    </label>\r\n                                    <input\r\n                                       id=\"registration-email\"\r\n                                       type=\"email\"\r\n                                       className=\"form-control\"\r\n                                       placeholder=\"hello@example.com\"\r\n                                       name=\"Email\"\r\n                                       onChange={handleBlur}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"form-group\">\r\n                                    <label className=\"mb-1\" htmlFor=\"registration-password\">\r\n                                       <strong>Password</strong>\r\n                                    </label>\r\n                                    <input\r\n                                       id=\"registration-password\"\r\n                                       type=\"password\"\r\n                                       className=\"form-control\"\r\n                                       defaultValue=\"Password\"\r\n                                       name=\"password\"\r\n                                       onChange={handleBlur}\r\n                                    />\r\n                                 </div>\r\n                                 <div className=\"text-center mt-4\">\r\n                                    <button\r\n                                       type=\"submit\"\r\n                                       className=\"btn btn-primary btn-block\"\r\n                                       onClick={() => submitHandler}\r\n                                    >\r\n                                       Sign me up\r\n                                    </button>\r\n                                 </div>\r\n                              </form>\r\n                              <div className=\"new-account mt-3\">\r\n                                 <p>\r\n                                    Already have an account?{' '}\r\n                                    <Link className=\"text-primary\" to=\"/page-login\">\r\n                                       Sign in\r\n                                    </Link>\r\n                                 </p>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Register;\r\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/ForgotPassword.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error403.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error400.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error500.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error503.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Error404.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/Widget.js",["859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885"],"/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { Fragment, Suspense, lazy } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Dropdown, Tab, Nav } from 'react-bootstrap';\nimport { Sparklines, SparklinesLine, SparklinesBars } from 'react-sparklines';\nimport PageTitle from '../layouts/PageTitle';\n\n/// Scroll\n\nimport avatar1 from '../../images/avatar/1.jpg';\nimport avatar2 from '../../images/avatar/2.jpg';\nimport avatar3 from '../../images/avatar/3.jpg';\nimport avatar4 from '../../images/avatar/4.jpg';\nimport profile from '../../images/profile/profile.png';\nimport bg5 from '../../images/big/img5.jpg';\nimport bg1 from '../../images/big/img1.jpg';\nimport Pie from '../components/charts/Chartjs/pie';\nimport BarChart from '../components/charts/chartflot/Bar';\n\nimport LineChart from '../components/charts/Chartjs/line3';\nimport LineChart4 from '../components/charts/Chartjs/line4';\nimport LineChart6 from '../components/charts/Chartjs/line6';\nimport BarChartNoPadding from '../components/charts/rechart/BarChartNoPadding';\nimport { SparkNagetivePositive } from '../components/charts/Sparkline/NagetivePositive';\nimport BarChart2 from '../components/charts/Chartjs/bar2';\nimport BarChart3 from '../components/charts/Chartjs/bar3';\nimport LiveBar from '../components/charts/Chartjs/bar4';\n\nimport RealTime from '../components/charts/Chartjs/realtime';\n\nconst sampleData = [10, 24, 30, 10, 15, 0, 20, 30, 65, 12, 10, 6];\n\nconst Ext = lazy(() => import('../layouts/Ext'));\n\nconst Widget = () => (\n   <>\n      {/* <Ext /> */}\n      <PageTitle activeMenu=\"Statistics\" motherMenu=\"Widget\" />\n      <div className=\"row\">\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Timeline</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar id=\"DZ_W_TimeLine\" className=\"widget-timeline dz-scroll height370 ps ps--active-y\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-badge primary\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>10 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 Youtube, a video-sharing website, goes live{' '}\n                                 <strong className=\"text-primary\">$500</strong>.\n                              </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge info\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 New order placed <strong className=\"text-info\">#XF-2356.</strong>\n                              </h6>\n                              <p className=\"mb-0\">Quisque a consequat ante Sit amet magna at volutapt...</p>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge danger\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>30 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 john just buy your product <strong className=\"text-warning\">Sell $250</strong>\n                              </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge success\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>15 minutes ago</span>\n                              <h6 className=\"mb-0\">StumbleUpon is acquired by eBay. </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge warning\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">Mashable, a news website and blog, goes live.</h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge dark\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">Mashable, a news website and blog, goes live.</h6>\n                           </a>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Timeline 2</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar\n                     id=\"DZ_W_TimeLine1\"\n                     className=\"widget-timeline dz-scroll style-1 height370 ps ps--active-y\"\n                  >\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-badge primary\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>10 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 Youtube, a video-sharing website, goes live{' '}\n                                 <strong className=\"text-primary\">$500</strong>.\n                              </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge info\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 New order placed <strong className=\"text-info\">#XF-2356.</strong>\n                              </h6>\n                              <p className=\"mb-0\">Quisque a consequat ante Sit amet magna at volutapt...</p>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge danger\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>30 minutes ago</span>\n                              <h6 className=\"mb-0\">\n                                 john just buy your product <strong className=\"text-warning\">Sell $250</strong>\n                              </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge success\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>15 minutes ago</span>\n                              <h6 className=\"mb-0\">StumbleUpon is acquired by eBay. </h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge warning\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">Mashable, a news website and blog, goes live.</h6>\n                           </a>\n                        </li>\n                        <li>\n                           <div className=\"timeline-badge dark\" />\n                           <a className=\"timeline-panel text-muted\" href=\"#\">\n                              <span>20 minutes ago</span>\n                              <h6 className=\"mb-0\">Mashable, a news website and blog, goes live.</h6>\n                           </a>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-header  border-0 pb-0\">\n                  <h4 className=\"card-title\">Notifications</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar id=\"DZ_W_Todo1\" className=\"widget-media dz-scroll height370 ps ps--active-y\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-info\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Resport created successfully</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-success\">\n                                 <i className=\"fa fa-home\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-danger\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Resport created successfully</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle\n                                    type=\"button\"\n                                    className=\"btn btn-danger light sharp\"\n                                    data-toggle=\"dropdown\"\n                                 >\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-primary\">\n                                 <i className=\"fa fa-home\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card border-0 pb-0\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Notifications 2</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar id=\"DZ_W_Todo2\" className=\"widget-media dz-scroll height370 ps ps--active-y\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-info\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Resport created successfully <span className=\"badge badge-warning\">Warning</span>\n                                 </h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-success\">\n                                 <i className=\"fa fa-home\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Dr sultads Send you Photo <span className=\"badge light badge-danger\">Danger</span>\n                                 </h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-danger\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Resport created successfully{' '}\n                                    <span className=\"badge light badge-success\">Success</span>\n                                 </h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-primary\">\n                                 <i className=\"fa fa-home\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Reminder : Treatment Time!{' '}\n                                    <span className=\"badge light badge-success\">Success</span>\n                                 </h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card border-0 pb-0\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Message</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar id=\"DZ_W_Todo3\" className=\"widget-media dz-scroll height370 ps ps--active-y\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Alfie Mason <small className=\"text-muted\">29 July 2020</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-info\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Jacob Tucker <small className=\"text-muted\">29 July 2020</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-success\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar2} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Jack Ronan <small className=\"text-muted\">29 July 2020</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Noah Baldon <small className=\"text-muted\">29 July 2020</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-danger\">PU</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Thomas Grady <small className=\"text-muted\">02:26 PM</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-primary\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar3} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">\n                                    Oscar Weston <small className=\"text-muted\">29 July 2020</small>\n                                 </h5>\n                                 <p className=\"mb-1\">I shared this on my fb wall a few months back..</p>\n                                 <a href=\"#\" className=\"btn btn-primary btn-xxs shadow\">\n                                    Reply\n                                 </a>\n                                 <a href=\"#\" className=\"btn btn-outline-danger btn-xxs ml-1\">\n                                    Delete\n                                 </a>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-xxl-6 col-lg-6\">\n            <div className=\"card border-0 pb-0\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">To Do List</h4>\n               </div>\n               <div className=\"card-body\">\n                  <PerfectScrollbar id=\"DZ_W_Todo4\" className=\"widget-media dz-scroll height370 ps ps--active-y\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox1\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox1\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Get up</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-warning check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox2\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox2\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Stand up</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-primary check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox3\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox3\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Don't give up the fight.</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-info check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox4\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox4\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Do something else</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox5\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox5\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Get up</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"custom-control custom-checkbox checkbox-warning check-lg mr-3\">\n                                 <input\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id=\"customCheckBox6\"\n                                    required=\"\"\n                                 />\n                                 <label className=\"custom-control-label\" htmlFor=\"customCheckBox6\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-0\">Stand up</h5>\n                                 <small className=\"text-muted\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </PerfectScrollbar>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media ai-icon\">\n                     <span className=\"mr-3 bgl-primary text-primary\">\n                        {/* <!-- <i className=\"ti-user\"></i> --> */}\n                        <svg\n                           id=\"icon-customers\"\n                           xmlns=\"http://www.w3.org/2000/svg\"\n                           width=\"30\"\n                           height=\"30\"\n                           viewBox=\"0 0 24 24\"\n                           fill=\"none\"\n                           stroke=\"currentColor\"\n                           strokeWidth=\"2\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                           className=\"feather feather-user\"\n                        >\n                           <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                           <circle cx=\"12\" cy=\"7\" r=\"4\" />\n                        </svg>\n                     </span>\n                     <div className=\"media-body\">\n                        <p className=\"mb-1\">Patient</p>\n                        <h4 className=\"mb-0\">3280</h4>\n                        <span className=\"badge badge-primary\">+3.5%</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media ai-icon\">\n                     <span className=\"mr-3 bgl-warning text-warning\">\n                        <svg\n                           id=\"icon-orders\"\n                           xmlns=\"http://www.w3.org/2000/svg\"\n                           width=\"30\"\n                           height=\"30\"\n                           viewBox=\"0 0 24 24\"\n                           fill=\"none\"\n                           stroke=\"currentColor\"\n                           strokeWidth=\"2\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                           className=\"feather feather-file-text\"\n                        >\n                           <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\" />\n                           <polyline points=\"14 2 14 8 20 8\" />\n                           <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\" />\n                           <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\" />\n                           <polyline points=\"10 9 9 9 8 9\" />\n                        </svg>\n                     </span>\n                     <div className=\"media-body\">\n                        <p className=\"mb-1\">Bills</p>\n                        <h4 className=\"mb-0\">2570</h4>\n                        <span className=\"badge badge-warning\">+3.5%</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body  p-4\">\n                  <div className=\"media ai-icon\">\n                     <span className=\"mr-3 bgl-danger text-danger\">\n                        <svg\n                           id=\"icon-revenue\"\n                           xmlns=\"http://www.w3.org/2000/svg\"\n                           width=\"30\"\n                           height=\"30\"\n                           viewBox=\"0 0 24 24\"\n                           fill=\"none\"\n                           stroke=\"currentColor\"\n                           strokeWidth=\"2\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                           className=\"feather feather-dollar-sign\"\n                        >\n                           <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"23\" />\n                           <path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" />\n                        </svg>\n                     </span>\n                     <div className=\"media-body\">\n                        <p className=\"mb-1\">Revenue</p>\n                        <h4 className=\"mb-0\">364.50K</h4>\n                        <span className=\"badge badge-danger\">-3.5%</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media ai-icon\">\n                     <span className=\"mr-3 bgl-success text-success\">\n                        <svg\n                           id=\"icon-database-widget\"\n                           xmlns=\"http://www.w3.org/2000/svg\"\n                           width=\"24\"\n                           height=\"24\"\n                           viewBox=\"0 0 24 24\"\n                           fill=\"none\"\n                           stroke=\"currentColor\"\n                           strokeWidth=\"2\"\n                           strokeLinecap=\"round\"\n                           strokeLinejoin=\"round\"\n                           className=\"feather feather-database\"\n                        >\n                           <ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\" />\n                           <path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\" />\n                           <path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\" />\n                        </svg>\n                     </span>\n                     <div className=\"media-body\">\n                        <p className=\"mb-1\">Patient</p>\n                        <h4 className=\"mb-0\">364.50K</h4>\n                        <span className=\"badge badge-success\">-3.5%</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-danger\">\n               <div className=\"card-body  p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"flaticon-381-calendar-1\" />\n                     </span>\n                     <div className=\"media-body text-white text-right\">\n                        <p className=\"mb-1\">Appointment</p>\n                        <h3 className=\"text-white\">76</h3>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-success\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"flaticon-381-diamond\" />\n                     </span>\n                     <div className=\"media-body text-white text-right\">\n                        <p className=\"mb-1\">Earning</p>\n                        <h3 className=\"text-white\">$56K</h3>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-info\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"flaticon-381-heart\" />\n                     </span>\n                     <div className=\"media-body text-white text-right\">\n                        <p className=\"mb-1\">Total Patient</p>\n                        <h3 className=\"text-white\">783K</h3>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-primary\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"flaticon-381-user-7\" />\n                     </span>\n                     <div className=\"media-body text-white text-right\">\n                        <p className=\"mb-1\">Chef</p>\n                        <h3 className=\"text-white\">$76</h3>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-primary\">\n               <div className=\"card-body  p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"la la-users\" />\n                     </span>\n                     <div className=\"media-body text-white\">\n                        <p className=\"mb-1\">Total Students</p>\n                        <h3 className=\"text-white\">3280</h3>\n                        <div className=\"progress mb-2 bg-secondary\">\n                           <div className=\"progress-bar progress-animated bg-light\" style={{ width: '80%' }} />\n                        </div>\n                        <small>80% Increase in 20 Days</small>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-warning\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"la la-user\" />\n                     </span>\n                     <div className=\"media-body text-white\">\n                        <p className=\"mb-1\">New Students</p>\n                        <h3 className=\"text-white\">245</h3>\n                        <div className=\"progress mb-2 bg-primary\">\n                           <div className=\"progress-bar progress-animated bg-light\" style={{ width: '50%' }} />\n                        </div>\n                        <small>50% Increase in 25 Days</small>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-secondary\">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"la la-graduation-cap\" />\n                     </span>\n                     <div className=\"media-body text-white\">\n                        <p className=\"mb-1\">Total Course</p>\n                        <h3 className=\"text-white\">28</h3>\n                        <div className=\"progress mb-2 bg-primary\">\n                           <div className=\"progress-bar progress-animated bg-light\" style={{ width: '76%' }} />\n                        </div>\n                        <small>76% Increase in 20 Days</small>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card bg-danger \">\n               <div className=\"card-body p-4\">\n                  <div className=\"media\">\n                     <span className=\"mr-3\">\n                        <i className=\"la la-dollar\" />\n                     </span>\n                     <div className=\"media-body text-white\">\n                        <p className=\"mb-1\">Fees Collect</p>\n                        <h3 className=\"text-white\">250$</h3>\n                        <div className=\"progress mb-2 bg-secondary\">\n                           <div className=\"progress-bar progress-animated bg-light\" style={{ width: '30%' }} />\n                        </div>\n                        <small>30% Increase in 30 Days</small>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <h4 className=\"card-title\">Total Students</h4>\n                  <h3>3280</h3>\n                  <div className=\"progress mb-2\">\n                     <div className=\"progress-bar progress-animated bg-primary\" style={{ width: '80%' }} />\n                  </div>\n                  <small>80% Increase in 20 Days</small>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <h4 className=\"card-title\">New Students</h4>\n                  <h3>245</h3>\n                  <div className=\"progress mb-2\">\n                     <div className=\"progress-bar progress-animated bg-warning\" style={{ width: '50%' }} />\n                  </div>\n                  <small>50% Increase in 25 Days</small>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <h4 className=\"card-title\">Total Course</h4>\n                  <h3>28</h3>\n                  <div className=\"progress mb-2\">\n                     <div className=\"progress-bar progress-animated bg-red\" style={{ width: '76%' }} />\n                  </div>\n                  <small>76% Increase in 20 Days</small>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n            <div className=\"widget-stat card\">\n               <div className=\"card-body p-4\">\n                  <h4 className=\"card-title\">Fees Collection</h4>\n                  <h3>25160$</h3>\n                  <div className=\"progress mb-2\">\n                     <div className=\"progress-bar progress-animated bg-success\" style={{ width: '30%' }} />\n                  </div>\n                  <small>30% Increase in 30 Days</small>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-12 col-lg-12 col-sm-12\">\n            <div className=\"row\">\n               <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n                  <div className=\"widget-stat card bg-primary\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <h3 className=\"card-title text-white\">Total Students</h3>\n                        <h5 className=\"text-white mb-0\">\n                           <i className=\"fa fa-caret-up\" /> 422\n                        </h5>\n                     </div>\n                     <div className=\"card-body text-center\">\n                        <div className=\"ico-sparkline\">\n                           <div id=\"sparkline12\">\n                              <Pie color1=\"#7099ED\" color2=\"#B3CCFF\" color3=\"#9DBDFF\" height=\"100\" />\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n                  <div className=\"widget-stat card bg-warning overflow-hidden\">\n                     <div className=\"card-header border-0 \">\n                        <h3 className=\"card-title text-white\">New Students</h3>\n                        <h5 className=\"text-white mb-0\">\n                           <i className=\"fa fa-caret-up\" /> 357\n                        </h5>\n                     </div>\n                     <div className=\"card-body text-center p-0\">\n                        <div className=\"ico-sparkline\">\n                           <div id=\"spark-bar-2\">\n                              <BarChart color=\"#FFCE78\" lable={false} height=\"140\" width=\"290\" />\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n                  <div className=\"widget-stat card bg-secondary\">\n                     <div className=\"card-header pb-3 border-0 pb-0\">\n                        <h3 className=\"card-title text-white\">Total Course</h3>\n                        <h5 className=\"text-white mb-0\">\n                           <i className=\"fa fa-caret-up\" /> 547\n                        </h5>\n                     </div>\n                     <div className=\"card-body p-0\">\n                        <div className=\"px-4\">\n                           <SparkNagetivePositive />\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-3 col-lg-6 col-sm-6\">\n                  <div className=\"widget-stat card bg-danger overflow-hidden\">\n                     <div className=\"card-header pb-3 border-0 pb-0\">\n                        <h3 className=\"card-title text-white\">Fees Collection</h3>\n                        <h5 className=\"text-white mb-0\">\n                           <i className=\"fa fa-caret-up\" /> 3280$\n                        </h5>\n                     </div>\n                     <div className=\"card-body p-0\">\n                        <LineChart color=\"#F77F8B\" height=\"150\" />\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-12 col-sm-12\">\n            <div className=\"card\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h2 className=\"card-title\">about me</h2>\n               </div>\n               <div className=\"card-body pb-0\">\n                  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n                  <ul className=\"list-group list-group-flush\">\n                     <li className=\"list-group-item d-flex px-0 justify-content-between\">\n                        <strong>Gender</strong>\n                        <span className=\"mb-0\">Male</span>\n                     </li>\n                     <li className=\"list-group-item d-flex px-0 justify-content-between\">\n                        <strong>Education</strong>\n                        <span className=\"mb-0\">PHD</span>\n                     </li>\n                     <li className=\"list-group-item d-flex px-0 justify-content-between\">\n                        <strong>Designation</strong>\n                        <span className=\"mb-0\">Se. Professor</span>\n                     </li>\n                     <li className=\"list-group-item d-flex px-0 justify-content-between\">\n                        <strong>Operation Done</strong>\n                        <span className=\"mb-0\">120</span>\n                     </li>\n                  </ul>\n               </div>\n               <div className=\"card-footer pt-0 pb-0 text-center\">\n                  <div className=\"row\">\n                     <div className=\"col-4 pt-3 pb-3 border-right\">\n                        <h3 className=\"mb-1 text-primary\">150</h3>\n                        <span>Projects</span>\n                     </div>\n                     <div className=\"col-4 pt-3 pb-3 border-right\">\n                        <h3 className=\"mb-1 text-primary\">140</h3>\n                        <span>Uploads</span>\n                     </div>\n                     <div className=\"col-4 pt-3 pb-3\">\n                        <h3 className=\"mb-1 text-primary\">45</h3>\n                        <span>Tasks</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-8 col-xxl-8 col-lg-12 col-sm-12\">\n            <div id=\"user-activity\" className=\"card\">\n               <Tab.Container defaultActiveKey=\"day\">\n                  <div className=\"card-header border-0 pb-0 d-sm-flex d-block\">\n                     <h4 className=\"card-title\">Visitor Activity</h4>\n                     <div className=\"card-action mb-sm-0 my-2\">\n                        <Nav className=\"nav nav-tabs\" role=\"tablist\">\n                           <Nav.Item className=\"nav-item\">\n                              <Nav.Link className=\"nav-link \" data-toggle=\"tab\" href=\"#\" role=\"tab\" eventKey=\"day\">\n                                 Day\n                              </Nav.Link>\n                           </Nav.Item>\n                           <Nav.Item className=\"nav-item\">\n                              <Nav.Link className=\"nav-link\" data-toggle=\"tab\" href=\"#\" role=\"tab\" eventKey=\"month\">\n                                 Month\n                              </Nav.Link>\n                           </Nav.Item>\n                           <Nav.Item className=\"nav-item\">\n                              <Nav.Link className=\"nav-link\" data-toggle=\"tab\" href=\"#\" role=\"tab\" eventKey=\"year\">\n                                 Year\n                              </Nav.Link>\n                           </Nav.Item>\n                        </Nav>\n                     </div>\n                  </div>\n                  <div className=\"card-body\">\n                     <Tab.Content className=\"tab-content\" id=\"myTabContent\">\n                        <Tab.Pane className=\"tab-pane fade  show active\" id=\"user\" role=\"tabpanel\">\n                           <BarChart color=\"#48A9F8\" />\n                        </Tab.Pane>\n                     </Tab.Content>\n                  </div>\n               </Tab.Container>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-6\">\n            <div className=\"card overflow-hidden\">\n               <div className=\"card-body\">\n                  <div className=\"text-center\">\n                     <div className=\"profile-photo\">\n                        <img src={profile} width=\"100\" className=\"img-fluid rounded-circle\" alt=\"\" />\n                     </div>\n                     <h3 className=\"mt-4 mb-1\">Deangelo Sena</h3>\n                     <p className=\"text-muted\">Senior Manager</p>\n                     <a className=\"btn btn-outline-primary btn-rounded mt-3 px-5\" href=\"#\">\n                        Folllow\n                     </a>\n                  </div>\n               </div>\n\n               <div className=\"card-footer pt-0 pb-0 text-center\">\n                  <div className=\"row\">\n                     <div className=\"col-4 pt-3 pb-3 border-right\">\n                        <h3 className=\"mb-1\">150</h3>\n                        <span>Follower</span>\n                     </div>\n                     <div className=\"col-4 pt-3 pb-3 border-right\">\n                        <h3 className=\"mb-1\">140</h3>\n                        <span>Place Stay</span>\n                     </div>\n                     <div className=\"col-4 pt-3 pb-3\">\n                        <h3 className=\"mb-1\">45</h3>\n                        <span>Reviews</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-6\">\n            <div className=\"card active_users\">\n               <div className=\"card-header bg-success  border-0 pb-0\">\n                  {/* <h4 className=\"card-title text-white\">Active Users</h4> */}\n                  {/* <BarChart color=\"#47FF7B\" height=\"180\" width=\"320\" /> */}\n                  <LiveBar />\n               </div>\n               <div className=\"card-body pt-0\">\n                  <div className=\"list-group-flush mt-4\">\n                     <div className=\"list-group-item bg-transparent d-flex justify-content-between px-0 py-2 font-weight-semi-bold border-top-0\">\n                        <p className=\"mb-0\">Top Active Pages</p>\n                        <p className=\"mb-0\">Active Users</p>\n                     </div>\n                     <div className=\"list-group-item bg-transparent d-flex justify-content-between px-0 py-2\">\n                        <p className=\"mb-0\">/bootstrap-themes/</p>\n                        <p className=\"mb-0\">3</p>\n                     </div>\n                     <div className=\"list-group-item bg-transparent d-flex justify-content-between px-0 py-2\">\n                        <p className=\"mb-0\">/tags/html5/</p>\n                        <p className=\"mb-0\">3</p>\n                     </div>\n                     <div className=\"list-group-item bg-transparent d-xxl-flex justify-content-between px-0 py-1 d-none\">\n                        <p className=\"mb-0\">/</p>\n                        <p className=\"mb-0\">2</p>\n                     </div>\n                     <div className=\"list-group-item border-0 bg-transparent d-xxl-flex justify-content-between px-0 py-1 d-none\">\n                        <p className=\"mb-0\">/preview/falcon/dashboard/</p>\n                        <p className=\"mb-0\">2</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n\n         <div className=\"col-xl-4 col-lg-12 col-sm-12\">\n            <div className=\"card overflow-hidden\">\n               <div className=\"text-center p-3 overlay-box \" style={{ backgroundImage: `url(${bg1})` }}>\n                  <div className=\"profile-photo\">\n                     <img src={profile} width=\"100\" className=\"m-auto img-fluid rounded-circle d-block\" alt=\"\" />\n                  </div>\n                  <h3 className=\"mt-3 mb-1 text-white\">Deangelo Sena</h3>\n                  <p className=\"text-white mb-0\">Senior Manager</p>\n               </div>\n               <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Patient Gender</span> <strong className=\"text-muted\">Female </strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Years Old</span> <strong className=\"text-muted\">Age: 24 </strong>\n                  </li>\n               </ul>\n               <div className=\"card-footer border-0 mt-0\">\n                  <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\">\n                     <i className=\"fa fa-bell-o\" /> Reminder Alarm\n                  </button>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-12 col-lg-12 col-xxl-12 col-sm-12\">\n            <div className=\"card\">\n               <div className=\"card-header\">\n                  <h4 className=\"card-title\">Recent Payments Queue</h4>\n               </div>\n               <div className=\"card-body\">\n                  <div className=\"table-responsive recentOrderTable\">\n                     <table className=\"table verticle-middle table-responsive-md\">\n                        <thead>\n                           <tr>\n                              <th scope=\"col\">Ward No.</th>\n                              <th scope=\"col\">Patient</th>\n                              <th scope=\"col\">Dr Name</th>\n                              <th scope=\"col\">Date</th>\n                              <th scope=\"col\">Status</th>\n                              <th scope=\"col\">Bills</th>\n                              <th scope=\"col\" />\n                           </tr>\n                        </thead>\n                        <tbody>\n                           <tr>\n                              <td>12</td>\n                              <td>Mr. Bobby</td>\n                              <td>Dr. Jackson</td>\n                              <td>01 August 2020</td>\n                              <td>\n                                 <span className=\"badge badge-rounded badge-primary\">Checkin</span>\n                              </td>\n                              <td>$120</td>\n                              <td>\n                                 <Dropdown className=\"dropdown custom-dropdown mb-0\">\n                                    <Dropdown.Toggle\n                                       className=\"btn sharp btn-primary tp-btn icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                          width=\"18px\"\n                                          height=\"18px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                             <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item className=\"dropdown-item\" href=\"#;\">\n                                          Details\n                                       </Dropdown.Item>\n                                       <Dropdown.Item className=\"dropdown-item text-danger\" href=\"#;\">\n                                          Cancel\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr>\n                              <td>10 </td>\n                              <td>Mr. Dexter</td>\n                              <td>Dr. Charles</td>\n                              <td>31 July 2020</td>\n                              <td>\n                                 <span className=\"badge badge-rounded badge-warning\">Panding</span>\n                              </td>\n                              <td>$540</td>\n                              <td>\n                                 <Dropdown className=\"dropdown custom-dropdown mb-0\">\n                                    <Dropdown.Toggle\n                                       className=\"btn sharp btn-primary tp-btn icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                          width=\"18px\"\n                                          height=\"18px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                             <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item className=\"dropdown-item\" href=\"#;\">\n                                          Details\n                                       </Dropdown.Item>\n                                       <Dropdown.Item className=\"dropdown-item text-danger\" href=\"#;\">\n                                          Cancel\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr>\n                              <td>03 </td>\n                              <td>Mr. Nathan</td>\n                              <td>Dr. Frederick</td>\n                              <td>30 July 2020</td>\n                              <td>\n                                 <span className=\"badge badge-rounded badge-danger\">Canceled</span>\n                              </td>\n                              <td>$301</td>\n                              <td>\n                                 <Dropdown className=\"dropdown custom-dropdown mb-0\">\n                                    <Dropdown.Toggle\n                                       className=\"btn sharp btn-primary tp-btn icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                          width=\"18px\"\n                                          height=\"18px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                             <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item className=\"dropdown-item\" href=\"#;\">\n                                          Details\n                                       </Dropdown.Item>\n                                       <Dropdown.Item className=\"dropdown-item text-danger\" href=\"#;\">\n                                          Cancel\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr>\n                              <td>05</td>\n                              <td>Mr. Aurora</td>\n                              <td>Dr. Roman</td>\n                              <td>29 July 2020</td>\n                              <td>\n                                 <span className=\"badge badge-rounded badge-success\">Checkin</span>\n                              </td>\n                              <td>$099</td>\n                              <td>\n                                 <Dropdown className=\"dropdown custom-dropdown mb-0\">\n                                    <Dropdown.Toggle\n                                       className=\"btn sharp btn-primary tp-btn icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                          width=\"18px\"\n                                          height=\"18px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                             <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item className=\"dropdown-item\" href=\"#;\">\n                                          Details\n                                       </Dropdown.Item>\n                                       <Dropdown.Item className=\"dropdown-item text-danger\" href=\"#;\">\n                                          Cancel\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                           <tr>\n                              <td>06</td>\n                              <td>Mr. Matthew</td>\n                              <td>Dr. Samantha</td>\n                              <td>28 July 2020</td>\n                              <td>\n                                 <span className=\"badge badge-rounded badge-success\">Checkin</span>\n                              </td>\n                              <td>$520</td>\n                              <td>\n                                 <Dropdown className=\"dropdown custom-dropdown mb-0\">\n                                    <Dropdown.Toggle\n                                       className=\"btn sharp btn-primary tp-btn icon-false\"\n                                       data-toggle=\"dropdown\"\n                                    >\n                                       <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                          width=\"18px\"\n                                          height=\"18px\"\n                                          viewBox=\"0 0 24 24\"\n                                          version=\"1.1\"\n                                       >\n                                          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                             <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                             <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                          </g>\n                                       </svg>\n                                    </Dropdown.Toggle>\n                                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\n                                       <Dropdown.Item className=\"dropdown-item\" href=\"#;\">\n                                          Details\n                                       </Dropdown.Item>\n                                       <Dropdown.Item className=\"dropdown-item text-danger\" href=\"#;\">\n                                          Cancel\n                                       </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                 </Dropdown>\n                              </td>\n                           </tr>\n                        </tbody>\n                     </table>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-4 col-lg-6 col-xxl-4 col-sm-6\">\n            <div className=\"card text-white bg-primary\">\n               <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Blood type :</span>\n                     <strong>O+</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Allergies :</span>\n                     <strong>Penicilin, peanuts </strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Pressure :</span>\n                     <strong>120/100 mmHG</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Diseases :</span>\n                     <strong>Diabetes</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Temperture :</span>\n                     <strong>34 Degree</strong>\n                  </li>\n               </ul>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-6 col-xxl-4 col-sm-6\">\n            <div className=\"card text-white bg-warning text-black\">\n               <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Regular Checkups</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Dr Theodore Handle :</span>\n                     <strong>Dentist</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Dr Valentino Morose :</span>\n                     <strong>Surgeon</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Dr Fleece Marigold :</span>\n                     <strong>Clinical</strong>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                     <span className=\"mb-0\">Dr Eric Widget :</span>\n                     <strong>Cardiology</strong>\n                  </li>\n               </ul>\n            </div>\n         </div>\n\n         <div className=\"col-xl-4 col-lg-12 col-xxl-4 col-sm-12\">\n            <div className=\"card\">\n               <div className=\"card-body text-center ai-icon  text-primary\">\n                  <svg\n                     id=\"rocket-icon\"\n                     className=\"my-2\"\n                     viewBox=\"0 0 24 24\"\n                     width=\"80\"\n                     height=\"80\"\n                     stroke=\"currentColor\"\n                     strokeWidth=\"1\"\n                     fill=\"none\"\n                     strokeLinecap=\"round\"\n                     strokeLinejoin=\"round\"\n                  >\n                     <path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\" />\n                     <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\" />\n                     <path d=\"M16 10a4 4 0 0 1-8 0\" />\n                  </svg>\n                  <h4 className=\"my-2\">You don’t have badges yet</h4>\n                  <a href=\"#;\" className=\"btn my-2 btn-primary btn-lg px-4\">\n                     <i className=\"fa fa-usd\" /> Earn Budges\n                  </a>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-8 col-lg-12 col-xxl-8 col-sm-12\">\n            <div className=\"row\">\n               <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <div className=\"clearfix\">\n                           <h3 className=\"card-title\">Blood pressure</h3>\n                           <span>In the normal</span>\n                        </div>\n                        <div className=\"clearfix text-center\">\n                           <h3 className=\"text-primary mb-0\">120/89</h3>\n                           <span>mmHG</span>\n                        </div>\n                     </div>\n                     <div className=\"card-body text-center\">\n                        <div className=\"ico-sparkline\">\n                           <Sparklines data={sampleData}>\n                              <SparklinesBars style={{ fill: '#47ff7b' }} />\n                           </Sparklines>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <div className=\"clearfix\">\n                           <h3 className=\"card-title\">Heart Rate</h3>\n                           <span className=\"text-danger\">Above the normal</span>\n                        </div>\n                        <div className=\"clearfix text-center\">\n                           <h3 className=\"text-danger mb-0\">107</h3>\n                           <span>Per Min</span>\n                        </div>\n                     </div>\n                     <div className=\"card-body text-center\">\n                        <div className=\"ico-sparkline\">\n                           <div id=\"composite-bar\">\n                              <Sparklines data={sampleData}>\n                                 <SparklinesBars style={{ fill: '#65EDFF' }} />\n                              </Sparklines>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <div className=\"clearfix\">\n                           <h3 className=\"card-title\">Glucose Rate</h3>\n                           <span>In the normal</span>\n                        </div>\n                        <div className=\"clearfix text-center\">\n                           <h3 className=\"text-success mb-0\">97</h3>\n                           <span>mg/dl</span>\n                        </div>\n                     </div>\n                     <div className=\"card-body text-center\">\n                        <div className=\"ico-sparkline\">\n                           <div id=\"sparkline8\">\n                              <Sparklines data={sampleData}>\n                                 <SparklinesLine style={{ fill: '#9F8BCE' }} />\n                              </Sparklines>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <div className=\"clearfix\">\n                           <h3 className=\"card-title\">Clolesterol</h3>\n                           <span>In the normal</span>\n                        </div>\n                        <div className=\"clearfix text-center\">\n                           <h3 className=\"text-info mb-0\">124</h3>\n                           <span>mg/dl</span>\n                        </div>\n                     </div>\n                     <div className=\"card-body text-center\">\n                        <div className=\"ico-sparkline\">\n                           <Sparklines data={sampleData}>\n                              <SparklinesLine style={{ fill: '#c5e39f' }} />\n                           </Sparklines>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-12 col-sm-12\">\n            <div className=\"card overflow-hidden\">\n               <div className=\"text-center p-5 overlay-box\" style={{ backgroundImage: `url(${bg5})` }}>\n                  <img src={profile} width=\"100\" className=\"img-fluid rounded-circle\" alt=\"\" />\n                  <h3 className=\"mt-3 mb-0 text-white\">Deangelo Sena</h3>\n               </div>\n               <div className=\"card-body\">\n                  <div className=\"row text-center\">\n                     <div className=\"col-6\">\n                        <div className=\"bgl-primary rounded p-3\">\n                           <h4 className=\"mb-0\">Female</h4>\n                           <small>Patient Gender</small>\n                        </div>\n                     </div>\n                     <div className=\"col-6\">\n                        <div className=\"bgl-primary rounded p-3\">\n                           <h4 className=\"mb-0\">Age: 24</h4>\n                           <small>Years Old</small>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"card-footer mt-0\">\n                  <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\">\n                     View Profile\n                  </button>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-sm-6\">\n            <div className=\"card bg-primary\">\n               <div className=\"card-body pb-0\">\n                  <div className=\"row\">\n                     <div className=\"col\">\n                        <h5 className=\"text-white\">Power</h5>\n                        <span className=\"text-white\">2017.1.20</span>\n                     </div>\n                     <div className=\"col text-right\">\n                        <h5 className=\"text-white\">\n                           <i className=\"fa fa-caret-up\" /> 260\n                        </h5>\n                        <span className=\"text-white\">+12.5(2.8%)</span>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <BarChart3 color=\"#E2F3D2\" height={150} />\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-6 col-lg-6 col-xxl-6 col-sm-6\">\n            <div className=\"card bg-success\">\n               <div className=\"card-body pb-0\">\n                  <div className=\"row\">\n                     <div className=\"col\">\n                        <h5 className=\"text-white\">Power</h5>\n                        <span className=\"text-white\">2017.1.20</span>\n                     </div>\n                     <div className=\"col text-right\">\n                        <h5 className=\"text-white\">\n                           <i className=\"fa fa-caret-up\" /> 260\n                        </h5>\n                        <span className=\"text-white\">+12.5(2.8%)</span>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <LineChart height={150} color=\"#43D66C\" border=\"#45FDC6\" />\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-4 col-lg-6 col-xxl-4 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"card-body pb-0\">\n                  <div className=\"row\">\n                     <div className=\"col\">\n                        <h5>3650</h5>\n                        <span>VIEWS OF YOUR PROJECT</span>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <BarChart2 />\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-6 col-xxl-4 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"card-body\">\n                  <h5>Latency</h5>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <RealTime height=\"100\" />\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-4 col-lg-12 col-xxl-4 col-sm-12\">\n            <div className=\"card\">\n               <div className=\"card-body\">\n                  <div className=\"row justify-content-between align-items-center\">\n                     <div className=\"col-auto\">\n                        <h4 className=\"text-uppercase\">74,206 K</h4>\n                        <span>Lifetime earnings</span>\n                     </div>\n                     <div className=\"col-auto\">\n                        <div className=\"chart-wrapper height100\">\n                           <BarChart3 />\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         <div className=\"col-xl-12 col-xxl-12\">\n            <div className=\"row\">\n               <div className=\"col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-body pb-0\">\n                        <div className=\"row justify-content-between\">\n                           <div className=\"col-auto\">\n                              <h5>Lorem Ipsum</h5>\n                           </div>\n                           <div className=\"col-auto\">\n                              <h5>\n                                 <span>\n                                    <i className=\"fa fa-caret-up\" />\n                                 </span>\n                                 <span>2,250</span>\n                              </h5>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"chart-wrapper\">\n                        <LineChart4 color=\"#8ED3E2\" />\n                     </div>\n                     <div className=\"card-footer\">\n                        <div className=\"row\">\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-md-6\">\n                  <div className=\"card\">\n                     <div className=\"card-body pb-0\">\n                        <div className=\"row justify-content-between\">\n                           <div className=\"col-auto\">\n                              <h5>Lorem Ipsum</h5>\n                           </div>\n                           <div className=\"col-auto\">\n                              <h5>\n                                 <span>\n                                    <i className=\"fa fa-caret-up\" />\n                                 </span>\n                                 <span>2,250</span>\n                              </h5>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"chart-wrapper\">\n                        <BarChartNoPadding />\n                     </div>\n                     <div className=\"card-footer\">\n                        <div className=\"row\">\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                           <div className=\"col text-center\">\n                              <h5 className=\"font-weight-normal\">1230</h5>\n                              <span>Type A</span>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         {' '}\n         <div className=\"col-xl-6 col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-body pb-0\">\n                  <h4 className=\"card-title text-uppercase font-weight-normal\">Market Now</h4>\n                  <h2 className=\"font-weight-normal text-danger\">\n                     <span>\n                        <i className=\"fa fa-caret-up\" />\n                     </span>\n                     <span>3454664</span>\n                  </h2>\n                  <div className=\"row mt-5\">\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">APPL</h5>\n                        <span className=\"text-success\">+ 82.24 %</span>\n                     </div>\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">FB</h5>\n                        <span className=\"text-danger\">- 12.24 %</span>\n                     </div>\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">GOOG</h5>\n                        <span className=\"text-success\">+ 42.24 %</span>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper mt-3\">\n                  <BarChartNoPadding color=\"#4962E1\" />\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-6 col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-body pb-0\">\n                  <h4 className=\"card-title text-uppercase font-weight-normal\">Sales Analysis</h4>\n                  <h2 className=\"font-weight-normal text-danger\">\n                     <span>\n                        <i className=\"fa fa-caret-up\" />\n                     </span>\n                     <span>3454664</span>\n                  </h2>\n                  <div className=\"row mt-5\">\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">Today</h5>\n                        <span className=\"text-success\">+ 8224</span>\n                     </div>\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">Today</h5>\n                        <span className=\"text-danger\">- 1224</span>\n                     </div>\n                     <div className=\"col text-center\">\n                        <h5 className=\"font-weight-normal\">Week</h5>\n                        <span className=\"text-success\">+ 4224</span>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <div id=\"chart_widget_8\">\n                     {' '}\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine\n                           style={{\n                              strokeWidth: 1,\n                              stroke: '#8ED3E2',\n                              fill: 'none',\n                           }}\n                        />\n                     </Sparklines>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         {' '}\n         <div className=\"col-xl-6 col-lg-12\">\n            <div className=\"card\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Top Products</h4>\n               </div>\n               <div className=\"card-body pb-0\">\n                  <div className=\"widget-media\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar1} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-info\">KG</div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Resport created successfully</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-success\">\n                                 <i className=\"fa fa-home\" />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <LineChart4 color=\"#2780D4\" />\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-6 col-lg-12\">\n            <div className=\"card\">\n               <div className=\"card-header border-0 pb-0\">\n                  <h4 className=\"card-title\">Top Products</h4>\n               </div>\n               <div className=\"card-body pb-0\">\n                  <div className=\"widget-media\">\n                     <ul className=\"timeline\">\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar4} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Dr sultads Send you Photo</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-info\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar2} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Resport created successfully</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                        <li>\n                           <div className=\"timeline-panel\">\n                              <div className=\"media mr-2 media-success\">\n                                 <img alt=\"Avatar\" width=\"50\" src={avatar3} />\n                              </div>\n                              <div className=\"media-body\">\n                                 <h5 className=\"mb-1\">Reminder : Treatment Time!</h5>\n                                 <small className=\"d-block\">29 July 2020 - 02:26 PM</small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                 <Dropdown.Toggle variant=\"primary light\" className=\"icon-false sharp\">\n                                    <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                       <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                          <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                          <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                          <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                       </g>\n                                    </svg>\n                                 </Dropdown.Toggle>\n                                 <Dropdown.Menu className=\"dropdown-menu\">\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Edit\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"dropdown-item\" href=\"#\">\n                                       Delete\n                                    </Dropdown.Item>\n                                 </Dropdown.Menu>\n                              </Dropdown>\n                           </div>\n                        </li>\n                     </ul>\n                  </div>\n               </div>\n               <div className=\"chart-wrapper\">\n                  <LineChart4 color=\"#5514A4\" />\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         {' '}\n         <div className=\"col-xl-6 col-xxl-8 col-lg-12\">\n            <div className=\"row\">\n               <div className=\"col-sm-12\">\n                  <div className=\"card\">\n                     <div className=\"row no-gutters\">\n                        <div className=\"col-5 p-0\">\n                           <div className=\"card-body\">\n                              <h6 className=\"font-weight-normal text-uppercase\">Weekly sales</h6>\n                              <h4>$ 14000</h4>\n                              <div>\n                                 <span className=\"badge badge-light\">60%</span>\n                                 <span>Higher</span>\n                              </div>\n                           </div>\n                        </div>\n                        <div className=\"col-7 p-0\">\n                           <div className=\"chart-wrapper\">\n                              <LineChart4 color=\"rgb(170, 137, 209)\" borderColor=\"#5514A4\" />\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-sm-6\">\n                  <div className=\"card\">\n                     <div className=\"card-body\">\n                        <h5>570</h5>\n                        <p>All Sales</p>\n                     </div>\n                     <div className=\"chart-wrapper\">\n                        <LineChart6 height=\"200\" color=\"#82DB14\" />\n                     </div>\n                  </div>\n               </div>\n               <div className=\"col-sm-6\">\n                  <div className=\"card\">\n                     <div className=\"card-body\">\n                        <h5>570</h5>\n                        <p>All Sales</p>\n                     </div>\n                     <div className=\"chart-wrapper\">\n                        <LineChart6 height=\"200\" color=\"#5514A4\" />\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-6 col-xxl-4 col-lg-12\">\n            <div className=\"card\">\n               <div className=\"chart-wrapper\">\n                  <LineChart4 color=\"#48A9F8\" />\n               </div>\n               <div className=\"card-body\">\n                  <h4 className=\"card-title\">Sales Status</h4>\n                  <div className=\"row\">\n                     <div className=\"col-12\">\n                        <div className=\"d-flex justify-content-between\">\n                           <h6>67%</h6>\n                           <span>Grow</span>\n                        </div>\n                        <div className=\"progress\">\n                           <div className=\"progress-bar bg-primary\" style={{ width: '80%' }} />\n                        </div>\n                     </div>\n                     <div className=\"col-12 mt-4\">\n                        <div className=\"d-flex justify-content-between\">\n                           <h6>67%</h6>\n                           <span>Grow</span>\n                        </div>\n                        <div className=\"progress\">\n                           <div className=\"progress-bar bg-success\" style={{ width: '70%' }} />\n                        </div>\n                     </div>\n                     <div className=\"col-12 mt-4\">\n                        <div className=\"d-flex justify-content-between\">\n                           <h6>67%</h6>\n                           <span>Grow</span>\n                        </div>\n                        <div className=\"progress\">\n                           <div className=\"progress-bar bg-info\" style={{ width: '40%' }} />\n                        </div>\n                     </div>\n                     <div className=\"col-12 mt-4\">\n                        <div className=\"d-flex justify-content-between\">\n                           <h6>67%</h6>\n                           <span>Grow</span>\n                        </div>\n                        <div className=\"progress\">\n                           <div className=\"progress-bar bg-warning\" style={{ width: '80%' }} />\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div className=\"row\">\n         {' '}\n         <div className=\"col-xl-3 col-xxl-3 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"social-graph-wrapper widget-facebook\">\n                  <span className=\"s-icon\">\n                     <i className=\"fa fa-facebook\" />\n                  </span>\n               </div>\n               <div className=\"row\">\n                  <div className=\"col-6 border-right\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">89</span> k\n                        </h4>\n                        <p className=\"m-0\">Friends</p>\n                     </div>\n                  </div>\n                  <div className=\"col-6\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">119</span> k\n                        </h4>\n                        <p className=\"m-0\">Followers</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-xxl-3 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"social-graph-wrapper widget-linkedin\">\n                  <span className=\"s-icon\">\n                     <i className=\"fa fa-linkedin\" />\n                  </span>\n               </div>\n               <div className=\"row\">\n                  <div className=\"col-6 border-right\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">89</span> k\n                        </h4>\n                        <p className=\"m-0\">Friends</p>\n                     </div>\n                  </div>\n                  <div className=\"col-6\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">119</span> k\n                        </h4>\n                        <p className=\"m-0\">Followers</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-xxl-3 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"social-graph-wrapper widget-googleplus\">\n                  <span className=\"s-icon\">\n                     <i className=\"fa fa-google-plus\" />\n                  </span>\n               </div>\n               <div className=\"row\">\n                  <div className=\"col-6 border-right\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">89</span> k\n                        </h4>\n                        <p className=\"m-0\">Friends</p>\n                     </div>\n                  </div>\n                  <div className=\"col-6\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">119</span> k\n                        </h4>\n                        <p className=\"m-0\">Followers</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-xl-3 col-xxl-3 col-sm-6\">\n            <div className=\"card\">\n               <div className=\"social-graph-wrapper widget-twitter\">\n                  <span className=\"s-icon\">\n                     <i className=\"fa fa-twitter\" />\n                  </span>\n               </div>\n               <div className=\"row\">\n                  <div className=\"col-6 border-right\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">89</span> k\n                        </h4>\n                        <p className=\"m-0\">Friends</p>\n                     </div>\n                  </div>\n                  <div className=\"col-6\">\n                     <div className=\"pt-3 pb-3 pl-0 pr-0 text-center\">\n                        <h4 className=\"m-1\">\n                           <span className=\"counter\">119</span> k\n                        </h4>\n                        <p className=\"m-0\">Followers</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   </>\n);\n\nexport default Widget;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/WorkoutStatistic.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/DistanceMap.js",["886"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport cls from 'classnames';\n//* * Import Image */\n\nimport loadable from '@loadable/component';\nimport pMinDelay from 'p-min-delay';\n\nimport { Dropdown } from 'react-bootstrap';\n\n/// Scroll\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport map from '../../../images/map.png';\n\nconst ApexBar = loadable(() => pMinDelay(import('../charts/apexcharts/Bar'), 500));\nconst ApexBar2 = loadable(() => pMinDelay(import('../charts/apexcharts/Bar2'), 500));\n\nconst DistanceMap = () => {\n   const [activeTab, setActiveTab] = useState('running');\n   return (\n      <>\n         <div className=\"row\">\n            <div className=\"col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-body\">\n                     <div className=\"media distance-bx align-items-center\">\n                        <span className=\"icon bg-warning shadow-warning mr-3\">\n                           <svg\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <g clipPath=\"url(#clip1)\">\n                                 <path\n                                    d=\"M0.988957 17.0741C0.328275 17.2007 -0.104585 17.8386 0.0219823 18.4993C0.133362 19.0815 0.644694 19.4865 1.21678 19.4865C1.29272 19.4865 1.37119 19.4789 1.44713 19.4637L6.4592 18.5018C6.74524 18.4461 7.00091 18.2917 7.18316 18.0639L9.33481 15.3503L8.61593 14.9832C8.08435 14.7149 7.71475 14.2289 7.58818 13.6391L5.55804 16.1983L0.988957 17.0741Z\"\n                                    fill=\"white\"\n                                 />\n                                 <path\n                                    d=\"M18.84 6.49306C20.3135 6.49306 21.508 5.29854 21.508 3.82502C21.508 2.3515 20.3135 1.15698 18.84 1.15698C17.3665 1.15698 16.1719 2.3515 16.1719 3.82502C16.1719 5.29854 17.3665 6.49306 18.84 6.49306Z\"\n                                    fill=\"white\"\n                                 />\n                                 <path\n                                    d=\"M13.0179 3.15677C12.7369 2.86819 12.4762 2.75428 12.1902 2.75428C12.0864 2.75428 11.9826 2.76947 11.8712 2.79479L7.29203 3.88073C6.6592 4.03008 6.26937 4.66545 6.41872 5.29576C6.54782 5.83746 7.02877 6.20198 7.56289 6.20198C7.65404 6.20198 7.74514 6.19185 7.8363 6.16907L11.7371 5.24513C11.9902 5.52611 13.2584 6.90063 13.4888 7.14364C11.8763 8.87002 10.2639 10.5939 8.65137 12.3202C8.62605 12.3481 8.60329 12.3759 8.58049 12.4038C8.10966 13.0037 8.25397 13.9454 8.96275 14.3023L13.9064 16.826L11.3397 20.985C10.9878 21.5571 11.165 22.3064 11.7371 22.6608C11.9371 22.7848 12.1573 22.843 12.375 22.843C12.7825 22.843 13.1824 22.638 13.4128 22.2659L16.6732 16.983C16.8529 16.6919 16.901 16.34 16.8074 16.0135C16.7137 15.6844 16.4884 15.411 16.1821 15.2566L12.8331 13.553L16.3543 9.78636L19.0122 12.0393C19.2324 12.2266 19.5032 12.3177 19.7716 12.3177C20.0601 12.3177 20.3487 12.2114 20.574 12.0038L23.6243 9.16112C24.1002 8.71814 24.128 7.97392 23.685 7.49803C23.4521 7.24996 23.1383 7.12339 22.8244 7.12339C22.5383 7.12339 22.2497 7.22717 22.0245 7.43727L19.7412 9.56107C19.7386 9.56361 14.0178 4.18196 13.0179 3.15677Z\"\n                                    fill=\"white\"\n                                 />\n                              </g>\n                              <defs>\n                                 <clipPath id=\"clip1\">\n                                    <rect width={24} height={24} fill=\"white\" />\n                                 </clipPath>\n                              </defs>\n                           </svg>\n                        </span>\n                        <div className=\"media-body\">\n                           <h6 className=\"fs-18 text-black mb-3\">\n                              Running\n                              <span className=\"pull-right fs-14 text-dark\">100km</span>\n                           </h6>\n                           <div className=\"progress\" style={{ height: 9 }}>\n                              <div\n                                 className=\"progress-bar bg-warning progress-animated\"\n                                 style={{ width: '55%', height: 9 }}\n                                 role=\"progressbar\"\n                              >\n                                 <span className=\"sr-only\">55% Complete</span>\n                                 <span className=\"bg-warning arrow\" />\n                                 <span className=\"font-w600 counter-bx text-black\">\n                                    <strong className=\"counter font-w600\">45</strong>\n                                    km\n                                 </span>\n                              </div>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-lg-6\">\n               <div className=\"card\">\n                  <div className=\"card-body\">\n                     <div className=\"media distance-bx align-items-center\">\n                        <span className=\"icon bg-info shadow-info mr-3\">\n                           <svg\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <g clipPath=\"url(#clip2)\">\n                                 <path\n                                    d=\"M10.8586 5.22593L5.87121 10.5542C5.50758 11.0845 5.64394 11.8067 6.17172 12.1678L11.1945 15.6098L11.1945 18.9557C11.1945 19.5921 11.6995 20.1249 12.3359 20.1376C12.9874 20.1476 13.5177 19.6249 13.5177 18.976L13.5177 15.0012C13.5177 14.6173 13.3283 14.2588 13.0126 14.0441L9.79041 11.8345L12.5025 8.9583L13.8914 12.1224C14.0758 12.5441 14.4949 12.8169 14.9546 12.8169L19.1844 12.8169C19.8207 12.8169 20.3536 12.3118 20.3662 11.6755C20.3763 11.0239 19.8536 10.4936 19.2046 10.4936L15.7172 10.4936C15.2576 9.44818 14.7677 8.41282 14.3409 7.35222C14.1237 6.81686 14.0025 6.58454 13.6036 6.21585C13.5227 6.1401 12.9596 5.62495 12.4571 5.16535C11.995 4.74613 11.2828 4.77391 10.8586 5.22593Z\"\n                                    fill=\"white\"\n                                 />\n                                 <path\n                                    d=\"M15.6162 5.80675C17.0861 5.80675 18.2778 4.61511 18.2778 3.14514C18.2778 1.67517 17.0861 0.483521 15.6162 0.483521C14.1462 0.483521 12.9545 1.67517 12.9545 3.14514C12.9545 4.61511 14.1462 5.80675 15.6162 5.80675Z\"\n                                    fill=\"white\"\n                                 />\n                                 <path\n                                    d=\"M4.89899 23.5163C7.60463 23.5163 9.79798 21.323 9.79798 18.6174C9.79798 15.9117 7.60463 13.7184 4.89899 13.7184C2.19335 13.7184 -1.81927e-07 15.9117 -2.13831e-07 18.6174C-2.45735e-07 21.323 2.19335 23.5163 4.89899 23.5163Z\"\n                                    fill=\"white\"\n                                 />\n                                 <path\n                                    d=\"M19.101 23.5163C21.8066 23.5163 24 21.323 24 18.6174C24 15.9117 21.8066 13.7184 19.101 13.7184C16.3954 13.7184 14.202 15.9117 14.202 18.6174C14.202 21.323 16.3954 23.5163 19.101 23.5163Z\"\n                                    fill=\"white\"\n                                 />\n                              </g>\n                              <defs>\n                                 <clipPath id=\"clip2\">\n                                    <rect width={24} height={24} fill=\"white\" />\n                                 </clipPath>\n                              </defs>\n                           </svg>\n                        </span>\n                        <div className=\"media-body\">\n                           <h6 className=\"fs-18 text-black mb-3\">\n                              Cycling\n                              <span className=\"pull-right fs-14 text-dark\">200km</span>\n                           </h6>\n                           <div className=\"progress\" style={{ height: 9 }}>\n                              <div\n                                 className=\"progress-bar bg-info progress-animated\"\n                                 style={{ width: '75%', height: 9 }}\n                                 role=\"progressbar\"\n                              >\n                                 <span className=\"sr-only\">175% Complete</span>\n                                 <span className=\"bg-info arrow\" />\n                                 <span className=\"font-w600 counter-bx text-black\">\n                                    <strong className=\"counter font-w600\">125</strong>\n                                    km\n                                 </span>\n                              </div>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-3 col-xxl-4 col-lg-5\">\n               <div className=\"card\">\n                  <div className=\"card-header d-sm-flex d-block border-0\">\n                     <div className=\"mr-auto pr-3\">\n                        <h4 className=\"text-black fs-20\">Recent Activities</h4>\n                        <p className=\"fs-13 mb-0\">Lorem ipsum dolor sit amet, consectetur</p>\n                     </div>\n                  </div>\n                  <PerfectScrollbar className=\"card-body pt-0 pb-3 dz-scroll height350 ps ps--active-y\">\n                     <div className=\"d-flex py-3 border-bottom align-items-center\">\n                        <span className=\"activity-icon border border-warning border-2 mr-3\">\n                           <svg\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <g clipPath=\"url(#clip3)\">\n                                 <path\n                                    d=\"M0.988957 17.0741C0.328275 17.2007 -0.104585 17.8386 0.0219823 18.4993C0.133362 19.0815 0.644694 19.4865 1.21678 19.4865C1.29272 19.4865 1.37119 19.4789 1.44713 19.4637L6.4592 18.5018C6.74524 18.4461 7.00091 18.2917 7.18316 18.0639L9.33481 15.3503L8.61593 14.9832C8.08435 14.7149 7.71475 14.2289 7.58818 13.6391L5.55804 16.1983L0.988957 17.0741Z\"\n                                    fill=\"#FF9432\"\n                                 />\n                                 <path\n                                    d=\"M18.84 6.49306C20.3135 6.49306 21.508 5.29854 21.508 3.82502C21.508 2.3515 20.3135 1.15698 18.84 1.15698C17.3665 1.15698 16.1719 2.3515 16.1719 3.82502C16.1719 5.29854 17.3665 6.49306 18.84 6.49306Z\"\n                                    fill=\"#FF9432\"\n                                 />\n                                 <path\n                                    d=\"M13.0179 3.15677C12.7369 2.86819 12.4762 2.75428 12.1902 2.75428C12.0864 2.75428 11.9826 2.76947 11.8712 2.79479L7.29203 3.88073C6.6592 4.03008 6.26937 4.66545 6.41872 5.29576C6.54782 5.83746 7.02877 6.20198 7.56289 6.20198C7.65404 6.20198 7.74514 6.19185 7.8363 6.16907L11.7371 5.24513C11.9902 5.52611 13.2584 6.90063 13.4888 7.14364C11.8763 8.87002 10.2639 10.5939 8.65137 12.3202C8.62605 12.3481 8.60329 12.3759 8.58049 12.4038C8.10966 13.0037 8.25397 13.9454 8.96275 14.3023L13.9064 16.826L11.3397 20.985C10.9878 21.5571 11.165 22.3064 11.7371 22.6608C11.9371 22.7848 12.1573 22.843 12.375 22.843C12.7825 22.843 13.1824 22.638 13.4128 22.2659L16.6732 16.983C16.8529 16.6919 16.901 16.34 16.8074 16.0135C16.7137 15.6844 16.4884 15.411 16.1821 15.2566L12.8331 13.553L16.3543 9.78636L19.0122 12.0393C19.2324 12.2266 19.5032 12.3177 19.7716 12.3177C20.0601 12.3177 20.3487 12.2114 20.574 12.0038L23.6243 9.16112C24.1002 8.71814 24.128 7.97392 23.685 7.49803C23.4521 7.24996 23.1383 7.12339 22.8244 7.12339C22.5383 7.12339 22.2497 7.22717 22.0245 7.43727L19.7412 9.56107C19.7386 9.56361 14.0178 4.18196 13.0179 3.15677Z\"\n                                    fill=\"#FF9432\"\n                                 />\n                              </g>\n                              <defs>\n                                 <clipPath id=\"clip3\">\n                                    <rect width={24} height={24} fill=\"white\" />\n                                 </clipPath>\n                              </defs>\n                           </svg>\n                        </span>\n                        <div>\n                           <h6 className=\"font-w600 fs-16 mb-0\">\n                              <Link to=\"/personal-record\" className=\"text-black\">\n                                 Sunday Running\n                              </Link>\n                           </h6>\n                           <span className=\"fs-12\">2km distances</span>\n                        </div>\n                        <Link to=\"/personal-record\" className=\"ml-auto\">\n                           <svg\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <path d=\"M9 18L15 12L9 6\" fill=\"#D3D6E4\" />\n                           </svg>\n                        </Link>\n                     </div>\n                     <div className=\"d-flex py-3 border-bottom align-items-center\">\n                        <span className=\"activity-icon border border-warning border-2 mr-3\">\n                           <svg\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <g clipPath=\"url(#clip4)\">\n                                 <path\n                                    d=\"M0.988957 17.0741C0.328275 17.2007 -0.104585 17.8386 0.0219823 18.4993C0.133362 19.0815 0.644694 19.4865 1.21678 19.4865C1.29272 19.4865 1.37119 19.4789 1.44713 19.4637L6.4592 18.5018C6.74524 18.4461 7.00091 18.2917 7.18316 18.0639L9.33481 15.3503L8.61593 14.9832C8.08435 14.7149 7.71475 14.2289 7.58818 13.6391L5.55804 16.1983L0.988957 17.0741Z\"\n                                    fill=\"#FF9432\"\n                                 />\n                                 <path\n                                    d=\"M18.84 6.49306C20.3135 6.49306 21.508 5.29854 21.508 3.82502C21.508 2.3515 20.3135 1.15698 18.84 1.15698C17.3665 1.15698 16.1719 2.3515 16.1719 3.82502C16.1719 5.29854 17.3665 6.49306 18.84 6.49306Z\"\n                                    fill=\"#FF9432\"\n                                 />\n                                 <path\n                                    d=\"M13.0179 3.15677C12.7369 2.86819 12.4762 2.75428 12.1902 2.75428C12.0864 2.75428 11.9826 2.76947 11.8712 2.79479L7.29203 3.88073C6.6592 4.03008 6.26937 4.66545 6.41872 5.29576C6.54782 5.83746 7.02877 6.20198 7.56289 6.20198C7.65404 6.20198 7.74514 6.19185 7.8363 6.16907L11.7371 5.24513C11.9902 5.52611 13.2584 6.90063 13.4888 7.14364C11.8763 8.87002 10.2639 10.5939 8.65137 12.3202C8.62605 12.3481 8.60329 12.3759 8.58049 12.4038C8.10966 13.0037 8.25397 13.9454 8.96275 14.3023L13.9064 16.826L11.3397 20.985C10.9878 21.5571 11.165 22.3064 11.7371 22.6608C11.9371 22.7848 12.1573 22.843 12.375 22.843C12.7825 22.843 13.1824 22.638 13.4128 22.2659L16.6732 16.983C16.8529 16.6919 16.901 16.34 16.8074 16.0135C16.7137 15.6844 16.4884 15.411 16.1821 15.2566L12.8331 13.553L16.3543 9.78636L19.0122 12.0393C19.2324 12.2266 19.5032 12.3177 19.7716 12.3177C20.0601 12.3177 20.3487 12.2114 20.574 12.0038L23.6243 9.16112C24.1002 8.71814 24.128 7.97392 23.685 7.49803C23.4521 7.24996 23.1383 7.12339 22.8244 7.12339C22.5383 7.12339 22.2497 7.22717 22.0245 7.43727L19.7412 9.56107C19.7386 9.56361 14.0178 4.18196 13.0179 3.15677Z\"\n                                    fill=\"#FF9432\"\n                                 />\n                              </g>\n                              <defs>\n                                 <clipPath id=\"clip4\">\n                                    <rect width={24} height={24} fill=\"white\" />\n                                 </clipPath>\n                              </defs>\n                           </svg>\n                        </span>\n                        <div>\n                           <h6 className=\"font-w600 fs-16 mb-0\">\n                              <Link to=\"/personal-record\" className=\"text-black\">\n                                 Saturday Running\n                              </Link>\n                           </h6>\n                           <span className=\"fs-12\">2km distances</span>\n                        </div>\n                        <Link to=\"/personal-record\" className=\"ml-auto\">\n                           <svg\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <path d=\"M9 18L15 12L9 6\" fill=\"#D3D6E4\" />\n                           </svg>\n                        </Link>\n                     </div>\n                     <div className=\"d-flex py-3 border-bottom align-items-center\">\n                        <span className=\"activity-icon border border-info border-2 mr-3\">\n                           <svg\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <g clipPath=\"url(#clip5)\">\n                                 <path\n                                    d=\"M10.8586 5.22593L5.87121 10.5542C5.50758 11.0845 5.64394 11.8067 6.17172 12.1678L11.1945 15.6098L11.1945 18.9557C11.1945 19.5921 11.6995 20.1249 12.3359 20.1376C12.9874 20.1476 13.5177 19.6249 13.5177 18.976L13.5177 15.0012C13.5177 14.6173 13.3283 14.2588 13.0126 14.0441L9.79041 11.8345L12.5025 8.9583L13.8914 12.1224C14.0758 12.5441 14.4949 12.8169 14.9546 12.8169L19.1844 12.8169C19.8207 12.8169 20.3536 12.3118 20.3662 11.6755C20.3763 11.0239 19.8536 10.4936 19.2046 10.4936L15.7172 10.4936C15.2576 9.44818 14.7677 8.41282 14.3409 7.35222C14.1237 6.81686 14.0025 6.58454 13.6036 6.21585C13.5227 6.1401 12.9596 5.62495 12.4571 5.16535C11.995 4.74613 11.2828 4.77391 10.8586 5.22593Z\"\n                                    fill=\"#1EA7C5\"\n                                 />\n                                 <path\n                                    d=\"M15.6162 5.80675C17.0861 5.80675 18.2778 4.61511 18.2778 3.14514C18.2778 1.67517 17.0861 0.483521 15.6162 0.483521C14.1462 0.483521 12.9545 1.67517 12.9545 3.14514C12.9545 4.61511 14.1462 5.80675 15.6162 5.80675Z\"\n                                    fill=\"#1EA7C5\"\n                                 />\n                                 <path\n                                    d=\"M4.89899 23.5163C7.60463 23.5163 9.79798 21.323 9.79798 18.6174C9.79798 15.9117 7.60463 13.7184 4.89899 13.7184C2.19335 13.7184 -1.81927e-07 15.9117 -2.13831e-07 18.6174C-2.45735e-07 21.323 2.19335 23.5163 4.89899 23.5163Z\"\n                                    fill=\"#1EA7C5\"\n                                 />\n                                 <path\n                                    d=\"M19.101 23.5163C21.8066 23.5163 24 21.323 24 18.6174C24 15.9117 21.8066 13.7184 19.101 13.7184C16.3954 13.7184 14.202 15.9117 14.202 18.6174C14.202 21.323 16.3954 23.5163 19.101 23.5163Z\"\n                                    fill=\"#1EA7C5\"\n                                 />\n                              </g>\n                              <defs>\n                                 <clipPath id=\"clip5\">\n                                    <rect width={24} height={24} fill=\"white\" />\n                                 </clipPath>\n                              </defs>\n                           </svg>\n                        </span>\n                        <div>\n                           <h6 className=\"font-w600 fs-16 mb-0\">\n                              <Link to=\"/personal-record\" className=\"text-black\">\n                                 Friday Cycling\n                              </Link>\n                           </h6>\n                           <span className=\"fs-12\">2km distances</span>\n                        </div>\n                        <Link to=\"/personal-record\" className=\"ml-auto\">\n                           <svg\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <path d=\"M9 18L15 12L9 6\" fill=\"#D3D6E4\" />\n                           </svg>\n                        </Link>\n                     </div>\n                     <div className=\"d-flex py-3 border-bottom align-items-center\">\n                        <span className=\"activity-icon border border-warning border-2 mr-3\">\n                           <svg\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <g clipPath=\"url(#clip6)\">\n                                 <path\n                                    d=\"M0.988957 17.0741C0.328275 17.2007 -0.104585 17.8386 0.0219823 18.4993C0.133362 19.0815 0.644694 19.4865 1.21678 19.4865C1.29272 19.4865 1.37119 19.4789 1.44713 19.4637L6.4592 18.5018C6.74524 18.4461 7.00091 18.2917 7.18316 18.0639L9.33481 15.3503L8.61593 14.9832C8.08435 14.7149 7.71475 14.2289 7.58818 13.6391L5.55804 16.1983L0.988957 17.0741Z\"\n                                    fill=\"#FF9432\"\n                                 />\n                                 <path\n                                    d=\"M18.84 6.49306C20.3135 6.49306 21.508 5.29854 21.508 3.82502C21.508 2.3515 20.3135 1.15698 18.84 1.15698C17.3665 1.15698 16.1719 2.3515 16.1719 3.82502C16.1719 5.29854 17.3665 6.49306 18.84 6.49306Z\"\n                                    fill=\"#FF9432\"\n                                 />\n                                 <path\n                                    d=\"M13.0179 3.15677C12.7369 2.86819 12.4762 2.75428 12.1902 2.75428C12.0864 2.75428 11.9826 2.76947 11.8712 2.79479L7.29203 3.88073C6.6592 4.03008 6.26937 4.66545 6.41872 5.29576C6.54782 5.83746 7.02877 6.20198 7.56289 6.20198C7.65404 6.20198 7.74514 6.19185 7.8363 6.16907L11.7371 5.24513C11.9902 5.52611 13.2584 6.90063 13.4888 7.14364C11.8763 8.87002 10.2639 10.5939 8.65137 12.3202C8.62605 12.3481 8.60329 12.3759 8.58049 12.4038C8.10966 13.0037 8.25397 13.9454 8.96275 14.3023L13.9064 16.826L11.3397 20.985C10.9878 21.5571 11.165 22.3064 11.7371 22.6608C11.9371 22.7848 12.1573 22.843 12.375 22.843C12.7825 22.843 13.1824 22.638 13.4128 22.2659L16.6732 16.983C16.8529 16.6919 16.901 16.34 16.8074 16.0135C16.7137 15.6844 16.4884 15.411 16.1821 15.2566L12.8331 13.553L16.3543 9.78636L19.0122 12.0393C19.2324 12.2266 19.5032 12.3177 19.7716 12.3177C20.0601 12.3177 20.3487 12.2114 20.574 12.0038L23.6243 9.16112C24.1002 8.71814 24.128 7.97392 23.685 7.49803C23.4521 7.24996 23.1383 7.12339 22.8244 7.12339C22.5383 7.12339 22.2497 7.22717 22.0245 7.43727L19.7412 9.56107C19.7386 9.56361 14.0178 4.18196 13.0179 3.15677Z\"\n                                    fill=\"#FF9432\"\n                                 />\n                              </g>\n                              <defs>\n                                 <clipPath id=\"clip6\">\n                                    <rect width={24} height={24} fill=\"white\" />\n                                 </clipPath>\n                              </defs>\n                           </svg>\n                        </span>\n                        <div>\n                           <h6 className=\"font-w600 fs-16 mb-0\">\n                              <Link to=\"/personal-record\" className=\"text-black\">\n                                 Monday Running\n                              </Link>\n                           </h6>\n                           <span className=\"fs-12\">2km distances</span>\n                        </div>\n                        <Link to=\"/personal-record\" className=\"ml-auto\">\n                           <svg\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <path d=\"M9 18L15 12L9 6\" fill=\"#D3D6E4\" />\n                           </svg>\n                        </Link>\n                     </div>\n                  </PerfectScrollbar>\n                  <div className=\"card-footer text-center border-0 pt-0 pb-4\">\n                     <Link className=\"text-primary\" to=\"/personal-record\" rel=\"ajax/recent-activities\">\n                        View more\n                     </Link>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-9 col-xxl-8 col-lg-7\">\n               <div className=\"card\">\n                  <div className=\"card-header d-sm-flex d-block pb-0 border-0\">\n                     <div className=\"mr-auto pr-3\">\n                        <h4 className=\"text-black fs-20\">Stats</h4>\n                        <p className=\"fs-13 mb-0\">Lorem ipsum dolor sit amet, consectetur</p>\n                     </div>\n                     <div className=\"card-action card-tabs style-1 mt-3 mt-sm-0 mt-3 mb-sm-0 mb-3 mt-sm-0\">\n                        <ul className=\"nav nav-tabs\" role=\"tablist\">\n                           <li className=\"nav-item\" onClick={() => setActiveTab('running')}>\n                              <Link\n                                 className={cls('active nav-link', { active: activeTab === 'running' })}\n                                 data-toggle=\"tab\"\n                                 to=\"#Running\"\n                                 role=\"tab\"\n                              >\n                                 <svg\n                                    className=\"mr-2\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <g clipPath=\"url(#clip7)\">\n                                       <path\n                                          d=\"M0.988957 17.0741C0.328275 17.2007 -0.104585 17.8386 0.0219823 18.4993C0.133362 19.0815 0.644694 19.4865 1.21678 19.4865C1.29272 19.4865 1.37119 19.4789 1.44713 19.4637L6.4592 18.5018C6.74524 18.4461 7.00091 18.2917 7.18316 18.0639L9.33481 15.3503L8.61593 14.9832C8.08435 14.7149 7.71475 14.2289 7.58818 13.6391L5.55804 16.1983L0.988957 17.0741Z\"\n                                          fill=\"#FF9432\"\n                                       />\n                                       <path\n                                          d=\"M18.84 6.49306C20.3135 6.49306 21.508 5.29854 21.508 3.82502C21.508 2.3515 20.3135 1.15698 18.84 1.15698C17.3665 1.15698 16.1719 2.3515 16.1719 3.82502C16.1719 5.29854 17.3665 6.49306 18.84 6.49306Z\"\n                                          fill=\"#FF9432\"\n                                       />\n                                       <path\n                                          d=\"M13.0179 3.15677C12.7369 2.86819 12.4762 2.75428 12.1902 2.75428C12.0864 2.75428 11.9826 2.76947 11.8712 2.79479L7.29203 3.88073C6.6592 4.03008 6.26937 4.66545 6.41872 5.29576C6.54782 5.83746 7.02877 6.20198 7.56289 6.20198C7.65404 6.20198 7.74514 6.19185 7.8363 6.16907L11.7371 5.24513C11.9902 5.52611 13.2584 6.90063 13.4888 7.14364C11.8763 8.87002 10.2639 10.5939 8.65137 12.3202C8.62605 12.3481 8.60329 12.3759 8.58049 12.4038C8.10966 13.0037 8.25397 13.9454 8.96275 14.3023L13.9064 16.826L11.3397 20.985C10.9878 21.5571 11.165 22.3064 11.7371 22.6608C11.9371 22.7848 12.1573 22.843 12.375 22.843C12.7825 22.843 13.1824 22.638 13.4128 22.2659L16.6732 16.983C16.8529 16.6919 16.901 16.34 16.8074 16.0135C16.7137 15.6844 16.4884 15.411 16.1821 15.2566L12.8331 13.553L16.3543 9.78636L19.0122 12.0393C19.2324 12.2266 19.5032 12.3177 19.7716 12.3177C20.0601 12.3177 20.3487 12.2114 20.574 12.0038L23.6243 9.16112C24.1002 8.71814 24.128 7.97392 23.685 7.49803C23.4521 7.24996 23.1383 7.12339 22.8244 7.12339C22.5383 7.12339 22.2497 7.22717 22.0245 7.43727L19.7412 9.56107C19.7386 9.56361 14.0178 4.18196 13.0179 3.15677Z\"\n                                          fill=\"#FF9432\"\n                                       />\n                                    </g>\n                                    <defs>\n                                       <clipPath id=\"clip7\">\n                                          <rect width={24} height={24} fill=\"white\" />\n                                       </clipPath>\n                                    </defs>\n                                 </svg>\n                                 Running\n                                 <span className=\"bg-warning\" />\n                              </Link>\n                           </li>\n                           <li className=\"nav-item\" onClick={() => setActiveTab('cycling')}>\n                              <Link\n                                 data-toggle=\"tab\"\n                                 to=\"#Cycling\"\n                                 role=\"tab\"\n                                 className={`nav-link ${activeTab === 'cycling' ? 'active' : ''}`}\n                              >\n                                 <svg\n                                    className=\"mr-2\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                 >\n                                    <path\n                                       d=\"M10.8586 5.22593L5.87121 10.5542C5.50758 11.0845 5.64394 11.8067 6.17172 12.1678L11.1945 15.6098V18.9557C11.1945 19.5921 11.6995 20.1249 12.3359 20.1376C12.9874 20.1476 13.5177 19.6249 13.5177 18.976V15.0012C13.5177 14.6173 13.3283 14.2588 13.0126 14.0441L9.79041 11.8345L12.5025 8.9583L13.8914 12.1224C14.0758 12.5441 14.4949 12.8169 14.9546 12.8169H19.1844C19.8207 12.8169 20.3536 12.3118 20.3662 11.6755C20.3763 11.0239 19.8536 10.4936 19.2046 10.4936H15.7172C15.2576 9.44818 14.7677 8.41282 14.3409 7.35222C14.1237 6.81686 14.0025 6.58454 13.6036 6.21585C13.5227 6.1401 12.9596 5.62495 12.4571 5.16535C11.995 4.74613 11.2828 4.77391 10.8586 5.22593Z\"\n                                       fill=\"#1EA7C5\"\n                                    />\n                                    <path\n                                       d=\"M15.6162 5.80675C17.0861 5.80675 18.2778 4.61511 18.2778 3.14514C18.2778 1.67517 17.0861 0.483521 15.6162 0.483521C14.1462 0.483521 12.9545 1.67517 12.9545 3.14514C12.9545 4.61511 14.1462 5.80675 15.6162 5.80675Z\"\n                                       fill=\"#1EA7C5\"\n                                    />\n                                    <path\n                                       d=\"M4.89899 23.5163C7.60463 23.5163 9.79798 21.323 9.79798 18.6174C9.79798 15.9117 7.60463 13.7184 4.89899 13.7184C2.19335 13.7184 0 15.9117 0 18.6174C0 21.323 2.19335 23.5163 4.89899 23.5163Z\"\n                                       fill=\"#1EA7C5\"\n                                    />\n                                    <path\n                                       d=\"M19.101 23.5163C21.8066 23.5163 24 21.323 24 18.6174C24 15.9117 21.8066 13.7184 19.101 13.7184C16.3954 13.7184 14.202 15.9117 14.202 18.6174C14.202 21.323 16.3954 23.5163 19.101 23.5163Z\"\n                                       fill=\"#1EA7C5\"\n                                    />\n                                 </svg>\n                                 Cycling\n                                 <span className=\"bg-info\" />\n                              </Link>\n                           </li>\n                        </ul>\n                     </div>\n                  </div>\n                  <div className=\"card-body pb-0\">\n                     <div className=\"tab-content\">\n                        <div\n                           className={`tab-pane fade ${activeTab === 'running' ? 'show active' : ''}`}\n                           id=\"Running\"\n                           role=\"tabpanel\"\n                        >\n                           <ApexBar columnWidth=\"80%\" />\n                        </div>\n                        <div\n                           className={`tab-pane fade ${activeTab === 'cycling' ? 'show active' : ''}`}\n                           id=\"Cycling\"\n                           role=\"tabpanel\"\n                        >\n                           <ApexBar2 />\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"col-xl-12 mt-sm-0 mt-3\">\n               <h4 className=\"text-black fs-20\">Maps Route</h4>\n               <p className=\"fs-13\">Lorem ipsum dolor sit amet, consectetur</p>\n            </div>\n            <div className=\"col-xl-12\">\n               <div className=\"map-bx\">\n                  <img src={map} alt=\"\" />\n                  <div className=\"map-info card mb-0\">\n                     <div className=\"card-header border-0 pb-0 p-4\">\n                        <div>\n                           <h4 className=\"text-black fs-20\">Workout Details</h4>\n                           <p className=\"fs-13 mb-0\">Lorem ipsum dolor sit amet, consectetur</p>\n                        </div>\n                     </div>\n                     <div className=\"card-body p-0\">\n                        <div className=\"d-flex align-items-center bgl-info p-4\">\n                           <svg\n                              className=\"mr-3\"\n                              width={51}\n                              height={51}\n                              viewBox=\"0 0 51 51\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                           >\n                              <rect width={51} height={51} rx=\"25.5\" fill=\"#1EA7C5\" />\n                              <g clipPath=\"url()\">\n                                 <path\n                                    d=\"M23.8586 19.226L18.8712 24.5542C18.5076 25.0845 18.6439 25.8068 19.1717 26.1679L24.1945 29.6098L24.1945 32.9558C24.1945 33.5921 24.6995 34.125 25.3359 34.1376C25.9874 34.1477 26.5177 33.6249 26.5177 32.976L26.5177 29.0012C26.5177 28.6174 26.3283 28.2588 26.0126 28.0442L22.7904 25.8346L25.5025 22.9583L26.8914 26.1225C27.0758 26.5442 27.4949 26.8169 27.9546 26.8169L32.1844 26.8169C32.8207 26.8169 33.3536 26.3119 33.3662 25.6755C33.3763 25.024 32.8536 24.4937 32.2046 24.4937L28.7172 24.4937C28.2576 23.4482 27.7677 22.4129 27.3409 21.3522C27.1237 20.8169 27.0025 20.5846 26.6036 20.2159C26.5227 20.1401 25.9596 19.625 25.4571 19.1654C24.995 18.7462 24.2828 18.7739 23.8586 19.226Z\"\n                                    fill=\"white\"\n                                 />\n                                 <path\n                                    d=\"M28.6162 19.8068C30.0861 19.8068 31.2778 18.6151 31.2778 17.1452C31.2778 15.6752 30.0861 14.4836 28.6162 14.4836C27.1462 14.4836 25.9545 15.6752 25.9545 17.1452C25.9545 18.6151 27.1462 19.8068 28.6162 19.8068Z\"\n                                    fill=\"white\"\n                                 />\n                                 <path\n                                    d=\"M17.899 37.5164C20.6046 37.5164 22.798 35.323 22.798 32.6174C22.798 29.9117 20.6046 27.7184 17.899 27.7184C15.1934 27.7184 13 29.9117 13 32.6174C13 35.323 15.1934 37.5164 17.899 37.5164Z\"\n                                    fill=\"white\"\n                                 />\n                                 <path\n                                    d=\"M32.101 37.5164C34.8066 37.5164 37 35.323 37 32.6174C37 29.9118 34.8066 27.7184 32.101 27.7184C29.3954 27.7184 27.202 29.9118 27.202 32.6174C27.202 35.323 29.3954 37.5164 32.101 37.5164Z\"\n                                    fill=\"white\"\n                                 />\n                              </g>\n                              <defs>\n                                 <clipPath id=\"clip8\">\n                                    <rect width={24} height={24} fill=\"white\" transform=\"translate(13 14)\" />\n                                 </clipPath>\n                              </defs>\n                           </svg>\n                           <div>\n                              <h6 className=\"fs-16 text-black mb-0\">Cycling</h6>\n                              <span className=\"fs-12\">100km target/day</span>\n                           </div>\n                        </div>\n                        <div className=\"d-flex flex-wrap p-4\">\n                           <div className=\"mr-5 mb-3\">\n                              <p className=\"fs-14 mb-2\">Total Distance</p>\n                              <span className=\"fs-20 font-w500 text-black\">24km</span>\n                           </div>\n                           <div className=\"mr-5 mb-3\">\n                              <p className=\"fs-14 mb-2\">Time</p>\n                              <span className=\"fs-20 font-w500 text-black\">00:34:53”</span>\n                           </div>\n                           <div className=\"mr-5 mb-3\">\n                              <p className=\"fs-14 mb-2\">Start Time</p>\n                              <span className=\"fs-20 font-w500 text-black\">09:22 AM</span>\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </>\n   );\n};\n\nexport default DistanceMap;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/WorkoutPlan.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/Home.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Alert.js",["887","888","889","890"],"/* eslint-disable no-nested-ternary */\nimport React, { Fragment, useState } from 'react';\n\nimport { Row, Card, Col, Alert, Button, Badge, Media } from 'react-bootstrap';\nimport data from './alertData';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst UiAlert = () => {\n   const [socialMedia, setSocialMedia] = useState(Array.from(data.socialMediaData));\n\n   const [leftIconBig, setLeftIconBig] = useState(Array.from(data.leftBigIconData));\n\n   const [basicData, setBasicData] = useState(Array.from(data.mainData));\n   const [solidColor, setSolidColor] = useState(Array.from(data.mainData));\n   const [square, setSquare] = useState(Array.from(data.mainData));\n   const [rounded, setRounded] = useState(Array.from(data.mainData));\n   const [dismissable, setDismissable] = useState(Array.from(data.mainData));\n   const [alt, setAlt] = useState(Array.from(data.mainData));\n   const [solidAlt, setSolidAlt] = useState(Array.from(data.mainData));\n   const [dismissableWithSolid, setDismissableWithSolid] = useState(Array.from(data.mainData));\n   const [withLink, setWithLink] = useState(Array.from(data.mainData));\n   const [withLinkAndSolidColor, setWithLinkAndSolidColor] = useState(Array.from(data.mainData));\n   const [inlineNotifications, setInlineNotifications] = useState(Array.from(data.mainData));\n   const [iconLeft, setIconLeft] = useState(Array.from(data.mainData));\n   const [outline, setOutline] = useState(Array.from(data.mainData));\n   const [messageAlert, setMessageAlert] = useState(Array.from(data.mainData));\n   const [messageAlertWithSolidColor, setMessageAlertWithSolidColor] = useState(Array.from(data.mainData));\n\n   const onClick = (index, setData, variables) => setData(variables.filter((d, i) => i !== index && d));\n\n   const btn = (i, dataset, d, height) => (\n      <Button\n         variant=\"\"\n         className={`close ${height ? 'h-100' : ''}`}\n         ata-dismiss=\"alert\"\n         aria-label=\"Close\"\n         onClick={() => onClick(i, dataset, d)}\n      >\n         <span>\n            <i className=\"mdi mdi-close\" />\n         </span>\n      </Button>\n   );\n\n   const alertDefferentMsg = () =>\n      data.variant === 'info'\n         ? 'Hey! Take a quick look.'\n         : data.variant === 'dark' || data.variant === 'light' || data.variant === 'danger'\n         ? 'Error! Something Went wrong'\n         : data.variant === 'warning'\n         ? 'Warning! Why you did it to me!'\n         : 'WOW! Eveything looks OK.';\n\n   return (\n      <>\n         <PageTitle motherMenu=\"Bootstrap\" activeMenu=\"Alert\" />\n         <Row>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Basic Alerts</Card.Title>\n                     <Card.Text className=\"subtitle mb-0\">Bootstrap default style</Card.Text>\n                  </Card.Header>\n                  <Card.Body>\n                     {basicData.map((d, i) => (\n                        <Alert key={i} variant={d.variant} className=\"alert-dismissible fade show\">\n                           {d.emoji}\n                           <strong>{d.msg}</strong> {d.text}\n                           {btn(i, setBasicData, basicData, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Solid color alerts</Card.Title>\n                     <Card.Text className=\"subtitle mb-0\">\n                        add <code>.solid</code> class to change the solid color.\n                     </Card.Text>\n                  </Card.Header>\n                  <Card.Body>\n                     {solidColor.map((d, i) => (\n                        <Alert key={i} variant={d.variant} className=\"solid alert-dismissible fade show\">\n                           <strong>{d.msg}</strong> {d.text}\n                           {btn(i, setSolidColor, solidColor, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Square alerts</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-square</code> class to change the solid color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {square.map((d, i) => (\n                        <Alert key={i} variant={d.variant} className=\"solid alert-square\">\n                           <strong>{d.msg}</strong> {d.text}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Rounded alerts</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-rounded</code> class to change the solid color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {rounded.map((d, i) => (\n                        <Alert key={i} variant={d.variant} className=\"solid alert-rounded\">\n                           <strong>{d.msg}</strong> {d.text}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Dismissable Alerts</Card.Title>\n                     <Card.Text className=\"subtitle mb-0\">Bootstrap default style</Card.Text>\n                  </Card.Header>\n                  <Card.Body>\n                     {dismissable.map((d, i) => (\n                        <Alert key={i} variant={d.variant} className=\"alert-dismissible fade show\">\n                           {d.emoji}\n                           <strong>{d.msg}</strong> {d.text}\n                           {btn(i, setDismissable, dismissable, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alerts alt</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-alt</code> class to change the solid color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {alt.map((d, i) => (\n                        <Alert key={i} variant={d.variant} className=\"alert-dismissible alert-alt fade show\">\n                           {d.emoji}\n                           <strong>{d.msg}</strong> {d.text}\n                           {btn(i, setAlt, alt, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Solid Alt</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-alt.solid</code> class to change the solid color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {solidAlt.map((d, i) => (\n                        <Alert key={i} variant={d.variant} className=\"alert-dismissible solid alert-alt fade show\">\n                           {d.emoji}\n                           <strong>{d.msg}</strong> {d.text}\n                           {btn(i, setSolidAlt, solidAlt, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Dismissable with solid</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.solid</code> class to change the solid color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {dismissableWithSolid.map((d, i) => (\n                        <Alert key={i} variant={d.variant} className=\"alert-dismissible solid  fade show\">\n                           {d.emoji}\n                           <strong>{d.msg}</strong> {d.text}\n                           {btn(i, setDismissableWithSolid, dismissableWithSolid, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert with Link</Card.Title>\n                     <p className=\"mb-0 subtitle\">Bootstrap default style</p>\n                  </Card.Header>\n                  <Card.Body>\n                     {withLink.map((d, i) => (\n                        <Alert key={i} variant={d.variant} className=\"alert-dismissible  fade show\">\n                           <strong>{alertDefferentMsg(d)}</strong>{' '}\n                           <a href=\"#\">\n                              {' '}\n                              {d.variant === 'info'\n                                 ? 'My birthday party'\n                                 : d.variant === 'dark' || d.variant === 'light' || d.variant === 'danger'\n                                 ? 'Click here for details.'\n                                 : d.variant === 'warning'\n                                 ? 'Check this out'\n                                 : 'Please check this one as well'}{' '}\n                           </a>\n                           {btn(i, setWithLink, withLink, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert with Link and solid color</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.solid</code> class to change the solid color.\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {withLinkAndSolidColor.map((d, i) => (\n                        <Alert key={i} variant={d.variant} className=\"alert-dismissible solid fade show\">\n                           <strong>{alertDefferentMsg(d)}</strong>{' '}\n                           <Badge variant={d.variant} as=\"a\" href=\"#\" className=\"badge-sm light ml-1\">\n                              upgrade\n                           </Badge>\n                           {btn(i, setWithLinkAndSolidColor, withLinkAndSolidColor, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col lg={12}>\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Inline Notifications</Card.Title>\n                     <p className=\"mb-0 subtitle\">Default inline notification</p>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        {inlineNotifications.map((d, i) => (\n                           <Col xl={6} key={i}>\n                              <Alert variant={d.variant} className=\"alert alert-primary notification\">\n                                 <p className=\"notificaiton-title mb-2\">\n                                    <strong>Success!</strong> Vampires The Romantic Ideology Behind Them\n                                 </p>\n                                 <p>\n                                    The following article covers a topic that has recently moved to center stage-at\n                                    lease it seems that way.\n                                 </p>\n                                 <Button variant={d.variant} size=\"sm\">\n                                    Confirm\n                                 </Button>\n                                 <Button variant=\"link\" size=\"sm\">\n                                    Cancel\n                                 </Button>\n                              </Alert>\n                           </Col>\n                        ))}\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert Icon Left</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-right-icon</code> to change the style\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {iconLeft.map((d, i) => (\n                        <Alert\n                           key={i}\n                           variant={d.variant}\n                           className=\"alert-dismissible fade show solid alert-right-icon\"\n                        >\n                           <span>\n                              <i className={d.icon} />\n                           </span>\n                           {d.msg} {d.text}\n                           {btn(i, setIconLeft, iconLeft, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\"col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert outline</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-outline-primary,secondary,success...</code> to change the style\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     {outline.map((d, i) => (\n                        <Alert key={i} variant={`outline-${d.variant}`} className=\" alert-dismissible fade show\">\n                           {d.msg} {d.text}\n                           {btn(i, setOutline, outline, true)}\n                        </Alert>\n                     ))}\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\" col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert Social</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.alert-social .facebook,.twitter,.linkedin,.google-plus</code> to change the style\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        {socialMedia.map((social, i) => (\n                           <Col xl={6} key={i}>\n                              <Alert\n                                 variant=\"social\"\n                                 className={`alert-dismissible ${social.name.split(' ').join('-').toLocaleLowerCase()}`}\n                              >\n                                 {btn(i, setSocialMedia, socialMedia, false)}\n                                 <Media>\n                                    <Alert variant=\"social-icon\">\n                                       <span>\n                                          <i className={social.icon} />\n                                       </span>\n                                    </Alert>\n                                    <Media.Body>\n                                       <h5 className=\"mt-1 mb-2 text-white\">{social.name}</h5>\n                                       <p className=\"mb-0\">\n                                          Cras sit amet nibh libero, in gravida nulla. tempus viverra turpis. Fusce\n                                          condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in\n                                          faucibus.\n                                       </p>\n                                    </Media.Body>\n                                 </Media>\n                              </Alert>\n                           </Col>\n                        ))}\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\" col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Message Alert</Card.Title>\n                     <Card.Text className=\"subtitle mb-0\">Bootstrap default style</Card.Text>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        {messageAlert.map((d, i) => (\n                           <Col xl={6} key={i}>\n                              <Alert variant={d.variant} className=\"alert-dismissible\">\n                                 {btn(i, setMessageAlert, messageAlert, false)}\n                                 <Media>\n                                    <Media.Body>\n                                       <h5 className=\"mt-1 mb-1\">Notifications</h5>\n                                       <p className=\"mb-0\">\n                                          Cras sit amet nibh libero, in gravida nulla. tempus viverra turpis. Fusce\n                                          condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in\n                                          faucibus.\n                                       </p>\n                                    </Media.Body>\n                                 </Media>\n                              </Alert>\n                           </Col>\n                        ))}\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\" col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Message Alert with Solid color</Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.solid</code> to change the style\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        {messageAlertWithSolidColor.map((d, i) => (\n                           <Col xl={6} key={i}>\n                              <Alert variant={d.variant} className=\"alert-dismissible solid\">\n                                 {btn(i, setMessageAlertWithSolidColor, messageAlertWithSolidColor, false)}\n                                 <Media>\n                                    <Media.Body>\n                                       <h5 className=\"mt-1 mb-2 text-white\">Notifications</h5>\n                                       <p className=\"mb-0\">\n                                          Cras sit amet nibh libero, in gravida nulla. tempus viverra turpis. Fusce\n                                          condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in\n                                          faucibus.\n                                       </p>\n                                    </Media.Body>\n                                 </Media>\n                              </Alert>\n                           </Col>\n                        ))}\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6} className=\" col-xxl-12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Alert left icon big </Card.Title>\n                     <p className=\"mb-0 subtitle\">\n                        add <code>.left-icon-big</code> to change the style\n                     </p>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        {leftIconBig.map((d, i) => (\n                           <Col xl={6} key={i}>\n                              <Alert variant={d.variant} className=\"alert-dismissible left-icon-big\">\n                                 {btn(i, setLeftIconBig, leftIconBig, false)}\n                                 <Media>\n                                    <Alert variant=\"\" className=\"alert-left-icon-big\">\n                                       <span>\n                                          <i className={`mdi mdi-${d.icon}`} />\n                                       </span>\n                                    </Alert>\n                                    <Media.Body>\n                                       <h6 className=\"mt-1 mb-2\">{d.text}</h6>\n                                       <p className=\"mb-0\">{d.msg}</p>\n                                    </Media.Body>\n                                 </Media>\n                              </Alert>\n                           </Col>\n                        ))}\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </>\n   );\n};\n\nexport default UiAlert;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/PersonalRecord.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Button.js",["891"],"import React, { Fragment } from 'react';\nimport { Row, Col, Card, Button, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport PageTitle from '../../layouts/PageTitle';\nimport JobieNav from '../../layouts/nav';\n\nconst UiButton = () => (\n   <>\n      <PageTitle activeMenu=\"Buttons\" motherMenu=\"Bootstrap\" />\n      <div className=\"btn-page\">\n         <Row>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Buttons</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">Default button style</Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"primary\">Primary</Button>\n                     <Button variant=\"secondary\">Secondary</Button>\n                     <Button variant=\"success\">Success</Button>\n                     <Button variant=\"danger\">Danger</Button>\n                     <Button variant=\"warning\">Warning</Button>\n                     <Button variant=\"info\">Info</Button>\n                     <Button variant=\"light\">Light</Button>\n                     <Button variant=\"dark\">Dark</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Buttons</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">Button Light style</Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"primary light\">Primary</Button>\n                     <Button variant=\"secondary light\">Secondary</Button>\n                     <Button variant=\"success light\">Success</Button>\n                     <Button variant=\"danger light\">Danger</Button>\n                     <Button variant=\"warning light\">Warning</Button>\n                     <Button variant=\"info light\">Info</Button>\n                     <Button variant=\"light light\">Light</Button>\n                     <Button variant=\"dark light\">Dark</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Outline Buttons</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">Default outline button style</Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"outline-primary\">Primary</Button>\n                     <Button variant=\"outline-secondary\">Secondary</Button>\n                     <Button variant=\"outline-success\">Success</Button>\n                     <Button variant=\"outline-danger\">Danger</Button>\n                     <Button variant=\"outline-warning\">Warning</Button>\n                     <Button variant=\"outline-info\">Info</Button>\n                     <Button variant=\"outline-light\">Light</Button>\n                     <Button variant=\"outline-dark\">Dark</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Button Sizes</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-lg .btn-sm .btn-xs</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"primary btn-lg\">Large Button</Button>\n                     <Button variant=\"primary\">Default Button</Button>\n                     <Button variant=\"primary btn-sm\">Small Button</Button>\n                     <Button variant=\"primary btn-xs\">Extra Small Button</Button>\n                     <Button variant=\"primary btn-xxs\">Extra Small Button</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Outline Button Sizes</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-lg .btn-sm .btn-xs</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"outline-primary btn-lg\">Large button</Button>\n                     <Button variant=\"outline-primary\">Default button</Button>\n                     <Button variant=\"outline-primary btn-md\">Small button</Button>\n                     <Button variant=\"outline-primary btn-sm\">Small button</Button>\n                     <Button variant=\"outline-primary btn-xs\">Extra small button</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Rounded Buttons</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-rounded</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Card.Title />\n                     <Button variant=\"primary btn-rounded\">Primary</Button>\n                     <Button variant=\"secondary btn-rounded\">Secondary</Button>\n                     <Button variant=\"success btn-rounded\">Success</Button>\n                     <Button variant=\"danger btn-rounded\">Danger</Button>\n                     <Button variant=\"warning btn-rounded\">Warning</Button>\n                     <Button variant=\"info btn-rounded\">Info</Button>\n                     <Button variant=\"light btn-rounded\">Light</Button>\n                     <Button variant=\"dark btn-rounded\">Dark</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Rounded outline Buttons</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-rounded</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <div className=\"rounded-button\">\n                        <Button variant=\"outline-primary btn-rounded\">Primary</Button>\n                        <Button variant=\"outline-secondary btn-rounded\">Secondary</Button>\n                        <Button variant=\"outline-success btn-rounded\">Success</Button>\n                        <Button variant=\"outline-danger btn-rounded\">Danger</Button>\n                        <Button variant=\"outline-warning btn-rounded\">Warning</Button>\n                        <Button variant=\"outline-info btn-rounded\">Info</Button>\n                        <Button variant=\"outline-light btn-rounded\">Light</Button>\n                        <Button variant=\"outline-dark btn-rounded\">Dark</Button>\n                     </div>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Button Right icons</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-icon-right</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"primary\">\n                        Add to cart{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-shopping-cart\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"info\">\n                        Add to wishlist{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-heart\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"danger\">\n                        Remove{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-close\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"secondary\">\n                        Sent message{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-envelope\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"warning\">\n                        Add bookmark{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-star\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"success\">\n                        Success{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-check\" />\n                        </span>\n                     </Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Button Left icons</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-icon-left</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"primary btn-rounded\">\n                        <span className=\"btn-icon-left text-primary\">\n                           <i className=\"fa fa-shopping-cart\" />\n                        </span>\n                        Buy\n                     </Button>\n                     <Button variant=\"info btn-rounded\">\n                        <span className=\"btn-icon-left text-info\">\n                           <i className=\"fa fa-plus color-info\" />\n                        </span>\n                        Add\n                     </Button>\n                     <Button variant=\"danger btn-rounded\">\n                        <span className=\"btn-icon-left text-danger\">\n                           <i className=\"fa fa-envelope color-danger\" />\n                        </span>\n                        Email\n                     </Button>\n                     <Button variant=\"secondary btn-rounded\">\n                        <span className=\"btn-icon-left text-secondary\">\n                           <i className=\"fa fa-share-alt color-secondary\" />{' '}\n                        </span>\n                        Share\n                     </Button>\n                     <Button variant=\"warning btn-rounded\">\n                        <span className=\"btn-icon-left text-warning\">\n                           <i className=\"fa fa-download color-warning\" />\n                        </span>\n                        Download\n                     </Button>\n                     <Button variant=\"success btn-rounded\">\n                        <span className=\"btn-icon-left text-success\">\n                           <i className=\"fa fa-upload color-success\" />\n                        </span>\n                        Upload\n                     </Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Square Buttons</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-square</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"primary btn-square\">Primary</Button>\n                     <Button variant=\"secondary btn-square\">Secondary</Button>\n                     <Button variant=\"success btn-square\">Success</Button>\n                     <Button variant=\"danger btn-square\">Danger</Button>\n                     <Button variant=\"warning btn-square\">Warning</Button>\n                     <Button variant=\"info btn-square\">Info</Button>\n                     <Button variant=\"light btn-square\">Light</Button>\n                     <Button variant=\"dark btn-square\">Dark</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Square Outline Buttons</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-square</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"outline-primary btn-square\">Primary</Button>\n                     <Button variant=\"outline-secondary btn-square\">Secondary</Button>\n                     <Button variant=\"outline-success btn-square\">Success</Button>\n                     <Button variant=\"outline-danger btn-square\">Danger</Button>\n                     <Button variant=\"outline-warning btn-square\">Warning</Button>\n                     <Button variant=\"outline-info btn-square\">Info</Button>\n                     <Button variant=\"outline-light btn-square\">Light</Button>\n                     <Button variant=\"outline-dark btn-square\">Dark</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Rounded Button</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-rounded</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"primary btn-rounded\">Primary</Button>\n                     <Button variant=\"secondary btn-rounded\">Secondary</Button>\n                     <Button variant=\"success btn-rounded\">Success</Button>\n                     <Button variant=\"danger btn-rounded\">Danger</Button>\n                     <Button variant=\"warning btn-rounded\">Warning</Button>\n                     <Button variant=\"info btn-rounded\">Info</Button>\n                     <Button variant=\"light btn-rounded\">Light</Button>\n                     <Button variant=\"dark btn-rounded\">Dark</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Rounded outline Buttons</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-rounded</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"outline-primary btn-rounded\">Primary</Button>\n                     <Button variant=\"outline-secondary btn-rounded\">Secondary</Button>\n                     <Button variant=\"outline-success btn-rounded\">Success</Button>\n                     <Button variant=\"outline-danger btn-rounded\">Danger</Button>\n                     <Button variant=\"outline-warning btn-rounded\">Warning</Button>\n                     <Button variant=\"outline-info btn-rounded\">Info</Button>\n                     <Button variant=\"outline-light btn-rounded\">Light</Button>\n                     <Button variant=\"outline-dark btn-rounded\">Dark</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Dropdown Button</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">Default dropdown button style</Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <ButtonGroup>\n                        <Dropdown>\n                           <Dropdown.Toggle variant=\"primary\">Primary</Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item>Dropdown link</Dropdown.Item>\n                              <Dropdown.Item>Dropdown link</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </ButtonGroup>\n                     <ButtonGroup>\n                        <Dropdown>\n                           <Dropdown.Toggle variant=\"secondary\">Secondary</Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item>Dropdown link</Dropdown.Item>\n                              <Dropdown.Item>Dropdown link</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </ButtonGroup>\n                     <ButtonGroup>\n                        <Dropdown>\n                           <Dropdown.Toggle variant=\"success\">Success</Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item>Dropdown link</Dropdown.Item>\n                              <Dropdown.Item>Dropdown link</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </ButtonGroup>\n                     <ButtonGroup>\n                        <Dropdown>\n                           <Dropdown.Toggle variant=\"warning\">Warning</Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item>Dropdown link</Dropdown.Item>\n                              <Dropdown.Item>Dropdown link</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </ButtonGroup>\n\n                     <ButtonGroup>\n                        <Dropdown>\n                           <Dropdown.Toggle variant=\"danger\">Danger</Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item>Dropdown link</Dropdown.Item>\n                              <Dropdown.Item>Dropdown link</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </ButtonGroup>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Buttons Transparent</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">Button transparent style</Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"primary tp-btn\">Primary</Button>\n                     <Button variant=\"secondary tp-btn\">Secondary</Button>\n                     <Button variant=\"success tp-btn\">Success</Button>\n                     <Button variant=\"danger tp-btn\">Danger</Button>\n                     <Button variant=\"warning tp-btn\">Warning</Button>\n                     <Button variant=\"info tp-btn\">Info</Button>\n                     <Button variant=\"light tp-btn\">Light</Button>\n                     <Button variant=\"dark tp-btn\">Dark</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Buttons Transparent Light</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">Button transparent light style</Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"primary tp-btn-light\">Primary</Button>\n                     <Button variant=\"secondary tp-btn-light\">Secondary</Button>\n                     <Button variant=\"success tp-btn-light\">Success</Button>\n                     <Button variant=\"danger tp-btn-light\">Danger</Button>\n                     <Button variant=\"warning tp-btn-light\">Warning</Button>\n                     <Button variant=\"info tp-btn-light\">Info</Button>\n                     <Button variant=\"tp-btn-light text-black\">Light</Button>\n                     <Button variant=\"dark tp-btn-light\">Dark</Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Disabled Button</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>disabled=\"disabled\"</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"primary btn-rounded\" disabled=\"disabled\">\n                        Primary\n                     </Button>\n                     <Button variant=\"secondary btn-rounded\" disabled=\"disabled\">\n                        Secondary\n                     </Button>\n                     <Button variant=\"success btn-rounded\" disabled=\"disabled\">\n                        Success\n                     </Button>\n                     <Button variant=\"danger btn-rounded\" disabled=\"disabled\">\n                        Danger\n                     </Button>\n                     <Button variant=\"warning btn-rounded\" disabled=\"disabled\">\n                        Warning\n                     </Button>\n                     <Button variant=\"info btn-rounded\" disabled=\"disabled\">\n                        Info\n                     </Button>\n                  </div>\n               </Card>\n            </Col>\n            <Col lg=\"12\">\n               <Card>\n                  <Card.Header className=\"d-block\">\n                     <Card.Title>Socia icon Buttons with Name</Card.Title>\n                     <Card.Text className=\"mb-0 subtitle\">\n                        add <code>.btn-facebook, .btn-twitter, .btn-youtube...</code> to change the style\n                     </Card.Text>\n                  </Card.Header>\n                  <div className=\"card-body\">\n                     <Button variant=\"facebook\">\n                        Facebook{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-facebook\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"twitter\">\n                        Twitter{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-twitter\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"youtube\">\n                        Youtube{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-youtube\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"instagram\">\n                        Instagram{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-instagram\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"pinterest\">\n                        Pinterest{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-pinterest\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"linkedin\">\n                        Linkedin{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-linkedin\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"google-plus\">\n                        Google +{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-google-plus\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"google\">\n                        Google{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-google\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"snapchat\">\n                        Snapchat{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-snapchat\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"whatsapp\">\n                        Whatsapp{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-whatsapp\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"tumblr\">\n                        Tumblr{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-tumblr\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"reddit\">\n                        Reddit{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-reddit\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"spotify\">\n                        Spotify{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-spotify\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"yahoo\">\n                        Yahoo{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-yahoo\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"dribbble\">\n                        Dribbble{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-dribbble\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"skype\">\n                        Skype{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-skype\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"quora\">\n                        Quora{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-quora\" />\n                        </span>\n                     </Button>\n                     <Button variant=\"vimeo\">\n                        Vimeo{' '}\n                        <span className=\"btn-icon-right\">\n                           <i className=\"fa fa-vimeo\" />\n                        </span>\n                     </Button>\n                  </div>\n               </Card>\n            </Col>\n         </Row>\n      </div>\n   </>\n);\n\nexport default UiButton;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Accordion.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Modal.js",["892","893","894"],"import React, { useState } from 'react';\nimport { Row, Card, Col, Button, Modal, Container } from 'react-bootstrap';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst UiModal = () => {\n   const [basicModal, setBasicModal] = useState(false);\n   const [contentModal, setContentModal] = useState(false);\n   const [modalCentered, setModalCentered] = useState(false);\n   const [modalWithTooltip, setModalWithTooltip] = useState(false);\n   const [gridInsideModal, setGridInsideModal] = useState(false);\n   const [largeModal, setLargeModal] = useState(false);\n   const [smallModal, setSmallModal] = useState(false);\n   return (\n      <div className=\"h-80\">\n         <PageTitle motherMenu=\"Bootstrap\" activeMenu=\"Modal\" />\n         <Row>\n            <Col>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bootstrap Modal</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Card.Text className=\"mb-4\">\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. A, minima! Eligendi minima illum itaque\n                        harum aliquam vel, sunt magni dolorem! Cum quaerat est cupiditate saepe quidem, fugiat in at\n                        magni ad provident distinctio eum tempore laboriosam adipisci, tempora cumque ex quis unde\n                        voluptatem consequuntur. Excepturi quibusdam accusamus deleniti officiis ullam repellendus magni\n                        unde? Saepe quibusdam vel, ipsum numquam ratione tempore. Dolor optio aliquid in velit eaque,\n                        sed delectus reprehenderit quam quidem a eum id nostrum ullam obcaecati error deleniti modi\n                        quasi harum possimus voluptatum repellat saepe! Omnis dolor maiores eaque deserunt\n                        exercitationem incidunt autem et voluptatibus molestias quod explicabo ipsam nam vitae a\n                        architecto, consectetur quas facilis sed nulla, placeat eum ex, ducimus in. Hic quo\n                        necessitatibus autem tempora provident!\n                     </Card.Text>\n                     <div className=\"bootstrap-modal\">\n                        {/* <!-- Button trigger modal --> */}\n                        <Button variant=\"primary\" className=\"mb-2 mr-2\" onClick={() => setBasicModal(true)}>\n                           Basic modal\n                        </Button>\n                        {/* <!-- Modal --> */}\n                        <Modal className=\"fade\" show={basicModal}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button variant=\"\" className=\"close\" onClick={() => setBasicModal(false)}>\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>Modal body text goes here.</Modal.Body>\n                           <Modal.Footer>\n                              <Button onClick={() => setBasicModal(false)} variant=\"danger light\">\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n\n                        {/* <!-- Button trigger modal --> */}\n                        <Button variant=\"primary\" className=\"mb-2 mr-2\" onClick={() => setContentModal(true)}>\n                           Long content Modal\n                        </Button>\n                        {/* <!-- Modal --> */}\n                        <Modal className=\"fade\" show={contentModal}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button variant=\"\" className=\"close\" onClick={() => setContentModal(false)}>\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>\n                              <p>\n                                 Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n                                 in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                                 lacus vel augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                                 scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                                 auctor fringilla.\n                              </p>\n                              <p>\n                                 Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n                                 in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                                 lacus vel augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                                 scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                                 auctor fringilla.\n                              </p>\n                              <p>\n                                 Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n                                 in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                                 lacus vel augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                                 scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                                 auctor fringilla.\n                              </p>\n                              <p>\n                                 Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n                                 in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                                 lacus vel augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                                 scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                                 auctor fringilla.\n                              </p>\n                              <p>\n                                 Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n                                 in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                                 lacus vel augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                                 scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                                 auctor fringilla.\n                              </p>\n                              <p>\n                                 Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n                                 in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                              </p>\n                              <p>\n                                 Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                                 lacus vel augue laoreet rutrum faucibus dolor auctor.\n                              </p>\n                              <p>\n                                 Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                                 scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                                 auctor fringilla.\n                              </p>\n                           </Modal.Body>\n                           <Modal.Footer>\n                              <Button variant=\"danger light\" onClick={() => setContentModal(false)}>\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n                        {/* <!-- Button trigger modal --> */}\n                        <Button\n                           variant=\"primary\"\n                           type=\"button\"\n                           className=\"mb-2 mr-2\"\n                           onClick={() => setModalCentered(true)}\n                        >\n                           Modal centered\n                        </Button>\n                        {/* <!-- Modal --> */}\n                        <Modal className=\"fade\" show={modalCentered}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button onClick={() => setModalCentered(false)} variant=\"\" className=\"close\">\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>\n                              <p>\n                                 Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n                                 in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                              </p>\n                           </Modal.Body>\n                           <Modal.Footer>\n                              <Button onClick={() => setModalCentered(false)} variant=\"danger light\">\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n\n                        {/* <!-- Button trigger modal --> */}\n                        <Button variant=\"primary\" className=\"mb-2 mr-2\" onClick={() => setModalWithTooltip(true)}>\n                           Modal with tooltip\n                        </Button>\n                        {/* <!-- Modal --> */}\n                        <Modal className=\"fade\" show={modalWithTooltip}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button variant=\"\" className=\"close\" onClick={() => setModalWithTooltip(false)}>\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>\n                              <h5>Popover in a modal</h5>\n                              <p>\n                                 This{' '}\n                                 <a\n                                    href=\"#\"\n                                    role=\"button\"\n                                    data-container=\"body\"\n                                    data-toggle=\"popover\"\n                                    className=\"btn btn-secondary popover-test\"\n                                    title=\"Popover title\"\n                                    data-content=\"Popover body content is set in this attribute.\"\n                                 >\n                                    button\n                                 </a>{' '}\n                                 triggers a popover on click.\n                              </p>\n                              <hr />\n                              <h5>Tooltips in a modal</h5>\n                              <p>\n                                 <a\n                                    href=\"#\"\n                                    className=\"tooltip-test text-primary\"\n                                    data-toggle=\"tooltip\"\n                                    title=\"Told you!\"\n                                 >\n                                    This link\n                                 </a>{' '}\n                                 and{' '}\n                                 <a\n                                    href=\"#\"\n                                    className=\"tooltip-test text-primary\"\n                                    data-toggle=\"tooltip\"\n                                    title=\"Another one!\"\n                                 >\n                                    that link\n                                 </a>{' '}\n                                 have tooltips on hover.\n                              </p>\n                           </Modal.Body>\n                           <Modal.Footer>\n                              <Button variant=\"danger light\" onClick={() => setModalWithTooltip(false)}>\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n\n                        {/* <!-- Button trigger modal --> */}\n                        <Button variant=\"primary\" className=\"mb-2 mr-2\" onClick={() => setGridInsideModal(true)}>\n                           Grid Inside Modal\n                        </Button>\n                        {/* <!-- Modal --> */}\n                        <Modal className=\"fade\" show={gridInsideModal}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button variant=\"\" className=\"close\" onClick={() => setGridInsideModal(false)}>\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>\n                              <Container>\n                                 <Row>\n                                    <Col md=\"4\">.col-md-4</Col>\n                                    <Col md=\"4\" className=\"ml-auto\">\n                                       .col-md-4 .ml-auto\n                                    </Col>\n                                 </Row>\n                                 <Row>\n                                    <Col md=\"3\" className=\"ml-auto\">\n                                       .col-md-3 .ml-auto\n                                    </Col>\n                                    <Col md=\"2\" className=\"ml-auto\">\n                                       .col-md-2 .ml-auto\n                                    </Col>\n                                 </Row>\n                                 <Row>\n                                    <Col md=\"6\" className=\"ml-auto\">\n                                       .col-md-6 .ml-auto\n                                    </Col>\n                                 </Row>\n                                 <Row>\n                                    <Col sm=\"9\">\n                                       Level 1: .col-sm-9\n                                       <Row>\n                                          <Col sm=\"6\">Level 2: .col-8 .col-sm-6</Col>\n                                          <Col sm=\"6\">Level 2: .col-4 .col-sm-6</Col>\n                                       </Row>\n                                    </Col>\n                                 </Row>\n                              </Container>\n                           </Modal.Body>\n                           <Modal.Footer>\n                              <Button variant=\"danger light\" onClick={() => setGridInsideModal(false)}>\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n\n                        {/* <!-- Large modal --> */}\n                        <Button variant=\"primary\" className=\"mb-2\" onClick={() => setLargeModal(true)}>\n                           Large modal\n                        </Button>\n                        <Modal className=\"fade bd-example-modal-lg\" show={largeModal} size=\"lg\">\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button variant=\"\" className=\"close\" onClick={() => setLargeModal(false)}>\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>Modal body text goes here.</Modal.Body>\n                           <Modal.Footer>\n                              <Button variant=\"danger light\" onClick={() => setLargeModal(false)}>\n                                 Close\n                              </Button>\n                              <Button variant=\"\" type=\"button\" className=\"btn btn-primary\">\n                                 Save changes\n                              </Button>\n                           </Modal.Footer>\n                        </Modal>\n\n                        {/* <!-- Small modal --> */}\n                        <Button variant=\"primary\" className=\"mb-2\" onClick={() => setSmallModal(true)}>\n                           Small modal\n                        </Button>\n                        <Modal className=\"fade bd-example-modal-sm\" size=\"sm\" show={smallModal}>\n                           <Modal.Header>\n                              <Modal.Title>Modal title</Modal.Title>\n                              <Button variant=\"\" className=\"close\" onClick={() => setSmallModal(false)}>\n                                 <span>&times;</span>\n                              </Button>\n                           </Modal.Header>\n                           <Modal.Body>Modal body text goes here.</Modal.Body>\n                           <Modal.Footer>\n                              <Button variant=\"danger light\" onClick={() => setSmallModal(false)}>\n                                 Close\n                              </Button>\n                              <Button variant=\"primary\">Save changes</Button>\n                           </Modal.Footer>\n                        </Modal>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </div>\n   );\n};\n\nexport default UiModal;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Badge.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/ButtonGroup.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/DietFoodMenu.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/MediaObject.js",["895"],"import React, { Fragment } from 'react';\n/// Compoent\nimport { Row, Col, Card, Media } from 'react-bootstrap';\nimport PageTitle from '../../layouts/PageTitle';\n\n/// Image\nimport avatar1 from '../../../images/avatar/1.jpg';\nimport avatar2 from '../../../images/avatar/2.jpg';\nimport avatar3 from '../../../images/avatar/3.jpg';\nimport avatar7 from '../../../images/avatar/7.jpg';\nimport avatar4 from '../../../images/avatar/4.jpg';\nimport avatar5 from '../../../images/avatar/5.jpg';\nimport avatar6 from '../../../images/avatar/6.jpg';\nimport avatar8 from '../../../images/avatar/8.jpg';\n\n/// Bootstrap\n\nconst UiMediaObject = () => {\n   const heading = 'Media heading';\n   const text =\n      'Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.';\n   const text2 =\n      ' Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fuscecondimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus. vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.';\n   const text3 =\n      'Donec sed odio dui. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.';\n\n   return (\n      <>\n         <PageTitle activeMenu=\"Media Object\" motherMenu=\"Bootstrap\" />\n         <Row>\n            <Col xl=\"6\" lg=\"12\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Media Object</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"bootstrap-media\">\n                        <Media>\n                           <img className=\"mr-3 img-fluid \" width=\"60\" src={avatar1} alt=\"DexignZone\" />\n                           <Media.Body>\n                              <h5 className=\"mt-0\">{heading}</h5>\n                              <p className=\"mb-0\">{text}</p>\n                           </Media.Body>\n                        </Media>\n                        <Media className=\"mt-4\">\n                           <img className=\"mr-3 img-fluid \" width=\"60\" src={avatar7} alt=\"DexignZone\" />\n                           <Media.Body>\n                              <h5 className=\"mt-0\">{heading}</h5>\n                              <p className=\"mb-0\">{text}</p>\n                           </Media.Body>\n                        </Media>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"12\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Nesting</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"bootstrap-media\">\n                        <Media>\n                           <img className=\"mr-3 \" width=\"60\" src={avatar2} alt=\"DexignZone\" />\n                           <Media.Body>\n                              <h5 className=\"mt-0\">{heading}</h5>\n                              <p className=\"mb-0\">{text}</p>\n\n                              <Media className=\"mt-4\">\n                                 <a className=\"pr-3\" href=\"#\">\n                                    <img className=\"\" width=\"60\" src={avatar3} alt=\"DexignZone\" />\n                                 </a>\n                                 <Media.Body>\n                                    <h5 className=\"mt-0\">{heading}</h5>\n                                    <p className=\"mb-0\">{text}</p>\n                                 </Media.Body>\n                              </Media>\n                           </Media.Body>\n                        </Media>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n\n         <Row>\n            <Col xl=\"6\" lg=\"12\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Align Top</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"bootstrap-media\">\n                        <Media>\n                           <img className=\"align-self-start mr-3 \" width=\"60\" src={avatar4} alt=\"DexignZone\" />\n                           <Media.Body>\n                              <h5 className=\"mt-0\">Top-aligned media</h5>\n                              <p>{text}</p>\n                              <p className=\"mb-0\">{text3}</p>\n                           </Media.Body>\n                        </Media>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"12\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Align Center</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"bootstrap-media\">\n                        <Media>\n                           <img className=\"align-self-center mr-3 \" width=\"60\" src={avatar5} alt=\"DexignZone\" />\n                           <Media.Body>\n                              <h5 className=\"mt-0\">Center-aligned media</h5>\n                              <p>{text}</p>\n                              <p className=\"mb-0\">{text3}</p>\n                           </Media.Body>\n                        </Media>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n\n         <Row>\n            <Col xl=\"6\" lg=\"12\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Align Bottom</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"bootstrap-media\">\n                        <Media>\n                           <img className=\"align-self-end mr-3 \" width=\"60\" src={avatar6} alt=\"DexignZone\" />\n                           <Media.Body>\n                              <h5 className=\"mt-0\">Bottom-aligned media</h5>\n                              <p>{text}</p>\n                              <p className=\"mb-0\">{text3}</p>\n                           </Media.Body>\n                        </Media>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl=\"6\" lg=\"12\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Order</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"bootstrap-media\">\n                        <Media>\n                           <Media.Body>\n                              <h5 className=\"mt-0\">Media object</h5>\n                              <p className=\"mb-0\">{text}</p>\n                           </Media.Body>\n                           <img className=\"ml-3 \" width=\"60\" src={avatar7} alt=\"DexignZone\" />\n                        </Media>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n\n         <Row>\n            <div className=\"col-lg-12\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Media list</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"bootstrap-media\">\n                        <ul className=\"list-unstyled\">\n                           <li className=\"media\">\n                              <img className=\"mr-3 \" width=\"60\" src={avatar8} alt=\"DexignZone\" />\n                              <Media.Body>\n                                 <h5 className=\"mt-0\">List-based media object</h5>\n                                 <p className=\"mb-0\">{text2}</p>\n                              </Media.Body>\n                           </li>\n                           <li className=\"media my-4\">\n                              <img className=\"mr-3 \" width=\"60\" src={avatar1} alt=\"DexignZone\" />\n                              <Media.Body>\n                                 <h5 className=\"mt-0\">List-based media object</h5>\n                                 <p className=\"mb-0\">{text2}</p>\n                              </Media.Body>\n                           </li>\n                           <li className=\"media\">\n                              <img className=\"mr-3 \" width=\"60\" src={avatar2} alt=\"DexignZone\" />\n                              <Media.Body>\n                                 <h5 className=\"mt-0\">List-based media object</h5>\n                                 <p className=\"mb-0\">{text2}</p>\n                              </Media.Body>\n                           </li>\n                        </ul>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </div>\n         </Row>\n      </>\n   );\n};\n\nexport default UiMediaObject;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Carousel.js",["896"],"import React, { Fragment } from 'react';\n\n/// Page Title\nimport { Row, Col, Card, Carousel } from 'react-bootstrap';\nimport PageTitle from '../../layouts/PageTitle';\n\n/// Images\nimport img1 from '../../../images/big/img1.jpg';\nimport img2 from '../../../images/big/img2.jpg';\nimport img3 from '../../../images/big/img3.jpg';\nimport img4 from '../../../images/big/img4.jpg';\nimport img5 from '../../../images/big/img5.jpg';\nimport img6 from '../../../images/big/img6.jpg';\nimport img7 from '../../../images/big/img7.jpg';\n\n/// Bootstrap\n\n/// carousel data\nconst carousel1 = [img1, img2, img3];\nconst carousel2 = [\n   { img: img2, text: 'Frist' },\n   { img: img3, text: 'Second' },\n   { img: img4, text: 'Third' },\n];\nconst carousel3 = [img3, img4, img5];\nconst carousel4 = [img4, img5, img6];\nconst carousel5 = [\n   { img: img5, text: 'Frist' },\n   { img: img6, text: 'Second' },\n   { img: img7, text: 'Third' },\n];\n\nconst UiCarousel = () => (\n   <>\n      <PageTitle motherMenu=\"Bootstrap\" activeMenu=\"Carousel\" />\n      <Row>\n         <Col xl={6}>\n            <Card>\n               <Card.Body className=\"p-4\">\n                  <h4 className=\"card-intro-title\">Slides only</h4>\n                  <Carousel>\n                     {carousel1.map((carousel, i) => (\n                        <Carousel.Item key={i}>\n                           <img src={carousel} className=\"d-block w-100\" alt={`Slide ${i + 1}`} />\n                        </Carousel.Item>\n                     ))}\n                  </Carousel>\n               </Card.Body>\n            </Card>\n         </Col>\n         <Col xl={6}>\n            <Card>\n               <Card.Body className=\"p-4\">\n                  <h4 className=\"card-intro-title\">With Captions</h4>\n                  <Carousel controls={false} indicators={false}>\n                     {carousel2.map((carousel, i) => (\n                        <Carousel.Item key={i}>\n                           <img className=\"d-block w-100\" src={carousel.img} alt={`${carousel.text} slide`} />\n                           <Carousel.Caption className=\" d-none d-md-block\">\n                              <h5>{carousel.text} slide label</h5>\n                              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n                           </Carousel.Caption>\n                        </Carousel.Item>\n                     ))}\n                  </Carousel>\n               </Card.Body>\n            </Card>\n         </Col>\n         <Col xl={6}>\n            <Card>\n               <Card.Body className=\"p-4\">\n                  <h4 className=\"card-intro-title\">Slides only</h4>\n                  <Carousel controls={false} indicators={false}>\n                     {carousel3.map((carousel, i) => (\n                        <Carousel.Item key={i}>\n                           <img src={carousel} className=\"d-block w-100\" alt={`Slide ${i + 1}`} />\n                        </Carousel.Item>\n                     ))}\n                  </Carousel>\n               </Card.Body>\n            </Card>\n         </Col>\n         <Col xl={6}>\n            <Card>\n               <Card.Body className=\"p-4\">\n                  <h4 className=\"card-intro-title mb-4\">Slides With indicators</h4>\n                  <Carousel>\n                     {carousel1.map((carousel, i) => (\n                        <Carousel.Item key={i}>\n                           <img src={carousel} className=\"d-block w-100\" alt={`Slide ${i + 1}`} />\n                        </Carousel.Item>\n                     ))}\n                  </Carousel>\n               </Card.Body>\n            </Card>\n         </Col>\n         <Col xl={6}>\n            <Card>\n               <Card.Body className=\"p-4\">\n                  <h4 className=\"card-intro-title mb-4\">Slides With captions</h4>\n                  <Carousel>\n                     {carousel5.map((carousel, i) => (\n                        <Carousel.Item key={i}>\n                           <img className=\"d-block w-100\" src={carousel.img} alt={`${carousel.text} slide`} />\n                           <Carousel.Caption className=\" d-none d-md-block\">\n                              <h5>{carousel.text} slide label</h5>\n                              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n                           </Carousel.Caption>\n                        </Carousel.Item>\n                     ))}\n                  </Carousel>\n               </Card.Body>\n            </Card>\n         </Col>\n      </Row>\n   </>\n);\n\nexport default UiCarousel;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Cards.js",["897","898","899"],"import React, { Fragment } from 'react';\n\n/// Compoents\nimport { Row, Card, Col, Button, Nav } from 'react-bootstrap';\nimport PageTitle from '../../layouts/PageTitle';\n\n/// Image\nimport img1 from '../../../images/card/1.png';\nimport img2 from '../../../images/card/2.png';\nimport img3 from '../../../images/card/3.png';\n/// Bootstrap\n\nconst UiCards = () => (\n   <>\n      <PageTitle activeMenu=\"Card\" motherMenu=\"Bootstrap\" />\n      <Row>\n         <Col lg=\"6\">\n            <Card>\n               <Card.Header className=\" border-0 pb-0\">\n                  <Card.Title>Card title</Card.Title>\n               </Card.Header>\n               <Card.Body>\n                  <Card.Text>\n                     He lay on his armour-like back, and if he lifted his head a little he could see his brown belly,\n                     slightly domed and divided by arches into stiff <br /> sections. The bedding was hardly able to\n                     cover it and seemed ready to slide off any moment.\n                  </Card.Text>\n               </Card.Body>\n               <Card.Footer className=\" border-0 pt-0\">\n                  <Card.Text className=\" d-inline\">Card footer</Card.Text>\n                  <Card.Link href=\"#\" className=\"float-right\">\n                     Card link\n                  </Card.Link>\n               </Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card>\n               <Card.Header>\n                  <Card.Title>Card title</Card.Title>\n               </Card.Header>\n               <Card.Body>\n                  <Card.Text>\n                     This is a wider card with supporting text and below as a natural lead-in to the additional content.\n                     This content is a little\n                     <br /> bit longer. Some quick example text to build the bulk{' '}\n                  </Card.Text>\n               </Card.Body>\n               <Card.Footer className=\" d-sm-flex justify-content-between align-items-center\">\n                  <Card.Text className=\" text-dark d-inline\">Last updated 3 mins ago</Card.Text>\n\n                  <a href=\"#\" className=\"btn btn-primary\">\n                     Go somewhere\n                  </a>\n               </Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"text-center\">\n               <Card.Header>\n                  <Card.Title>Card Title</Card.Title>\n               </Card.Header>\n               <Card.Body>\n                  <Card.Text>\n                     This is a wider card with supporting text and below as a natural lead-in to the additional content.\n                     This content\n                  </Card.Text>\n                  <Button as=\"a\" variant=\"primary\" href=\"#\" className=\"mt-3\">\n                     Go somewhere\n                  </Button>\n               </Card.Body>\n               <Card.Footer>\n                  <Card.Text className=\" text-dark\">Last updateed 3 min ago</Card.Text>\n               </Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"text-center\">\n               <Card.Header>\n                  <Card.Title>Special title treatment</Card.Title>\n               </Card.Header>\n               <Card.Body className=\" custom-tab-1\">\n                  <ul className=\"nav nav-tabs card-body-tabs mb-3\">\n                     <Nav.Item as=\"li\">\n                        <Nav.Link active href=\"#\">\n                           Active\n                        </Nav.Link>\n                     </Nav.Item>\n                     <Nav.Item as=\"li\">\n                        <Nav.Link href=\"#\">Link</Nav.Link>\n                     </Nav.Item>\n                     <Nav.Item as=\"li\">\n                        <Nav.Link disabled href=\"#\">\n                           Disabled\n                        </Nav.Link>\n                     </Nav.Item>\n                  </ul>\n\n                  <Card.Text>With supporting text below as a natural lead-in to additional content.</Card.Text>\n                  <Button variant=\"primary\" href=\"#\" className=\"mt-3\">\n                     Go somewhere\n                  </Button>\n               </Card.Body>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"text-white bg-primary\">\n               <Card.Header>\n                  <Card.Title className=\"text-white\">Primary card title</Card.Title>\n               </Card.Header>\n               <Card.Body className=\" mb-0\">\n                  <Card.Text>\n                     Some quick example text to build on the card title and make up the bulk of the card's content.\n                  </Card.Text>\n                  <Button as=\"a\" variant=\"primary light\" href=\"#\" className=\"btn-card mt-3\">\n                     Go somewhere\n                  </Button>\n               </Card.Body>\n               <Card.Footer className=\" bg-transparent border-0 text-white\">Last updateed 3 min ago</Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"text-white bg-secondary\">\n               <Card.Header>\n                  <Card.Title className=\"text-white\">Secondary card title</Card.Title>\n               </Card.Header>\n               <Card.Body className=\" mb-0\">\n                  <Card.Text>\n                     Some quick example text to build on the card title and make up the bulk of the card's content.\n                  </Card.Text>\n                  <Button as=\"a\" variant=\"secondary light\" href=\"#\" className=\"btn-card mt-3\">\n                     Go somewhere\n                  </Button>\n               </Card.Body>\n               <Card.Footer className=\" bg-transparent border-0 text-white\">Last updateed 3 min ago</Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"text-white bg-success\">\n               <Card.Header>\n                  <Card.Title className=\"text-white\">Success card title</Card.Title>\n               </Card.Header>\n               <Card.Body className=\" mb-0\">\n                  <Card.Text>\n                     Some quick example text to build on the card title and make up the bulk of the card's content.\n                  </Card.Text>\n                  <Button as=\"a\" variant=\"success light\" href=\"#\" className=\"btn-card mt-3\">\n                     Go somewhere\n                  </Button>\n               </Card.Body>\n               <Card.Footer className=\" bg-transparent border-0 text-white\">Last updateed 3 min ago</Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"text-white bg-danger\">\n               <Card.Header>\n                  <Card.Title className=\"text-white\">Danger card title</Card.Title>\n               </Card.Header>\n               <Card.Body className=\" mb-0\">\n                  <Card.Text>\n                     Some quick example text to build on the card title and make up the bulk of the card's content.\n                  </Card.Text>\n                  <Button as=\"a\" variant=\"danger light\" href=\"#\" className=\"btn-card mt-3\">\n                     Go somewhere\n                  </Button>\n               </Card.Body>\n               <Card.Footer className=\" bg-transparent border-0 text-white\">Last updateed 3 min ago</Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"text-white bg-warning\">\n               <Card.Header>\n                  <Card.Title className=\"text-white\">Warning card title</Card.Title>\n               </Card.Header>\n               <Card.Body className=\" mb-0\">\n                  <Card.Text>\n                     Some quick example text to build on the card title and make up the bulk of the card's content.\n                  </Card.Text>\n                  <Button as=\"a\" variant=\"warning light\" href=\"#\" className=\"btn-card mt-3\">\n                     Go somewhere\n                  </Button>\n               </Card.Body>\n               <Card.Footer className=\" bg-transparent border-0 text-white\">Last updateed 3 min ago</Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"text-white bg-info\">\n               <Card.Header>\n                  <Card.Title className=\"text-white\">Info card title</Card.Title>\n               </Card.Header>\n               <Card.Body className=\" mb-0\">\n                  <Card.Text>\n                     Some quick example text to build on the card title and make up the bulk of the card's content.\n                  </Card.Text>\n                  <Button as=\"a\" variant=\"info light\" href=\"#\" className=\"btn-card mt-3\">\n                     Go somewhere\n                  </Button>\n               </Card.Body>\n               <Card.Footer className=\" bg-transparent border-0 text-white\">Last updateed 3 min ago</Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"bg-light\">\n               <Card.Header>\n                  <Card.Title>Light card title</Card.Title>\n               </Card.Header>\n               <Card.Body className=\" mb-0\">\n                  <Card.Text>\n                     Some quick example text to build on the card title and make up the bulk of the card's content.\n                  </Card.Text>\n                  <Button as=\"a\" variant=\"dark\" href=\"#\" className=\"btn-card mt-3\">\n                     Go somewhere\n                  </Button>\n               </Card.Body>\n               <Card.Footer className=\" bg-transparent border-0\">Last updateed 3 min ago</Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"text-white bg-dark\">\n               <Card.Header>\n                  <Card.Title className=\"text-white\">Dark card title</Card.Title>\n               </Card.Header>\n               <Card.Body className=\" mb-0\">\n                  <Card.Text>\n                     Some quick example text to build on the card title and make up the bulk of the card's content.\n                  </Card.Text>\n                  <Button as=\"a\" variant=\"light\" href=\"#\" className=\"btn-card mt-3 text-dark\">\n                     Go somewhere\n                  </Button>\n               </Card.Body>\n               <Card.Footer className=\" bg-transparent border-0 text-white\">Last updateed 3 min ago</Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"mb-3\">\n               <img className=\"card-img-top img-fluid\" src={img1} alt=\"Card image cap\" />\n               <Card.Header>\n                  <Card.Title>Card title</Card.Title>\n               </Card.Header>\n               <Card.Body>\n                  <Card.Text>\n                     This is a wider card with supporting text below as a natural lead-in to additional content. This\n                     content is a little bit longer.\n                  </Card.Text>\n                  <Card.Text className=\" text-dark mb-3\">Last updated 3 mins ago</Card.Text>\n               </Card.Body>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"mb-3\">\n               <img className=\"card-img-top img-fluid\" src={img2} alt=\"Card image cap\" />\n               <Card.Header>\n                  <Card.Title>Card title</Card.Title>\n               </Card.Header>\n               <Card.Body className=\"pt-3\">\n                  <Card.Text>He lay on his armour-like back, and if he lifted his head a little</Card.Text>\n               </Card.Body>\n               <Card.Footer>\n                  <Card.Text className=\" d-inline\">Card footer</Card.Text>\n                  <a as=\"a\" variant=\"\" href=\"#\" className=\"card-link float-right\">\n                     Go somewhere\n                  </a>\n               </Card.Footer>\n            </Card>\n         </Col>\n         <Col lg=\"6\">\n            <Card className=\"mb-3\">\n               <Card.Header>\n                  <Card.Title>Card title</Card.Title>\n               </Card.Header>\n               <Card.Body>\n                  <Card.Text>\n                     This is a wider card with supporting text and below as a natural lead-in to the additional content.\n                     This content is a little\n                  </Card.Text>\n               </Card.Body>\n               <img className=\"card-img-bottom img-fluid\" src={img3} alt=\"Card image cap\" />\n               <Card.Footer>\n                  <Card.Text className=\"d-inline\">Card footer</Card.Text>\n                  <a as=\"a\" variant=\"\" href=\"#\" className=\"card-link float-right\">\n                     Go somewhere\n                  </a>\n               </Card.Footer>\n            </Card>\n         </Col>\n      </Row>\n   </>\n);\n\nexport default UiCards;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/ListGroup.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/ProgressBar.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/DropDown.js",["900","901","902"],"import React, { Fragment } from 'react';\nimport { Row, Col, Card, Dropdown, DropdownButton, ButtonGroup, Button, SplitButton } from 'react-bootstrap';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst UiDropDown = () => (\n   <>\n      <PageTitle activeMenu=\"Dropdown\" motherMenu=\"Bootstrap\" />\n      <Row>\n         <Col xl={4} lg={6}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Basic Dropdown</Card.Title>\n                  <Card.Text className=\"m-0 subtitle\">\n                     A dropdown menu is a toggleable menu that allows the user to choose one value from a predefined\n                     list\n                  </Card.Text>\n               </Card.Header>\n               <Card.Body>\n                  <div className=\"basic-dropdown\">\n                     <Dropdown>\n                        <Dropdown.Toggle variant=\"primary\">Dropdown button</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                           <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                        </Dropdown.Menu>\n                     </Dropdown>\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n\n         <Col xl={4} lg={6}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Dropdown Divider</Card.Title>\n                  <Card.Text className=\"m-0 subtitle\">\n                     The <code>.dropdown-divider</code> class is used to separate links inside the dropdown menu with a\n                     thin horizontal border\n                  </Card.Text>\n               </Card.Header>\n               <Card.Body>\n                  <div className=\"basic-dropdown\">\n                     <Dropdown>\n                        <Dropdown.Toggle variant=\"primary\">Dropdown button</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                           <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                           <div className=\"dropdown-divider\" />\n                           <Dropdown.Item href=\"#\">Another link</Dropdown.Item>\n                        </Dropdown.Menu>\n                     </Dropdown>\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n\n         <Col xl={4} lg={12}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Dropdown Header</Card.Title>\n                  <Card.Text className=\"m-0 subtitle\">\n                     The <code>.dropdown-header</code> class is used to add headers inside the dropdown menu\n                  </Card.Text>\n               </Card.Header>\n               <Card.Body>\n                  <div className=\"basic-dropdown\">\n                     <Dropdown>\n                        <Dropdown.Toggle variant=\"primary\">Dropdown button</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                           <h5 className=\"dropdown-header\">Dropdown header</h5>\n                           <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                           <h5 className=\"dropdown-header\">Dropdown header</h5>\n                           <Dropdown.Item href=\"#\">Another link</Dropdown.Item>\n                        </Dropdown.Menu>\n                     </Dropdown>\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n      </Row>\n\n      <Row>\n         <Col xl={4} lg={6}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Disable and Active items</Card.Title>\n                  <Card.Text className=\"m-0 subtitle\">\n                     The <code>.dropdown-header</code> class is used to add headers inside the dropdown menu\n                  </Card.Text>\n               </Card.Header>\n               <Card.Body>\n                  <div className=\"basic-dropdown\">\n                     <Dropdown>\n                        <Dropdown.Toggle variant=\"primary\">Dropdown button</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                           <Dropdown.Item href=\"#\">Normal</Dropdown.Item>\n                           <a className=\"dropdown-item active\" href=\"#\">\n                              Active\n                           </a>\n                           <a className=\"dropdown-item disabled\" href=\"#\">\n                              Disabled\n                           </a>\n                        </Dropdown.Menu>\n                     </Dropdown>\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n\n         <Col xl={4} lg={6}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Align Right</Card.Title>\n                  <Card.Text className=\"m-0 subtitle\">\n                     To right-align the dropdown, add the <code>.dropdown-menu-right</code> class to the element with\n                     .dropdown-menu\n                  </Card.Text>\n               </Card.Header>\n               <Card.Body>\n                  <div className=\"basic-dropdown\">\n                     <Dropdown>\n                        <Dropdown.Toggle variant=\"primary\">Dropdown button</Dropdown.Toggle>\n                        <Dropdown.Menu className=\"dropdown-menu-right\">\n                           <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                        </Dropdown.Menu>\n                     </Dropdown>\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n\n         <Col xl={4} lg={6}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Dropup</Card.Title>\n                  <Card.Text className=\"m-0 subtitle\">\n                     The <code>.dropup</code> class makes the dropdown menu expand upwards instead of downwards\n                  </Card.Text>\n               </Card.Header>\n               <Card.Body>\n                  <div className=\"basic-dropdown\">\n                     {/* <!-- Default dropup button --> */}\n                     <DropdownButton\n                        as={ButtonGroup}\n                        id=\"dropdown-button-drop-up\"\n                        drop=\"up\"\n                        variant=\"primary\"\n                        title=\"Dropup\"\n                        className=\"mr-1\"\n                     >\n                        <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                     </DropdownButton>\n\n                     {/* <!-- Split dropup button --> */}\n                     <SplitButton\n                        as={ButtonGroup}\n                        variant=\"primary\"\n                        id=\"dropdown-button-drop-up\"\n                        className=\"mt-1\"\n                        drop=\"up\"\n                        title=\"Split dropup\"\n                     >\n                        <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                     </SplitButton>\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n\n         <Col xl={6} lg={6}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Dropright </Card.Title>\n                  <Card.Text className=\"m-0 subtitle\">\n                     Trigger dropdown menus at the right of the elements by adding <code>.dropright</code> to the parent\n                     element\n                  </Card.Text>\n               </Card.Header>\n               <Card.Body>\n                  <div className=\"basic-dropdown\">\n                     {/* <!-- Default dropright button --> */}\n                     <div className=\"btn-group dropright \">\n                        <DropdownButton\n                           as={ButtonGroup}\n                           id=\"dropdown-button-drop-right\"\n                           drop=\"right\"\n                           variant=\"primary\"\n                           title=\" Dropright\"\n                           className=\"mr-1\"\n                        >\n                           <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                        </DropdownButton>\n                     </div>\n\n                     {/* <!-- Split dropright button --> */}\n                     <div className=\"btn-group dropright \">\n                        <SplitButton\n                           as={ButtonGroup}\n                           variant=\"primary\"\n                           id=\"dropdown-button-drop-right\"\n                           className=\"mt-1\"\n                           drop=\"righy\"\n                           title=\"Split dropright\"\n                        >\n                           <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                        </SplitButton>\n                     </div>\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n\n         <Col xl={6} lg={12}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Dropleft </Card.Title>\n                  <Card.Text className=\"m-0 subtitle\">\n                     Trigger dropdown menus at the right of the elements by adding <code>.dropleft </code> to the parent\n                     element\n                  </Card.Text>\n               </Card.Header>\n               <Card.Body>\n                  <div className=\"basic-dropdown\">\n                     {/* <!-- Default dropleft button --> */}\n                     <DropdownButton\n                        as={ButtonGroup}\n                        id=\"dropdown-button-drop-left\"\n                        drop=\"left\"\n                        variant=\"primary\"\n                        className=\"mr-1\"\n                        title=\" Dropleft\"\n                     >\n                        <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                     </DropdownButton>\n\n                     {/* <!-- Split dropleft button --> */}\n                     <div className=\"btn-group \">\n                        <SplitButton\n                           as={ButtonGroup}\n                           variant=\"primary\"\n                           id=\"dropdown-button-drop-left\"\n                           className=\"mt-1\"\n                           drop=\"left\"\n                           title=\"Split dropleft\"\n                        >\n                           <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                        </SplitButton>\n                     </div>\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n      </Row>\n\n      <Row>\n         <Col lg={12}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Button Dropdowns</Card.Title>\n               </Card.Header>\n               <Card.Body>\n                  <div className=\"button-dropdown\">\n                     {['Primary', 'Secondary', 'Success', 'Info', 'Warning', 'Danger'].map((variant) => (\n                        <SplitButton\n                           key={variant}\n                           as={ButtonGroup}\n                           variant={variant.toLowerCase()}\n                           id=\"dropdown-button-drop-dwon\"\n                           className=\"mt-1 mr-1\"\n                           drop=\"dwon\"\n                           title={` ${variant}`}\n                        >\n                           <Dropdown.Item href=\"#\">Link 1</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 2</Dropdown.Item>\n                           <Dropdown.Item href=\"#\">Link 3</Dropdown.Item>\n                        </SplitButton>\n                     ))}\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n      </Row>\n\n      <Row>\n         <Col lg={12}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Sizing</Card.Title>\n                  <Card.Text className=\"m-0 subtitle\">\n                     Button dropdowns work with buttons of all sizes, including default and split dropdown buttons.\n                  </Card.Text>\n               </Card.Header>\n               <Card.Body>\n                  <div className=\"dropdown-size\">\n                     {/* <!-- Large button groups (default and split) --> */}\n                     <DropdownButton\n                        as={ButtonGroup}\n                        id=\"dropdown-button-drop-down\"\n                        drop=\"down\"\n                        variant=\"primary\"\n                        size=\"lg\"\n                        title=\" Large button\"\n                        className=\"mr-1\"\n                     >\n                        <Dropdown.Item href=\"#\">Action</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\n                        <div className=\"dropdown-divider\" />\n                        <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\n                     </DropdownButton>\n\n                     <SplitButton\n                        as={ButtonGroup}\n                        id=\"dropdown-button-drop-down\"\n                        drop=\"down\"\n                        variant=\"primary\"\n                        size=\"lg\"\n                        title=\" Large split button\"\n                        className=\"mt-1 mr-1\"\n                     >\n                        <Dropdown.Item href=\"#\">Action</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\n                        <div className=\"dropdown-divider\" />\n                        <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\n                     </SplitButton>\n\n                     {/* <!-- Small button groups (default and split) --> */}\n\n                     <DropdownButton\n                        as={ButtonGroup}\n                        id=\"dropdown-button-drop-down\"\n                        drop=\"down\"\n                        variant=\"primary\"\n                        size=\"sm\"\n                        className=\"mt-1 mr-1\"\n                        title=\" Large button\"\n                     >\n                        <Dropdown.Item href=\"#\">Action</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\n                        <div className=\"dropdown-divider\" />\n                        <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\n                     </DropdownButton>\n\n                     <SplitButton\n                        as={ButtonGroup}\n                        id=\"dropdown-button-drop-down\"\n                        drop=\"down\"\n                        variant=\"primary\"\n                        size=\"sm\"\n                        title=\" Large split button\"\n                        className=\"mt-1 mr-1\"\n                     >\n                        <Dropdown.Item href=\"#\">Action</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\n                        <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\n                        <div className=\"dropdown-divider\" />\n                        <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\n                     </SplitButton>\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n      </Row>\n\n      <Row>\n         <Col lg={12}>\n            <Card>\n               <Card.Header className=\"d-block\">\n                  <Card.Title>Custom style</Card.Title>\n                  <Card.Text className=\"m-0 subtitle\">\n                     Use <code>.custom-dropdown</code> this class for this style\n                  </Card.Text>\n               </Card.Header>\n               <Card.Body>\n                  <Row>\n                     <Col xl={3}>\n                        <Dropdown>\n                           <Dropdown.Toggle variant=\"\" className=\"pl-0 mt-1\">\n                              Last 7 days\n                           </Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item href=\"#\">Last 1 Month</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Last 6 Month</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Last 10 Month</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </Col>\n\n                     <Col xl={3}>\n                        <Dropdown>\n                           <Dropdown.Toggle variant=\"outline-primary\" size=\"sm\" className=\"mt-1\">\n                              Last 7 days\n                           </Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item href=\"#\">Last 1 Month</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Last 6 Month</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Last 10 Month</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </Col>\n\n                     <Col xl={3}>\n                        <Dropdown>\n                           <Dropdown.Toggle variant=\"outline-primary\" size=\"sm\" className=\"mt-1\">\n                              Last 1 Hour\n                           </Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item href=\"#\">Last 1 hour</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Last 2 hour</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Last 3 hour</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </Col>\n\n                     <Col xl={3}>\n                        <Dropdown>\n                           <Dropdown.Toggle variant=\"primary\" size=\"sm\" className=\"mt-1\">\n                              Last 1 Hour\n                           </Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item href=\"#\">Last 1 hour</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Last 2 hour</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Last 3 hour</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </Col>\n\n                     <Col xl={3}>\n                        <Dropdown>\n                           <Dropdown.Toggle\n                              variant=\"primary\"\n                              className=\"btn btn-sm btn-primary mt-1\"\n                              data-toggle=\"dropdown\"\n                           >\n                              <i className=\"ti-search m-r-5\" /> 3 AM\n                           </Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item href=\"#\">6 AM</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">9 AM</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">12 AM</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </Col>\n\n                     <Col xl={3}>\n                        <Dropdown>\n                           <Dropdown.Toggle variant=\"primary\" size=\"sm\" id=\"whiteSpace\" className=\"mt-1\">\n                              <i className=\"ti-calendar m-r-5\" /> March 20, 2018 &nbsp; To &nbsp;April 20, 2018\n                           </Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item href=\"#\">May 20, 2018 &nbsp; To &nbsp; June 20, 2018</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">July 20, 2018 &nbsp; To &nbsp; August 20, 2018</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </Col>\n                     <Col xl={3}>\n                        <Dropdown>\n                           <Dropdown.Toggle\n                              as=\"button\"\n                              variant=\"\"\n                              className=\"btn sharp btn-primary tp-btn mt-1\"\n                              id=\"tp-btn\"\n                           >\n                              <svg\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                                 xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                 width=\"18px\"\n                                 height=\"18px\"\n                                 viewBox=\"0 0 24 24\"\n                                 version=\"1.1\"\n                              >\n                                 <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                    <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                    <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                    <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                    <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                 </g>\n                              </svg>\n                           </Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item href=\"#\">Option 1</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Option 2</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Option 3</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </Col>\n\n                     <Col xl={3}>\n                        <Dropdown>\n                           <Dropdown.Toggle\n                              as=\"button\"\n                              variant=\"\"\n                              className=\"btn sharp btn-primary tp-btn mt-1\"\n                              id=\"tp-btn\"\n                           >\n                              <svg\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                                 xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                 width=\"18px\"\n                                 height=\"18px\"\n                                 viewBox=\"0 0 24 24\"\n                                 version=\"1.1\"\n                              >\n                                 <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                    <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                    <circle fill=\"#000000\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                    <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                    <circle fill=\"#000000\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                 </g>\n                              </svg>\n                           </Dropdown.Toggle>\n                           <Dropdown.Menu>\n                              <Dropdown.Item href=\"#\">Option 1</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Option 2</Dropdown.Item>\n                              <Dropdown.Item href=\"#\">Option 3</Dropdown.Item>\n                           </Dropdown.Menu>\n                        </Dropdown>\n                     </Col>\n                  </Row>\n               </Card.Body>\n            </Card>\n         </Col>\n      </Row>\n   </>\n);\n\nexport default UiDropDown;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/PopOver.js",["903"],"import React from 'react';\nimport { Row, Col, Card, Popover, OverlayTrigger, Button } from 'react-bootstrap';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst UiPopOver = () => (\n   <div className=\"h-80\">\n      <PageTitle activeMenu=\"Popover\" motherMenu=\"Bootstrap\" />\n      <Row>\n         <Col>\n            <Card>\n               <Card.Header>\n                  <Card.Title>Bootstrap popover</Card.Title>\n               </Card.Header>\n               <Card.Body>\n                  <Card.Text>\n                     Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam laborum dolorum culpa a maiores\n                     officia ab. Cumque necessitatibus voluptates soluta, ullam numquam nulla. Et a architecto veritatis\n                     sint, autem cupiditate iure illo pariatur eum, praesentium numquam ea quaerat ipsam? Corrupti nobis\n                     illo itaque quae, qui numquam vero ipsa, reiciendis sit repudiandae molestiae natus vel\n                     voluptatibus exercitationem ducimus neque harum ad, commodi excepturi repellat eos fugiat minus\n                     eius. Doloremque itaque repudiandae saepe quia temporibus? Vitae, reprehenderit aliquam facilis qui\n                     at quis provident in maiores illo laborum, voluptatem recusandae cupiditate nemo. Nulla iusto ad\n                     consequatur reprehenderit quod accusamus, vitae, blanditiis quae ut tenetur nobis animi dolorum\n                     consectetur dignissimos amet illo provident nam obcaecati eligendi molestias tempora? Ad nam nobis\n                     eaque consequatur tempore tenetur eius ipsum reprehenderit dignissimos inventore. Id recusandae\n                     nemo dicta rerum. Distinctio itaque, veniam dolore inventore aliquid assumenda neque. Deserunt!\n                  </Card.Text>\n                  <div className=\"bootstrap-popover-wrapper\">\n                     <div className=\"bootstrap-popover d-inline-block\">\n                        {['Left', 'Top', 'Bottom', 'Right'].map((placement, i) => (\n                           <OverlayTrigger\n                              trigger=\"click\"\n                              key={placement}\n                              placement={placement.toLowerCase()}\n                              overlay={\n                                 <Popover id={`popover-positioned-${placement.toLowerCase()}`}>\n                                    <Popover.Title as=\"h3\">{`Popover on ${placement}`}</Popover.Title>\n                                    <Popover.Content>\n                                       Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor.\n                                    </Popover.Content>\n                                 </Popover>\n                              }\n                           >\n                              <Button variant=\"primary\" size=\"sm\" className=\"mr-3 mt-3\">\n                                 {placement}\n                              </Button>\n                           </OverlayTrigger>\n                        ))}\n                     </div>\n                  </div>\n               </Card.Body>\n            </Card>\n         </Col>\n      </Row>\n   </div>\n);\n\nexport default UiPopOver;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Grid.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Pagination.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Tab.js",["904"],"/* eslint-disable no-nested-ternary */\nimport React, { Fragment } from 'react';\n\nimport { Row, Col, Card, Tabs, Tab, Nav } from 'react-bootstrap';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst UiTab = () => {\n   const tabData = [\n      {\n         name: 'Home',\n         icon: 'home',\n         content:\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove.',\n      },\n      {\n         name: 'Profile',\n         icon: 'user',\n         content:\n            \"Raw denim you probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth master cleanse. Mustache cliche tempor.      \",\n      },\n      {\n         name: 'Contact',\n         icon: 'phone',\n         content:\n            'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove.',\n      },\n\n      {\n         name: 'Message',\n         icon: 'envelope',\n         content:\n            \"Raw denim you probably haven't heard of them jean shorts Austin. Nesciunt tofu stumptown aliqua, retro synth master cleanse. Mustache cliche tempor.      \",\n      },\n   ];\n\n   return (\n      <>\n         <PageTitle activeMenu=\"Tab\" motherMenu=\"Bootstrap\" />\n         <Row>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Default Tab</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     {/* <!-- Nav tabs --> */}\n                     <div className=\"default-tab\">\n                        <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                           <Nav as=\"ul\" className=\"nav-tabs\">\n                              {tabData.map((data, i) => (\n                                 <Nav.Item as=\"li\" key={i}>\n                                    <Nav.Link eventKey={data.name.toLowerCase()}>\n                                       <i className={`la la-${data.icon} mr-2`} />\n                                       {data.name}\n                                    </Nav.Link>\n                                 </Nav.Item>\n                              ))}\n                           </Nav>\n                           <Tab.Content className=\"pt-4\">\n                              {tabData.map((data, i) => (\n                                 <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                                    <h4>This is {data.name} title</h4>\n                                    <p>{data.content}</p>\n                                    <p>{data.content}</p>\n                                 </Tab.Pane>\n                              ))}\n                           </Tab.Content>\n                        </Tab.Container>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Custom Tab 1</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     {/* <!-- Nav tabs --> */}\n                     <div className=\"custom-tab-1\">\n                        <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                           <Nav as=\"ul\" className=\"nav-tabs\">\n                              {tabData.map((data, i) => (\n                                 <Nav.Item as=\"li\" key={i}>\n                                    <Nav.Link eventKey={data.name.toLowerCase()}>\n                                       <i className={`la la-${data.icon} mr-2`} />\n                                       {data.name}\n                                    </Nav.Link>\n                                 </Nav.Item>\n                              ))}\n                           </Nav>\n                           <Tab.Content className=\"pt-4\">\n                              {tabData.map((data, i) => (\n                                 <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                                    <h4>This is {data.name} title</h4>\n                                    <p>{data.content}</p>\n                                    <p>{data.content}</p>\n                                 </Tab.Pane>\n                              ))}\n                           </Tab.Content>\n                        </Tab.Container>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Nav Pills Tabs</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                        <Nav as=\"ul\" className=\"nav-pills mb-4 light\">\n                           {tabData.map(\n                              (data, i) =>\n                                 i !== tabData.length - 1 && (\n                                    <Nav.Item as=\"li\" key={i}>\n                                       <Nav.Link eventKey={data.name.toLowerCase()}>\n                                          Tab {i === 1 ? 'One' : i === 2 ? 'Two' : 'Three'}\n                                       </Nav.Link>\n                                    </Nav.Item>\n                                 )\n                           )}\n                        </Nav>\n                        <Tab.Content className=\"\">\n                           {tabData.map(\n                              (data, i) =>\n                                 i !== tabData.length - 1 && (\n                                    <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                                       <p>{data.content}</p>\n                                       <p>{data.content}</p>\n                                    </Tab.Pane>\n                                 )\n                           )}\n                        </Tab.Content>\n                     </Tab.Container>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Nav Pills Tabs</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                        <Nav as=\"ul\" className=\"nav-pills mb-4 justify-content-end\">\n                           {tabData.map(\n                              (data, i) =>\n                                 i !== tabData.length - 1 && (\n                                    <Nav.Item as=\"li\" key={i}>\n                                       <Nav.Link eventKey={data.name.toLowerCase()}>\n                                          Tab {i === 1 ? 'One' : i === 2 ? 'Two' : 'Three'}\n                                       </Nav.Link>\n                                    </Nav.Item>\n                                 )\n                           )}\n                        </Nav>\n                        <Tab.Content className=\"\">\n                           {tabData.map(\n                              (data, i) =>\n                                 i !== tabData.length - 1 && (\n                                    <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                                       <p>{data.content}</p>\n                                       <p>{data.content}</p>\n                                    </Tab.Pane>\n                                 )\n                           )}\n                        </Tab.Content>\n                     </Tab.Container>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Vertical Nav Pill</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                           <Col xl={3} className=\"col-xxl-4\" sm={4}>\n                              <Nav as=\"ul\" className=\"flex-column nav-pills mb-3\">\n                                 {tabData.map((data, i) => (\n                                    <Nav.Item as=\"li\" key={i}>\n                                       <Nav.Link eventKey={data.name.toLowerCase()}>{data.name}</Nav.Link>\n                                    </Nav.Item>\n                                 ))}\n                              </Nav>\n                           </Col>\n                           <Col xl={9} className=\"col-xxl-8\" sm={8}>\n                              <Tab.Content className=\"ml-2\">\n                                 {tabData.map((data, i) => (\n                                    <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                                       <p>\n                                          {data.content} {data.content}\n                                       </p>\n                                    </Tab.Pane>\n                                 ))}\n                              </Tab.Content>{' '}\n                           </Col>\n                        </Tab.Container>\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Vertical Nav Pill</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Row>\n                        <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                           <Col xl={9} className=\"col-xxl-8\" sm={8}>\n                              <Tab.Content>\n                                 {tabData.map((data, i) => (\n                                    <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                                       <p>\n                                          {data.content} {data.content}\n                                       </p>\n                                    </Tab.Pane>\n                                 ))}\n                              </Tab.Content>\n                           </Col>\n                           <Col xl={3} className=\"col-xxl-4\" sm={4} id=\"order-2\">\n                              <Nav as=\"div\" variant=\"pills\" className=\"flex-column m-0\">\n                                 {tabData.map((data, i) => (\n                                    <Nav.Item as=\"a\" key={i}>\n                                       <Nav.Link eventKey={data.name.toLowerCase()}>{data.name}</Nav.Link>\n                                    </Nav.Item>\n                                 ))}\n                              </Nav>\n                           </Col>\n                        </Tab.Container>\n                     </Row>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <div className=\"col-xl-12\">\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Tab with icon</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                        <Nav as=\"ul\" className=\"nav-tabs\">\n                           {tabData.map(\n                              (data, i) =>\n                                 i !== tabData.length - 1 && (\n                                    <Nav.Item as=\"li\" key={i}>\n                                       <Nav.Link eventKey={data.name.toLowerCase()}>\n                                          <i className={`ti-${i === 2 ? 'email' : data.icon}`} />\n                                       </Nav.Link>\n                                    </Nav.Item>\n                                 )\n                           )}\n                        </Nav>\n                        <Tab.Content className=\"pt-4\">\n                           {tabData.map(\n                              (data, i) =>\n                                 i !== tabData.length - 1 && (\n                                    <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n                                       <h4>This is icon title</h4>\n                                       <p>{data.content}</p>\n                                       <p>{data.content}</p>\n                                    </Tab.Pane>\n                                 )\n                           )}\n                        </Tab.Content>\n                     </Tab.Container>\n                  </Card.Body>\n               </Card>\n            </div>\n         </Row>\n      </>\n   );\n};\n\nexport default UiTab;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/DataTable.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/Typography.js",["905","906","907","908","909","910"],"import React, { Fragment } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport PageTitle from '../../layouts/PageTitle';\n\nconst UiTypography = () => (\n   <>\n      <PageTitle activeMenu=\"Typography\" motherMenu=\"Bootstrap\" />\n      <Row>\n         <Col xs={12}>\n            <Card>\n               <Card.Body>\n                  <Row className=\"justify-content-between\">\n                     <Col lg={4} className=\"mb-3\">\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title\">Typography</h4>\n                           <h6>\n                              Use tags <code>h1 to h6</code> for get desire heading.\n                           </h6>\n                        </div>\n                        <div className=\"card-content\">\n                           <h1>h1. Bootstrap heading</h1>\n                           <h2>h2. Bootstrap heading</h2>\n                           <h3>h3. Bootstrap heading</h3>\n                           <h4>h4. Bootstrap heading</h4>\n                           <h5>h5. Bootstrap heading</h5>\n                           <h6>h6. Bootstrap heading</h6>\n                        </div>\n                     </Col>\n                     <Col lg={3}>\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title\">Paragraph with justify</h4>\n                           <p>\n                              Use tags <code>text-justify</code> for get desire paragraph.\n                           </p>\n                        </div>\n                        <div className=\"card-content\">\n                           <p className=\"text-justify\">\n                              Ambitioni dedisse scripsisse iudicaretur. Cras mattis iudicium purus sit amet fermentum.\n                              Donec sed odio operae, eu vulputate felis rhoncus. Praeterea iter est quasdam res quas ex\n                              communi. At nos hinc posthac, sitientis piros Afros. Petierunt uti sibi concilium totius\n                              Galliae in diem certam indicere. Cras mattis iudicium purus sit amet fermentum.\n                           </p>\n                        </div>\n                     </Col>\n                     <Col lg={4}>\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title\">Alignment text</h4>\n                           <p>\n                              Use tags <code>text-left, text-center, text-right</code> for get desire text.\n                           </p>\n                        </div>\n                        <div className=\"card-content\">\n                           <p className=\"text-left\">Left aligned text on all viewport sizes.</p>\n                           <p className=\"text-center\">Center aligned text on all viewport sizes.</p>\n                           <p className=\"text-right\">Right aligned text on all viewport sizes.</p>\n                        </div>\n                     </Col>\n                     <Col xs={12}>\n                        <hr />\n                        <br />\n                     </Col>\n                     <Col lg={6}>\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title\">View port text</h4>\n                           <p>\n                              Use tags <code>text-sm-left, text-md-left, text-lg-left, text-xl-left</code> for get\n                              desire text.\n                           </p>\n                        </div>\n                        <div className=\"card-content\">\n                           <p className=\"text-sm-left\">Left aligned text on viewports sized SM (small) or wider.</p>\n                           <p className=\"text-md-left\">Left aligned text on viewports sized MD (medium) or wider.</p>\n                           <p className=\"text-lg-left\">Left aligned text on viewports sized LG (large) or wider.</p>\n                           <p className=\"text-xl-left\">\n                              Left aligned text on viewports sized XL (extra-large) or wider.\n                           </p>\n                        </div>\n                     </Col>\n                     <Col lg={6}>\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title\">Font weight and italics</h4>\n                           <p>\n                              Use tags <code>, font-weight-normal, font-weight-italic</code> for get desire text.\n                           </p>\n                        </div>\n                        <div className=\"card-content\">\n                           <p className=\"\">Bold text.</p>\n                           <p className=\"font-weight-normal\">Normal weight text.</p>\n                           <p className=\"font-italic\">Italic text.</p>\n                        </div>\n                     </Col>\n                     <Col xs={12}>\n                        <hr />\n                        <br />\n                     </Col>\n                     <Col lg={4}>\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title\">Text colors</h4>\n                           <p>Use tags below class for get desire text.</p>\n                        </div>\n                        <div className=\"card-content\">\n                           <p className=\"text-muted\">\n                              This is an example of muted text. Add class <code>text-muted</code>\n                           </p>\n                           <p className=\"text-primary\">\n                              This is an example of primary text. Add class <code>text-primary</code>\n                           </p>\n                           <p className=\"text-success\">\n                              This is an example of success text. Add class <code>text-success</code>\n                           </p>\n                           <p className=\"text-info\">\n                              This is an example of info text. Add class <code>text-info</code>\n                           </p>\n                           <p className=\"text-warning\">\n                              This is an example of warning text. Add class <code>text-warning</code>\n                           </p>\n                           <p className=\"text-danger\">\n                              This is an example of danger text. Add class <code>text-danger</code>\n                           </p>\n                        </div>\n                     </Col>\n                     <Col lg={4}>\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title\">Address</h4>\n                           <p>\n                              Use <code>address</code> for get desire address.\n                           </p>\n                        </div>\n                        <div className=\"card-content\">\n                           <address>\n                              <strong>Twitter, Inc.</strong>\n                              <br />\n                              795 Folsom Ave, Suite 600\n                              <br />\n                              San Francisco, CA 94107\n                              <br />\n                              <abbr title=\"Phone\">P:</abbr>(123) 456-7890\n                           </address>\n                           <address>\n                              <strong>George Belly</strong>\n                              <br />\n                              <a href=\"mailto:#\">info@example.com</a>\n                           </address>\n                        </div>\n                     </Col>\n                     <Col lg={4}>\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title\">Blockquotes</h4>\n                           <p>\n                              Use <code>blockquote</code> for get desire address.\n                           </p>\n                        </div>\n                        <blockquote>\n                           Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.\n                        </blockquote>\n                        <blockquote>\n                           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                           <small>\n                              {' '}\n                              - Someone famous in <cite title=\"Source Title\">Source Title</cite>\n                           </small>\n                        </blockquote>\n                     </Col>\n                     <Col xs={12}>\n                        <hr />\n                        <br />\n                     </Col>\n                     <Col lg={4} className=\" mb-3\">\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title mb-1\">Ol Listing</h4>\n                           <p>\n                              Use tags <code>ol {'>'} li</code> for get desire ol list.\n                           </p>\n                        </div>\n                        <ol>\n                           <li>Lorem ipsum dolor sit amet</li>\n                           <li>Consectetur adipiscing elit</li>\n                           <li>Integer molestie lorem at massa</li>\n                        </ol>\n                     </Col>\n                     <Col lg={4} className=\" mb-3\">\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title mb-1\">Ul Listing</h4>\n                           <p>\n                              Use tags <code>ul {'>'} li</code> for get desire ol list.\n                           </p>\n                        </div>\n                        <ul>\n                           <li>Lorem ipsum dolor sit amet</li>\n                           <li>Consectetur adipiscing elit</li>\n                           <li>Integer molestie lorem at massa</li>\n                        </ul>\n                     </Col>\n                     <Col lg={4} className=\" mb-3\">\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title mb-1\">Description Text</h4>\n                           <p>\n                              Use tags <code>dl {'>'} dt</code> for get desire ol list.\n                           </p>\n                        </div>\n                        <dl>\n                           <dt>Standard Description List</dt>\n                           <dd>Description Text</dd>\n                           <dt>Description List Title</dt>\n                           <dd>Description List Text</dd>\n                        </dl>\n                     </Col>\n                     <Col xs={12}>\n                        <hr />\n                        <br />\n                     </Col>\n                     <Col lg={4} className=\" mb-3\">\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title mb-1\">Fancy Listing 1</h4>\n                           <p>\n                              Use class <code>list-icons</code> to ul for get desire ol list.\n                           </p>\n                        </div>\n                        <ul className=\"list-icons\">\n                           <li>\n                              <span className=\"align-middle mr-2\">\n                                 <i className=\"ti-angle-right\" />\n                              </span>{' '}\n                              Lorem ipsum dolor sit amet\n                           </li>\n                           <li>\n                              <span className=\"align-middle mr-2\">\n                                 <i className=\"ti-angle-right\" />\n                              </span>{' '}\n                              Consectetur adipiscing elit\n                           </li>\n                           <li>\n                              <span className=\"align-middle mr-2\">\n                                 <i className=\"ti-angle-right\" />\n                              </span>{' '}\n                              Integer molestie lorem at massa\n                           </li>\n                        </ul>\n                     </Col>\n                     <Col lg={4} className=\" mb-3\">\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title mb-1\">Fancy Listing with href</h4>\n                           <p>\n                              Use class <code>list-icons</code> to ul for get desire ol list.\n                           </p>\n                        </div>\n                        <ul className=\"list-icons\">\n                           <li>\n                              <a href=\"#\">\n                                 <span className=\"align-middle mr-2\">\n                                    <i className=\"fa fa-check text-info\" />\n                                 </span>{' '}\n                                 Lorem ipsum dolor sit amet\n                              </a>\n                           </li>\n                           <li>\n                              <a href=\"#\">\n                                 <span className=\"align-middle mr-2\">\n                                    <i className=\"fa fa-check text-info\" />\n                                 </span>\n                                 Consectetur adipiscing elit\n                              </a>\n                           </li>\n                           <li>\n                              <a href=\"#\">\n                                 <span className=\"align-middle mr-2\">\n                                    <i className=\"fa fa-check text-info\" />\n                                 </span>\n                                 Integer molestie lorem at massa\n                              </a>\n                           </li>\n                        </ul>\n                     </Col>\n                     <Col lg={4} className=\" mb-3\">\n                        <div className=\"mb-4\">\n                           <h4 className=\"card-title card-intro-title mb-1\">Fancy Listing with href</h4>\n                           <p>\n                              Use class <code>list-icons</code> to ul for get desire ol list.\n                           </p>\n                        </div>\n                        <ul className=\"list-icons\">\n                           <li>\n                              <a href=\"#\">\n                                 <span className=\"align-middle mr-2\">\n                                    <i className=\"fa fa-chevron-right\" />\n                                 </span>{' '}\n                                 Lorem ipsum dolor sit amet\n                              </a>\n                           </li>\n                           <li>\n                              <a href=\"#\">\n                                 <span className=\"align-middle mr-2\">\n                                    <i className=\"fa fa-chevron-right\" />\n                                 </span>\n                                 Consectetur adipiscing elit\n                              </a>\n                           </li>\n                           <li>\n                              <a href=\"#\">\n                                 <span className=\"align-middle mr-2\">\n                                    <i className=\"fa fa-chevron-right\" />\n                                 </span>\n                                 Integer molestie lorem at massa\n                              </a>\n                           </li>\n                        </ul>\n                     </Col>\n                  </Row>\n               </Card.Body>\n            </Card>\n         </Col>\n      </Row>\n   </>\n);\n\nexport default UiTypography;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/ApexChart.js",["911","912","913"],"import React from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nconst generateDayWiseTimeSeries = function (baseval, count, yrange) {\n   let i = 0;\n   const series = [];\n   while (i < count) {\n      const x = baseval;\n      const y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n      series.push([x, y]);\n      baseval += 86400000;\n      i++;\n   }\n   return series;\n};\n\nclass ApexChart extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: 'South',\n               data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\n                  min: 10,\n                  max: 60,\n               }),\n            },\n            {\n               name: 'North',\n               data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\n                  min: 10,\n                  max: 20,\n               }),\n            },\n            {\n               name: 'Central',\n               data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\n                  min: 10,\n                  max: 15,\n               }),\n            },\n         ],\n         options: {\n            chart: {\n               type: 'area',\n               height: 350,\n               stacked: true,\n               events: {\n                  selection(chart, e) {\n                     console.log(new Date(e.xaxis.min));\n                  },\n               },\n               toolbar: {\n                  show: false,\n               },\n            },\n            colors: ['#008FFB', '#00E396', '#CED4DC'],\n            dataLabels: {\n               enabled: false,\n            },\n            stroke: {\n               show: true,\n               curve: 'smooth',\n            },\n            fill: {\n               type: 'gradient',\n               gradient: {\n                  opacityFrom: 0.6,\n                  opacityTo: 0.8,\n               },\n            },\n            zoom: {\n               enabled: false,\n            },\n            legend: {\n               show: false,\n               position: 'top',\n               horizontalAlign: 'left',\n            },\n            xaxis: {\n               type: 'datetime',\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={350} />\n         </div>\n      );\n   }\n}\n\nexport default ApexChart;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/BootstrapTable.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/AppProfile/PostDetails.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Calendar/Calendar.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/AppProfile/AppProfile.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/Checkout/Checkout.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductGrid.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductOrder.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductGrid/ProductDetail.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/Invoice/Invoice.js",["914"],"import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PageTitle from '../../../../layouts/PageTitle';\n\nimport Logo from '../../../../../images/logo.png';\nimport LogoText from '../../../../../images/logo-text.png';\nimport Qr from '../../../../../images/qr.png';\n\nconst Invoice = () => (\n   <>\n      <PageTitle motherMenu=\"Layout\" activeMenu=\"Blank\" />\n\n      <div className=\"row\">\n         <div className=\"col-lg-12\">\n            <div className=\"card mt-3\">\n               <div className=\"card-header\">\n                  {' '}\n                  Invoice <strong>01/01/01/2018</strong>{' '}\n                  <span className=\"float-right\">\n                     <strong>Status:</strong> Pending\n                  </span>{' '}\n               </div>\n               <div className=\"card-body\">\n                  <div className=\"row\">\n                     <div className=\"col-xl-3 col-sm-6 mb-4\">\n                        <h6>From:</h6>\n                        <div>\n                           {' '}\n                           <strong>Webz Poland</strong>{' '}\n                        </div>\n                        <div>Madalinskiego 8</div>\n                        <div>71-101 Szczecin, Poland</div>\n                        <div>Email: info@webz.com.pl</div>\n                        <div>Phone: +48 444 666 3333</div>\n                     </div>\n                     <div className=\"col-xl-3 col-sm-6 mb-4\">\n                        <h6>To:</h6>\n                        <div>\n                           {' '}\n                           <strong>Bob Mart</strong>{' '}\n                        </div>\n                        <div>Attn: Daniel Marek</div>\n                        <div>43-190 Mikolow, Poland</div>\n                        <div>Email: marek@daniel.com</div>\n                        <div>Phone: +48 123 456 789</div>\n                     </div>\n                     <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-4 d-flex justify-content-lg-end justify-content-md-center justify-content-xs-start\">\n                        <div className=\"row align-items-center\">\n                           <div className=\"col-sm-9\">\n                              <div className=\"brand-logo mb-3\">\n                                 <img className=\"logo-abbr mr-2\" src={Logo} alt=\"\" />\n                                 <img claclassNamess=\"logo-compact\" src={LogoText} alt=\"\" />\n                              </div>\n                              <span>\n                                 Please send exact amount: <strong className=\"d-block\">0.15050000 BTC</strong>\n                                 <strong>1DonateWffyhwAjskoEwXt83pHZxhLTr8H</strong>\n                              </span>\n                              <br />\n                              <small className=\"text-muted\">Current exchange rate 1BTC = $6590 USD</small>\n                           </div>\n                           <div className=\"col-sm-3 mt-3\">\n                              {' '}\n                              <img src={Qr} className=\"img-fluid width110\" />{' '}\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"table-responsive\">\n                     <table className=\"table table-striped\">\n                        <thead>\n                           <tr>\n                              <th className=\"center\">#</th>\n                              <th>Item</th>\n                              <th>Description</th>\n                              <th className=\"right\">Unit Cost</th>\n                              <th className=\"center\">Qty</th>\n                              <th className=\"right\">Total</th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           <tr>\n                              <td className=\"center\">1</td>\n                              <td className=\"left strong\">Origin License</td>\n                              <td className=\"left\">Extended License</td>\n                              <td className=\"right\">$999,00</td>\n                              <td className=\"center\">1</td>\n                              <td className=\"right\">$999,00</td>\n                           </tr>\n                           <tr>\n                              <td className=\"center\">2</td>\n                              <td className=\"left\">Custom Services</td>\n                              <td className=\"left\">Instalation and Customization (cost per hour)</td>\n                              <td className=\"right\">$150,00</td>\n                              <td className=\"center\">20</td>\n                              <td className=\"right\">$3.000,00</td>\n                           </tr>\n                           <tr>\n                              <td className=\"center\">3</td>\n                              <td className=\"left\">Hosting</td>\n                              <td className=\"left\">1 year subcription</td>\n                              <td className=\"right\">$499,00</td>\n                              <td className=\"center\">1</td>\n                              <td className=\"right\">$499,00</td>\n                           </tr>\n                           <tr>\n                              <td className=\"center\">4</td>\n                              <td className=\"left\">Platinum Support</td>\n                              <td className=\"left\">1 year subcription 24/7</td>\n                              <td className=\"right\">$3.999,00</td>\n                              <td className=\"center\">1</td>\n                              <td className=\"right\">$3.999,00</td>\n                           </tr>\n                        </tbody>\n                     </table>\n                  </div>\n                  <div className=\"row\">\n                     <div className=\"col-lg-4 col-sm-5\"> </div>\n                     <div className=\"col-lg-4 col-sm-5 ml-auto\">\n                        <table className=\"table table-clear\">\n                           <tbody>\n                              <tr>\n                                 <td className=\"left\">\n                                    <strong>Subtotal</strong>\n                                 </td>\n                                 <td className=\"right\">$8.497,00</td>\n                              </tr>\n                              <tr>\n                                 <td className=\"left\">\n                                    <strong>Discount (20%)</strong>\n                                 </td>\n                                 <td className=\"right\">$1,699,40</td>\n                              </tr>\n                              <tr>\n                                 <td className=\"left\">\n                                    <strong>VAT (10%)</strong>\n                                 </td>\n                                 <td className=\"right\">$679,76</td>\n                              </tr>\n                              <tr>\n                                 <td className=\"left\">\n                                    <strong>Total</strong>\n                                 </td>\n                                 <td className=\"right\">\n                                    <strong>$7.477,36</strong>\n                                    <br />\n                                    <strong>0.15050000 BTC</strong>\n                                 </td>\n                              </tr>\n                           </tbody>\n                        </table>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   </>\n);\n\nexport default Invoice;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductList/ProductList.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/Customers/Customers.js",["915","916","917","918","919","920","921","922","923","924","925","926","927","928","929"],"import React, { Fragment } from 'react';\nimport { Dropdown, Table } from 'react-bootstrap';\nimport PageTitle from '../../../../layouts/PageTitle';\n\n/// images\nimport avartar5 from '../../../../../images/avatar/5.png';\nimport avartar1 from '../../../../../images/avatar/1.png';\n\nconst Customers = () => {\n   const drop = (\n      <Dropdown>\n         <Dropdown.Toggle variant=\"\" className=\"table-dropdown icon-false\">\n            <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n               <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n               </g>\n            </svg>\n         </Dropdown.Toggle>\n         <Dropdown.Menu>\n            <Dropdown.Item href=\"#\">Edit</Dropdown.Item>\n\n            <Dropdown.Item href=\"#\" className=\"text-danger\">\n               Delete\n            </Dropdown.Item>\n         </Dropdown.Menu>\n      </Dropdown>\n   );\n\n   const chack = (i) => (\n      <div className={`custom-control custom-checkbox ml-2   `}>\n         <input type=\"checkbox\" className=\"custom-control-input \" id={`checkAll${i}`} required=\"\" />\n         <label className=\"custom-control-label\" htmlFor={`checkAll${i}`} />\n      </div>\n   );\n\n   return (\n      <>\n         <PageTitle activeMenu=\"Customers\" motherMenu=\"Shop\" />\n         <div className=\"row\">\n            <div className=\"col-lg-12\">\n               <div className=\"card\">\n                  <div className=\"card-body\">\n                     <div className=\"table-responsive\">\n                        <table className=\"table mb-0 table-striped\">\n                           <thead>\n                              <tr>\n                                 <th className=\"\">\n                                    <div className=\"custom-control custom-checkbox mx-2\">\n                                       <input type=\"checkbox\" className=\"custom-control-input\" id=\"checkAll\" />\n                                       <label className=\"custom-control-label\" htmlFor=\"checkAll\" />\n                                    </div>\n                                 </th>\n                                 <th>Name</th>\n                                 <th>Email</th>\n                                 <th>Phone</th>\n                                 <th className=\"pl-5 width200\">Billing Address</th>\n                                 <th>Joined</th>\n                                 <th />\n                              </tr>\n                           </thead>\n                           <tbody id=\"customers\">\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td>{chack(1)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <div className=\"\">\n                                                <img\n                                                   className=\"rounded-circle img-fluid\"\n                                                   src={avartar5}\n                                                   width=\"30\"\n                                                   alt=\"\"\n                                                />\n                                             </div>\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Ricky Antony</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:ricky@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:2012001851\">(201) 200-1851</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">2392 Main Avenue, Penasauka</td>\n                                 <td className=\"py-2\">30/03/2018</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(2)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <img\n                                                className=\"rounded-circle img-fluid\"\n                                                src={avartar1}\n                                                alt=\"\"\n                                                width=\"30\"\n                                             />\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Emma Watson</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:emma@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:2122288403\">(212) 228-8403</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">2289 5th Avenue, New York</td>\n                                 <td className=\"py-2\">11/07/2017</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(3)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <div className=\"\">\n                                                <img\n                                                   className=\"rounded-circle img-fluid\"\n                                                   src={avartar5}\n                                                   width=\"30\"\n                                                   alt=\"\"\n                                                />\n                                             </div>\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Rowen Atkinson</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:rown@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:2012001851\">(201) 200-1851</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">112 Bostwick Avenue, Jersey City</td>\n                                 <td className=\"py-2\">05/04/2016</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(4)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <img\n                                                className=\"rounded-circle img-fluid\"\n                                                src={avartar1}\n                                                alt=\"\"\n                                                width=\"30\"\n                                             />\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Antony Hopkins</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:antony@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:9013243127\">(901) 324-3127</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">3448 Ile De France St #242, </td>\n                                 <td className=\"py-2\">05/04/2018</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(5)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <img\n                                                className=\"rounded-circle img-fluid\"\n                                                src={avartar1}\n                                                alt=\"\"\n                                                width=\"30\"\n                                             />\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Jennifer Schramm</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:jennifer@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:8283829631\">(828) 382-9631</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">659 Hannah Street, Charlotte</td>\n                                 <td className=\"py-2\">17/03/2016</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\" />\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <div className=\"\">\n                                                <img\n                                                   className=\"rounded-circle img-fluid\"\n                                                   src={avartar5}\n                                                   width=\"30\"\n                                                   alt=\"\"\n                                                />\n                                             </div>\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Raymond Mims</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:raymond@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:5624685646\">(562) 468-5646</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">2298 Locust Court, Artesia</td>\n                                 <td className=\"py-2\">12/07/2014</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(6)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <img\n                                                className=\"rounded-circle img-fluid\"\n                                                src={avartar1}\n                                                alt=\"\"\n                                                width=\"30\"\n                                             />\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Michael Jenkins</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:jenkins@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:3026138829\">(302) 613-8829</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">4678 Maud Street, Philadelphia</td>\n                                 <td className=\"py-2\">15/06/2014</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\" />\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <img\n                                                className=\"rounded-circle img-fluid\"\n                                                src={avartar1}\n                                                alt=\"\"\n                                                width=\"30\"\n                                             />\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Kristine Cadena</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:cadena@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:3172737814\">(317) 273-7814</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">3412 Crestview Manor, Indianapolis</td>\n                                 <td className=\"py-2\">15/04/2015</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(7)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <div className=\"\">\n                                                <img\n                                                   className=\"rounded-circle img-fluid\"\n                                                   src={avartar5}\n                                                   width=\"30\"\n                                                   alt=\"\"\n                                                />\n                                             </div>\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Ricky Antony</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:ricky@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:2012001851\">(201) 200-1851</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">2392 Main Avenue, Penasauka</td>\n                                 <td className=\"py-2\">30/03/2018</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(8)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <img\n                                                className=\"rounded-circle img-fluid\"\n                                                src={avartar1}\n                                                alt=\"\"\n                                                width=\"30\"\n                                             />\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Emma Watson</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:emma@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:2122288403\">(212) 228-8403</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">2289 5th Avenue, New York</td>\n                                 <td className=\"py-2\">11/07/2017</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(9)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <div className=\"\">\n                                                <img\n                                                   className=\"rounded-circle img-fluid\"\n                                                   src={avartar5}\n                                                   width=\"30\"\n                                                   alt=\"\"\n                                                />\n                                             </div>\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Rowen Atkinson</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:rown@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:2012001851\">(201) 200-1851</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">112 Bostwick Avenue, Jersey City</td>\n                                 <td className=\"py-2\">05/04/2016</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(10)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <img\n                                                className=\"rounded-circle img-fluid\"\n                                                src={avartar1}\n                                                alt=\"\"\n                                                width=\"30\"\n                                             />\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Antony Hopkins</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:antony@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:9013243127\">(901) 324-3127</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">3448 Ile De France St #242</td>\n                                 <td className=\"py-2\">05/04/2018</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(11)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <img\n                                                className=\"rounded-circle img-fluid\"\n                                                src={avartar1}\n                                                alt=\"\"\n                                                width=\"30\"\n                                             />\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Jennifer Schramm</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:jennifer@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:8283829631\">(828) 382-9631</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">659 Hannah Street, Charlotte</td>\n                                 <td className=\"py-2\">17/03/2016</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                              <tr className=\"btn-reveal-trigger\">\n                                 <td className=\"py-2\">{chack(12)}</td>\n                                 <td className=\"py-3\">\n                                    <a href=\"#\">\n                                       <div className=\"media d-flex align-items-center\">\n                                          <div className=\"avatar avatar-xl mr-2\">\n                                             <div className=\"\">\n                                                <img\n                                                   className=\"rounded-circle img-fluid\"\n                                                   src={avartar5}\n                                                   width=\"30\"\n                                                   alt=\"\"\n                                                />\n                                             </div>\n                                          </div>\n                                          <div className=\"media-body\">\n                                             <h5 className=\"mb-0 fs--1\">Raymond Mims</h5>\n                                          </div>\n                                       </div>\n                                    </a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    <a href=\"mailto:raymond@example.com\">info@example.com</a>\n                                 </td>\n                                 <td className=\"py-2\">\n                                    {' '}\n                                    <a href=\"tel:5624685646\">(562) 468-5646</a>\n                                 </td>\n                                 <td className=\"py-2 pl-5 wspace-no\">2298 Locust Court, Artesia</td>\n                                 <td className=\"py-2\">12/07/2014</td>\n                                 <td className=\"py-2 text-right\">{drop}</td>\n                              </tr>\n                           </tbody>\n                        </table>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </>\n   );\n};\n\nexport default Customers;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Email/Compose/Compose.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Email/Inbox/Inbox.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Email/Read/Read.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Wizard/Wizard.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Summernote/SummerNote.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Nestable/Nestable.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Element/Element.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/Pickers.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/jQueryValidation/jQueryValidation.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/MainNouiSlider.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Jqv Map/JqvMap.js",["930"],"import React from 'react';\n\nimport Usa from '@svg-maps/usa';\nimport World from '@svg-maps/world';\nimport { SVGMap } from 'react-svg-map';\nimport 'react-svg-map/lib/index.css';\nimport loadable from '@loadable/component';\nimport PageTitle from '../../../layouts/PageTitle';\n\nconst JqvMap = () => (\n   <div className=\"h-80\">\n      <PageTitle headingPara=\"jqvmap\" activeMenu=\"jqvmap\" motherMenu=\"Map\" />\n\n      <div className=\"row\">\n         <div className=\"col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-header\">\n                  <h4 className=\"card-title\">World Map</h4>\n               </div>\n               <div className=\"card-body\">\n                  <div id=\"world-map\">\n                     <SVGMap map={World} />\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"col-lg-6\">\n            <div className=\"card\">\n               <div className=\"card-header\">\n                  <h4 className=\"card-title\">USA</h4>\n               </div>\n               <div className=\"card-body\">\n                  <div id=\"usa\">\n                     <SVGMap map={Usa} />\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   </div>\n);\n\nexport default JqvMap;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Select2/Select2.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Toastr/Toastr.js",["931"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PageTitle from '../../../layouts/PageTitle';\n\nconst Toastr = () => {\n   const notifyTopRight = () => {\n      toast.success('✅ Top Right !', {\n         position: 'top-right',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n      });\n   };\n\n   const notifyBottomRight = () => {\n      toast.warn('✅ Bottom Right !', {\n         position: 'bottom-right',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n      });\n   };\n\n   const notifyBottomLeft = () => {\n      toast.success('✅ Bottom Left !', {\n         position: 'bottom-left',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyTopLeft = () => {\n      toast.warn('✅ Top Left !', {\n         position: 'bottom-left',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyTopFullWidth = () => {\n      toast.warn('✅ Top Full Width !', {\n         position: 'top-center',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyBottomFullWidth = () => {\n      toast.warn('✅ Bottom Full Width !', {\n         position: 'bottom-center',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyTopCenter = () => {\n      toast.warn('✅ Top Center !', {\n         position: 'top-center',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyBottomCenter = () => {\n      toast.warn('✅ Bottom Center !', {\n         position: 'bottom-center',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n   const notifyInfo = () => {\n      toast.info('❓ Info Notify !', {\n         position: 'top-right',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n   const notifyWarning = () => {\n      toast.warn('❗ Warning Notify !', {\n         position: 'top-right',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n\n   const notifyError = () => {\n      toast.error('❌ Error Notify !', {\n         position: 'top-right',\n         autoClose: 5000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n      });\n   };\n   return (\n      <div className=\"h-80\">\n         <PageTitle activeMenu=\"Toastr\" motherMenu=\"Advanced\" />\n\n         <div className=\"row\">\n            <div className=\"col-12\">\n               <div className=\"card\">\n                  <div className=\"card-header\">\n                     <h4 className=\"card-title\">Toastr</h4>\n                  </div>\n                  <div className=\"card-body\">\n                     <button\n                        onClick={notifyTopRight}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2 mr-2\"\n                        id=\"toastr-success-top-right\"\n                     >\n                        <ToastContainer\n                           position=\"top-right\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Top Right\n                     </button>\n                     <button\n                        onClick={notifyBottomRight}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-bottom-right\"\n                     >\n                        <ToastContainer\n                           position=\"bottom-right\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Bottom Right\n                     </button>\n                     <button\n                        onClick={notifyBottomLeft}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-bottom-left\"\n                     >\n                        <ToastContainer\n                           position=\"bottom-left\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Bottom Left\n                     </button>\n                     <button\n                        onClick={notifyTopLeft}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-top-left\"\n                     >\n                        <ToastContainer\n                           position=\"top-left\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Top Left\n                     </button>\n                     <button\n                        onClick={notifyTopFullWidth}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-top-full-width\"\n                     >\n                        <ToastContainer\n                           position=\"top-center\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Top Full Width\n                     </button>\n                     <button\n                        onClick={notifyBottomFullWidth}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-bottom-full-width\"\n                     >\n                        <ToastContainer\n                           position=\"bottom-center\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Bottom Full Width\n                     </button>\n                     <button\n                        onClick={notifyTopCenter}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-top-center\"\n                     >\n                        <ToastContainer\n                           position=\"top-center\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Top Center\n                     </button>\n                     <button\n                        onClick={notifyBottomCenter}\n                        type=\"button\"\n                        className=\"btn btn-dark mb-2  mr-2\"\n                        id=\"toastr-success-bottom-center\"\n                     >\n                        <ToastContainer\n                           position=\"bottom-center\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Bottom Center\n                     </button>\n                     <button\n                        onClick={notifyInfo}\n                        type=\"button\"\n                        className=\"btn btn-info mb-2  mr-2\"\n                        id=\"toastr-info-top-right\"\n                     >\n                        <ToastContainer\n                           position=\"top-right\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Info\n                     </button>\n                     <button\n                        onClick={notifyWarning}\n                        type=\"button\"\n                        className=\"btn btn-warning mb-2  mr-2\"\n                        id=\"toastr-warning-top-right\"\n                     >\n                        <ToastContainer\n                           position=\"top-right\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Warning\n                     </button>\n                     <button\n                        onClick={notifyError}\n                        type=\"button\"\n                        className=\"btn btn-danger mb-2  mr-2\"\n                        id=\"toastr-danger-top-right\"\n                     >\n                        <ToastContainer\n                           position=\"top-right\"\n                           autoClose={5000}\n                           hideProgressBar={false}\n                           newestOnTop\n                           closeOnClick\n                           rtl={false}\n                           pauseOnFocusLoss\n                           draggable\n                           pauseOnHover\n                        />\n                        Error\n                     </button>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Toastr;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Sweet Alert/SweetAlert.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/customers/CustomerActions.js",["932","933","934"],"import useUrlState from '@ahooksjs/use-url-state';\nimport { useFormik } from 'formik';\nimport Button from 'jsx/components/Button';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, patch, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ButtonGroup, Card } from 'react-bootstrap';\nimport { AiFillCaretLeft, AiFillSave } from 'react-icons/ai';\nimport { Else, If, Then, When } from 'react-if';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst CustomerActions = () => {\n   const history = useHistory();\n   const params = useParams();\n   const [customer, setCustomer] = useState(null);\n   const [isError, setIsError] = useState(false);\n\n   const [urlState, setUrlState] = useUrlState({});\n\n   const alert = useAlert();\n   const isEditing = useMemo(() => urlState?.type === 'edit', [urlState.type]);\n   const isViewCustomer = useMemo(() => urlState?.type === 'view', [urlState.type]);\n   const isAddCustomer = useMemo(() => params?.id === 'add', [params.id]);\n\n   const query = useQuery(['customer', params.id], () => get(`/customers/id/${params.id}`), {\n      enabled: !isAddCustomer,\n      onError: (err) => {\n         setIsError(true);\n         alert.setErrorAlert({\n            message: 'Invalid URL!',\n            err: { message: ['The page will redirect to manage customers.'] },\n            callback: () => history.push('/customers'),\n            duration: 3000,\n         });\n      },\n   });\n   const patchMutation = useMutation((payload) => patch(`/customers/id/${params.id}`, payload), {\n      onError: (err) => {\n         alert.setErrorAlert({\n            message: 'Unable to edit customer.',\n            err,\n         });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/customers', payload), {\n      onSuccess: () => {\n         history.push('/customers');\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add customer', err });\n      },\n   });\n\n   const mutation = useMemo(() => (isEditing ? patchMutation : postMutation), [isEditing, patchMutation, postMutation]);\n\n   if (!isEditing && !isViewCustomer && !isAddCustomer) {\n      history.push('/customers');\n   }\n\n   const formik = useFormik({\n      initialValues: { name: isEditing ? customer?.name : '', phone: isEditing ? customer?.phone : '' },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         mutation.mutate(values);\n      },\n   });\n\n   useEffect(() => {\n      if (isEditing && query.data) {\n         formik.setFieldValue('name', query.data?.customer?.name ?? '');\n         formik.setFieldValue('phone', query.data?.customer?.phone ?? '');\n      }\n   }, [isEditing, query.data]);\n\n   return (\n      <>\n         <PageTItle activeMenu=\"Customers\" motherMenu=\"Manage\" />\n         {alert.getAlert()}\n         <Card>\n            <When condition={patchMutation.isLoading || postMutation.isLoading || query.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <If condition={isAddCustomer || isEditing}>\n               <Then>\n                  <form onSubmit={formik.handleSubmit}>\n                     <Card.Header>\n                        <Card.Title>{isEditing ? 'Edit Customer' : 'Add New Customer'}</Card.Title>\n                     </Card.Header>\n                     <Card.Body>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Name</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"name\"\n                                 disabled={isError}\n                                 value={formik.values.name}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Phone</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"phone\"\n                                 disabled={isError}\n                                 value={formik.values.phone}\n                              />\n                           </div>\n                        </div>\n                     </Card.Body>\n                     <Card.Footer>\n                        <div className=\"row\">\n                           <div className=\"col-xl-12 tw-justify-center\">\n                              <ButtonGroup>\n                                 <Button\n                                    icon={AiFillCaretLeft}\n                                    variant=\"warning light\"\n                                    onClick={() => history.replace('/customers')}\n                                    loading={mutation.isLoading}\n                                 >\n                                    Back\n                                 </Button>\n                                 <Button\n                                    icon={AiFillSave}\n                                    variant=\"primary\"\n                                    type=\"submit\"\n                                    loading={mutation.isLoading}\n                                    disabled={isError}\n                                 >\n                                    Save\n                                 </Button>\n                              </ButtonGroup>\n                           </div>\n                        </div>\n                     </Card.Footer>\n                  </form>\n               </Then>\n               <Else>\n                  <Card.Header>\n                     <Card.Title>View Customer</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Name</label>\n                           <h4>{query.data?.customer?.name ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Phone</label>\n                           <h4>{query.data?.customer?.phone ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                  </Card.Body>\n                  <Card.Footer>\n                     <div className=\"row\">\n                        <div className=\"col-xl-12 tw-justify-center\">\n                           <Button\n                              icon={AiFillCaretLeft}\n                              variant=\"warning light\"\n                              onClick={() => history.replace('/customers')}\n                              loading={mutation.isLoading}\n                           >\n                              Back\n                           </Button>\n                        </div>\n                     </div>\n                  </Card.Footer>\n               </Else>\n            </If>\n         </Card>\n      </>\n   );\n};\n\nexport default CustomerActions;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/index.js",["935"],"import React, { Fragment, useState } from 'react';\nimport SideBar from './SideBar';\nimport NavHader from './NavHader';\nimport Header from './Header';\nimport ChatBox from '../ChatBox';\n\nconst JobieNav = ({ title }) => {\n   const [toggle, setToggle] = useState('');\n   const onClick = (name) => setToggle(toggle === name ? '' : name);\n   return (\n      <>\n         <NavHader />\n         <SideBar />\n         <Header\n            onNote={() => onClick('chatbox')}\n            onNotification={() => onClick('notification')}\n            onProfile={() => onClick('profile')}\n            toggle={toggle}\n            title={title}\n            onBox={() => onClick('box')}\n         />\n         {/* <ChatBox onClick={() => onClick('chatbox')} toggle={toggle} /> */}\n      </>\n   );\n};\n\nexport default JobieNav;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/employees/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/products/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/suppliers/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/index.js",["936"],"import React, { Suspense } from 'react';\nimport loadable from '@loadable/component';\n// import { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nimport pMinDelay from 'p-min-delay';\n\nimport PageTitle from '../../../layouts/PageTitle';\n\nconst ApexBar2 = loadable(() => pMinDelay(import('./Bar2'), 500));\nconst ApexBar3 = loadable(() => pMinDelay(import('./Bar3'), 500));\nconst ApexRedialBar = loadable(() => pMinDelay(import('./RadialBar'), 500));\nconst ApexLine = loadable(() => pMinDelay(import('./Line5'), 500));\nconst ApexLine3 = loadable(() => pMinDelay(import('./Line3'), 500));\nconst ApexLine4 = loadable(() => pMinDelay(import('./Line4'), 500));\nconst ApexPie = loadable(() => pMinDelay(import('./Pie'), 500));\n\nfunction ApexChart() {\n   return (\n      <div className=\"h-80\">\n         <PageTitle motherMenu=\"Charts\" activeMenu=\"ApexChart\" />\n         <Row>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bar Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexBar2 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bar Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexBar3 />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexLine />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexLine3 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexLine4 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Pie</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexPie />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Redial Bar</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ApexRedialBar />\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </div>\n   );\n}\n\nexport default ApexChart;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/customers/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Sparkline/index.js",["937"],"import React, { Component } from 'react';\n\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Sparklines, SparklinesLine, SparklinesCurve, SparklinesBars, SparklinesSpots } from 'react-sparklines';\n\nimport PageTitle from '../../../layouts/PageTitle';\n\nimport { SparkNagetivePositive } from './NagetivePositive';\n\nconst sampleData = [\n   64, 24, 40, 76, 19, 0, 2, 46, 65, 12, 10, 6, 15, 57, 35, 81, 86, 12, 12, 21, 53, 44, 2, 1, 58, 9, 61, 64, 42, 92, 58,\n   9, 34, 47, 89, 52, 3, 69, 33, 2, 60, 71, 71, 22, 65, 70, 31, 81, 36, 89,\n];\n\nfunction ChartSparkline() {\n   return (\n      <>\n         <PageTitle motherMenu=\"Charts\" activeMenu=\"Sparkline\" />\n         <Row>\n            <Col xl={3}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Simple</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={3}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Simple Curve</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesCurve />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={3}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Customizable</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine color=\"#f00\" />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={3}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Spots</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine style={{ fill: 'none' }} />\n                        <SparklinesSpots />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={3}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Spots</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine color=\"#56b45d\" />\n                        <SparklinesSpots style={{ fill: '#56b45d' }} />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={3}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Spots</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData} margin={6}>\n                        <SparklinesLine\n                           style={{\n                              strokeWidth: 3,\n                              stroke: '#336aff',\n                              fill: 'none',\n                           }}\n                        />\n                        <SparklinesSpots\n                           size={4}\n                           style={{\n                              stroke: '#336aff',\n                              strokeWidth: 3,\n                              fill: 'white',\n                           }}\n                        />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={3}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bars</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesBars style={{ fill: '#41c3f9' }} />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={3}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Real world examples</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Sparklines data={sampleData}>\n                        <SparklinesLine\n                           style={{\n                              strokeWidth: 3,\n                              stroke: '#336aff',\n                              fill: 'none',\n                           }}\n                        />\n                     </Sparklines>\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Nagetive Positive</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <SparkNagetivePositive />\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </>\n   );\n}\n\nexport default ChartSparkline;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/index.js",["938"],"import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport ChartDoughnut from './donught';\nimport ChartPie from './pie';\n\nimport PageTitle from '../../../layouts/PageTitle';\nimport BarChart1 from './bar1';\nimport BarChart5 from './bar5';\nimport BarChart6 from './bar6';\nimport LineChart1 from './line1';\nimport DualLine from './dualLine';\nimport BasicArea from './basicArea';\nimport GradientArea from './gradinetArea';\nimport DualArea from './dualArea';\nimport Radar from './radar';\nimport PolarChart from './polar';\nimport DualLine2 from './dualLine2';\n\nfunction ChartChartjs() {\n   return (\n      <>\n         <PageTitle motherMenu=\"Charts\" activeMenu=\"ChartJs\" />\n         <Row>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bar chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <BarChart1 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bar chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <BarChart5 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bar chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <BarChart6 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <LineChart1 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Dual Line Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <DualLine />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Dual Line Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <DualLine2 />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Basic Area Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <BasicArea />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Gradinet Area Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <GradientArea />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Dual Area Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <DualArea />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Radar Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Radar />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Pie</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ChartPie />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Doughnut</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <ChartDoughnut />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col lg={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Polar Chart</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <PolarChart />\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </>\n   );\n}\n\nexport default ChartChartjs;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/rechart/index.js",["939"],"import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nimport PageTitle from '../../../layouts/PageTitle';\n\nimport BarChartNoPadding from './BarChartNoPadding';\nimport PositiveNagative from './PositiveNagative';\n\nfunction RechartJs() {\n   return (\n      <>\n         <PageTitle motherMenu=\"Charts\" activeMenu=\"ReChartJs\" />\n         <Row className=\"h-80\">\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <BarChartNoPadding />\n                  </Card.Body>\n               </Card>\n            </Col>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <PositiveNagative />\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </>\n   );\n}\n\nexport default RechartJs;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/Ext.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/realtime.js",["940"],"import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-plugin-streaming';\n\nconst createReactClass = require('create-react-class');\n\nconst data = {\n   datasets: [\n      {\n         label: 'My First dataset',\n         pointBackgroundColor: '#fff',\n         borderColor: '#435EE0',\n         backgroundColor: '#435EE0',\n         lineTension: 0,\n         data: [],\n         pointBorderWidth: 0,\n         pointRadius: 0,\n      },\n   ],\n};\n\nconst options = {\n   tooltips: {\n      enabled: false,\n   },\n   legend: {\n      display: false,\n   },\n   scales: {\n      yAxes: [\n         {\n            display: false,\n         },\n      ],\n      xAxes: [\n         {\n            display: false,\n            type: 'realtime',\n            realtime: {\n               onRefresh() {\n                  data.datasets[0].data.push({\n                     x: Date.now(),\n                     y: Math.random() * 100,\n                  });\n               },\n               delay: 2000,\n            },\n         },\n      ],\n   },\n   title: {\n      display: false,\n   },\n};\n\nexport default class LineExample extends React.Component {\n   render() {\n      return (\n         <div>\n            <Line data={data} options={options} height={100} />\n         </div>\n      );\n   }\n}\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/PageTitle.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Select2/CustomGroup.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Select2/MultiSelect.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Select2/Disabling.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/SlideDragable.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/Nonlinearslider.js",["941","942"],"import React from 'react';\nimport Nouislider from 'nouislider-react';\n\nconst COLORS = ['red', 'green', 'blue'];\nconst colors = [0, 0, 0];\n\nclass NonlinerSlider extends React.Component {\n   constructor() {\n      super();\n      this.state = {\n         textValue: null,\n         percent: null,\n      };\n   }\n\n   onSlide = (render, handle, value, un, percent) => {\n      this.setState({\n         textValue: value[0].toFixed(2),\n         percent: percent[0].toFixed(2),\n      });\n   };\n\n   render() {\n      const { textValue, percent } = this.state;\n      return (\n         <div className=\"slider\" id=\"NonlinerSlider\">\n            <Nouislider\n               connect\n               start={[20, 80]}\n               behaviour=\"tap\"\n               range={{\n                  min: [0],\n                  max: [100],\n               }}\n               onSlide={this.onSlide}\n            />\n            {textValue && percent ? (\n               <div>\n                  {textValue} {percent}\n               </div>\n            ) : (\n               <div>\n                  {20.0} {80.0}\n               </div>\n            )}\n         </div>\n      );\n   }\n}\n\nexport default NonlinerSlider;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/SnappingToValues.js",["943","944","945","946","947","948"],"import React from 'react';\nimport Nouislider from 'nouislider-react';\n\nconst COLORS = ['red', 'green', 'blue'];\nconst colors = [0, 0, 0];\n\nclass SnappingTOValues extends React.Component {\n   onSkipSlide = (render, handle, value, un, percent) => {\n      this.setState({\n         skippingValue: value[0],\n      });\n   };\n\n   render() {\n      return (\n         <div className=\"slider\" id=\"SnappingTOValues\">\n            <Nouislider\n               start={2000}\n               snap\n               range={{\n                  min: [2000],\n                  '10%': 3000,\n                  '20%': 4000,\n                  '30%': 5000,\n                  '50%': 6000,\n                  '60%': 7000,\n                  '70%': 8000,\n                  '90%': 9000,\n                  max: [10000],\n               }}\n               onSlide={this.onSkipSlide}\n            />\n            {this.state.skippingValue ? <div> {Math.floor(this.state.skippingValue)}.00</div> : <div> 2000.00</div>}\n         </div>\n      );\n   }\n}\n\nexport default SnappingTOValues;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/Toggle.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/ClickablePips.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/Disabling.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Noui Slider/NouiColor.js",["949","950"],"/* eslint-disable prefer-destructuring */\nimport React from 'react';\nimport Nouislider from 'nouislider-react';\n\nconst COLORS = ['red', 'green', 'blue'];\nconst colors = [0, 0, 0];\n\nclass Colorpicker extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         color: 'rgb(127, 127, 127)',\n      };\n   }\n\n   onUpdate = (index) => (render, handle, value, un, percent) => {\n      colors[index] = value[0];\n      this.setState({ color: `rgb(${colors.join(',')})` });\n   };\n\n   render() {\n      const { color } = this.state;\n      return (\n         <div className=\"slider\" id=\"colorpicker\">\n            {COLORS.map((item, index) => (\n               <Nouislider\n                  key={item}\n                  id={item}\n                  start={127}\n                  connect={[true, false]}\n                  orientation=\"vertical\"\n                  range={{\n                     min: 0,\n                     max: 255,\n                  }}\n                  onUpdate={this.onUpdate(index)}\n               />\n            ))}\n            <div id=\"result\" style={{ background: color, color }} />\n         </div>\n      );\n   }\n}\n\nexport default Colorpicker;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/LinearGradientPicker.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/MetarialTime.js",["951"],"import React, { useState } from 'react';\nimport { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nfunction BasicTImePicker(props) {\n   const [selectedDate, handleDateChange] = useState(new Date());\n\n   return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n         <TimePicker autoOk label=\"\" value={selectedDate} onChange={handleDateChange} />\n      </MuiPickersUtilsProvider>\n   );\n}\n\nexport default BasicTImePicker;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Nestable/NTable.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/Color.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Nestable/NTable2.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/MetarialDateAndTime.js",["952"],"import React, { useState } from 'react';\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nfunction BasicDateAndTimePicker(props) {\n   const [selectedDate, handleDateChange] = useState(new Date());\n\n   return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n         <DateTimePicker label=\"\" inputVariant=\"outlined\" value={selectedDate} onChange={handleDateChange} />\n      </MuiPickersUtilsProvider>\n   );\n}\n\nexport default BasicDateAndTimePicker;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Summernote/Rte.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Wizard/StepFour.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Wizard/StepOne.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Wizard/StepThree.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Pickers/MetarialDate.js",["953"],"import React, { useState } from 'react';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nfunction BasicDatePicker(props) {\n   const [selectedDate, handleDateChange] = useState(new Date());\n\n   return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n         <DatePicker\n            autoOk\n            label=\"\"\n            clearable\n            format=\"dd/MM/yyyy\"\n            disableFuture\n            value={selectedDate}\n            onChange={handleDateChange}\n         />\n      </MuiPickersUtilsProvider>\n   );\n}\n\nexport default BasicDatePicker;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Forms/Wizard/StepTwo.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Email/Inbox/InboxMessage.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Email/Compose/DropFile.js",["954","955"],"import React from 'react';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Drop from 'react-dropzone-uploader';\n\nconst DropFile = () => {\n   // specify upload params and url for your files\n   // const getUploadParams = ({ meta }) => {\n   //    return { url: \"https://httpbin.org/post\" };\n   // };\n\n   // called every time a file's `status` changes\n   const handleChangeStatus = ({ meta, file }, status) => {\n      console.log(status, meta, file);\n   };\n\n   // receives array of files that are done uploading when submit button is clicked\n   const handleSubmit = (files) => {\n      console.log(files.map((f) => f.meta));\n   };\n   return (\n      <Drop\n         // getUploadParams={getUploadParams}\n         onChangeStatus={handleChangeStatus}\n         onSubmit={handleSubmit}\n         inputContent=\"Drop files here to upload\"\n         accept=\"image/*,audio/*,video/*\"\n         styles={{\n            dropzone: {\n               minHeight: 200,\n               maxHeight: 250,\n               width: '100%',\n               backgroundColor: '#f2f4fa',\n               border: '1px dashed #DDDFE1',\n               overflow: 'hidden',\n            },\n            inputLabel: {\n               color: '#7e7e7e',\n               fontSize: '18px',\n               fontWeight: 'normal',\n               backgroundColor: '#f2f4fa',\n            },\n         }}\n      />\n   );\n};\n\nexport default DropFile;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductList/SingleProductList.js",["956"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SingleProductList = (props) => {\n   const { previewImg, price, rating, availability, productCode, brand, des } = props.product;\n   return (\n      <div className=\"col-lg-12 col-xl-6\">\n         <div className=\"card\">\n            <div className=\"card-body\">\n               <div className=\"row m-b-30\">\n                  <div className=\"col-md-5 col-xxl-12\">\n                     <div className=\"new-arrival-product mb-4 mb-xxl-4 mb-md-0\">\n                        <div className=\"new-arrivals-img-contnent\">\n                           <img className=\"img-fluid\" src={previewImg} alt=\"\" />\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"col-md-7 col-xxl-12\">\n                     <div className=\"new-arrival-content position-relative\">\n                        <h4>\n                           <Link to=\"/ecom-product-detail\">Solid Women's V-neck Dark T-Shirt</Link>\n                        </h4>\n                        <div className=\"comment-review star-rating\">\n                           {rating}\n                           <span className=\"review-text\">(34 reviews) / </span>\n                           <Link className=\"product-review\" to=\"#\">\n                              Write a review?\n                           </Link>\n                           <p className=\"price\">${price}</p>\n                        </div>\n                        <p>\n                           Availability:{' '}\n                           <span className=\"item\">\n                              {availability} <i className=\"fa fa-check-circle text-success\" />\n                           </span>\n                        </p>\n                        <p>\n                           Product code: <span className=\"item\">{productCode}</span>\n                        </p>\n                        <p>\n                           Brand: <span className=\"item\">{brand}</span>\n                        </p>\n                        <p className=\"text-content\">{des}</p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default SingleProductList;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/index.jsx",["957"],"import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport BarChart from './bar';\nimport LineChart from './line';\nimport AreaChart from './area';\nimport PolarChart from './polar';\nimport DonutChart from './donut';\n\nfunction ChartChartist() {\n   return (\n      <>\n         <Row>\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bar</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <BarChart />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Line</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <LineChart />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Area</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <AreaChart />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Bi Polar</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <PolarChart />\n                  </Card.Body>\n               </Card>\n            </Col>\n\n            <Col xl={6}>\n               <Card>\n                  <Card.Header>\n                     <Card.Title>Donut</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <DonutChart />\n                  </Card.Body>\n               </Card>\n            </Col>\n         </Row>\n      </>\n   );\n}\n\nexport default ChartChartist;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/tableData.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/ProductGrid/Products.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Calendar/EventCalendar.js",["958","959","960","961","962","963"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Col, Row } from 'react-bootstrap';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, { Draggable } from '@fullcalendar/interaction';\nimport Alert from 'sweetalert2';\n\nconst calendarEvents = [\n   {\n      title: 'Atlanta Monster',\n      start: new Date('2019-04-04 00:00'),\n      id: '99999998',\n   },\n   {\n      title: 'My Favorite Murder',\n      start: new Date('2019-04-05 00:00'),\n      id: '99999999',\n   },\n];\n\nconst events = [\n   { title: 'Event 1', id: '1' },\n   { title: 'Event 2', id: '2' },\n   { title: 'Event 3', id: '3' },\n   { title: 'Event 4', id: '4' },\n   { title: 'Event 5', id: '5' },\n];\n\nclass EventCalendar extends Component {\n   /**\n    * adding dragable properties to external events through javascript\n    */\n   componentDidMount() {\n      const draggableEl = document.getElementById('external-events');\n      new Draggable(draggableEl, {\n         itemSelector: '.fc-event',\n         eventData(eventEl) {\n            const title = eventEl.getAttribute('title');\n            const id = eventEl.getAttribute('data');\n            return {\n               title,\n               id,\n            };\n         },\n      });\n   }\n\n   /**\n    * when we click on event we are displaying event details\n    */\n   eventClick = (eventClick) => {\n      Alert.fire({\n         title: eventClick.event.title,\n         html: `<div className=\"table-responsive\">\n      <table className=\"table\">\n      <tbody>\n      <tr >\n      <td>Title</td>\n      <td><strong>${eventClick.event.title}</strong></td>\n      </tr>\n      <tr >\n      <td>Start Time</td>\n      <td><strong>\n      ${eventClick.event.start}\n      </strong></td>\n      </tr>\n      </tbody>\n      </table>\n      </div>`,\n\n         showCancelButton: true,\n         confirmButtonColor: '#d33',\n         cancelButtonColor: '#3085d6',\n         confirmButtonText: 'Remove Event',\n         cancelButtonText: 'Close',\n      }).then((result) => {\n         if (result.value) {\n            eventClick.event.remove(); // It will remove event from the calendar\n            Alert.fire('Deleted!', 'Your Event has been deleted.', 'success');\n         }\n      });\n   };\n\n   render() {\n      return (\n         <div className=\"animated fadeIn demo-app\">\n            <Row>\n               <Col lg={3}>\n                  <div className=\"card\">\n                     <div className=\"card-header border-0 pb-0\">\n                        <h4 className=\"text-black fs-20 mb-0\">Events</h4>\n                     </div>\n                     <div className=\"card-body\" id=\"external-events\">\n                        {this.state.events.map((event) => (\n                           <div\n                              className=\"fc-event mt-0 ml-0 mb-2 btn btn-block btn-primary\"\n                              title={event.title}\n                              data={event.id}\n                              key={event.id}\n                           >\n                              {event.title}\n                           </div>\n                        ))}\n                     </div>\n                  </div>\n               </Col>\n\n               <Col lg={9}>\n                  <div className=\"card\">\n                     <div className=\"card-body\">\n                        <div className=\"demo-app-calendar\" id=\"mycalendartest\">\n                           <FullCalendar\n                              defaultView=\"dayGridMonth\"\n                              header={{\n                                 left: 'prev,next today',\n                                 center: 'title',\n                                 right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek',\n                              }}\n                              rerenderDelay={10}\n                              eventDurationEditable={false}\n                              editable\n                              droppable\n                              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                              ref={this.calendarComponentRef}\n                              weekends={this.state.calendarWeekends}\n                              events={this.state.calendarEvents}\n                              eventDrop={this.drop}\n                              // drop={this.drop}\n                              eventReceive={this.eventReceive}\n                              eventClick={this.eventClick}\n                              // selectable={true}\n                           />\n                        </div>\n                     </div>\n                  </div>\n               </Col>\n            </Row>\n         </div>\n      );\n   }\n}\n\nexport default EventCalendar;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/ChatBox.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/SideBar.js",["964","965","966"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/Header.js",["967","968","969","970","971","972"],"import React from 'react';\n\nimport { Link } from 'react-router-dom';\n/// Scroll\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n/// Image\nimport Avatar from 'react-avatar';\nimport profile from '../../../images/profile/17.jpg';\nimport avatar from '../../../images/avatar/1.jpg';\n\nconst pages = ['app', 'ui', 'uc', 'basic', 'form', 'table', 'page', 'email', 'ecom', 'chart', 'editor'];\n\nconst Header = ({ onNote, toggle, onProfile, onNotification, onBox }) => {\n   const path = window.location.pathname.split('/');\n   const name = path[path.length - 1].split('-');\n   const filterName = name.length >= 3 ? name.filter((n, i) => i > 0) : name;\n\n   let finalName = [];\n\n   for (const page of pages) {\n      if (filterName.includes(page)) {\n         finalName = filterName.filter((f) => f !== page);\n         break;\n      }\n   }\n\n   return (\n      <div className=\"header\">\n         <div className=\"header-content\">\n            <nav className=\"navbar navbar-expand\">\n               <div className=\"collapse navbar-collapse justify-content-between\">\n                  <div className=\"header-left\">\n                     <div className=\"dashboard_bar\" style={{ textTransform: 'capitalize' }}>\n                        {finalName.join(' ').length === 0 ? 'Dashboard' : finalName.join(' ')}\n                     </div>\n                  </div>\n                  <ul className=\"navbar-nav header-right\">\n                     <li className=\"nav-item dropdown header-profile\">\n                        <Link\n                           to=\"#\"\n                           role=\"button\"\n                           data-toggle=\"dropdown\"\n                           className={`nav-item dropdown header-profile ${toggle === 'profile' ? 'show' : ''}`}\n                           onClick={() => onProfile()}\n                        >\n                           {/* <img alt=\"Profile\" src={profile} width={20} /> */}\n                           <Avatar name=\"Foo Bar\" size=\"38\" textSizeRatio={2.9} round />\n                        </Link>\n                        <div className={`dropdown-menu dropdown-menu-right ${toggle === 'profile' ? 'show' : ''}`}>\n                           <Link to=\"/app-profile\" className=\"dropdown-item ai-icon\">\n                              <svg\n                                 id=\"icon-user1\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                                 className=\"text-primary\"\n                                 width={18}\n                                 height={18}\n                                 viewBox=\"0 0 24 24\"\n                                 fill=\"none\"\n                                 stroke=\"currentColor\"\n                                 strokeWidth={2}\n                                 strokeLinecap=\"round\"\n                                 strokeLinejoin=\"round\"\n                              >\n                                 <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                                 <circle cx={12} cy={7} r={4} />\n                              </svg>\n                              <span className=\"ml-2\">Profile </span>\n                           </Link>\n                           <Link to=\"/email-inbox\" className=\"dropdown-item ai-icon\">\n                              <svg\n                                 id=\"icon-inbox\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                                 className=\"text-success\"\n                                 width={18}\n                                 height={18}\n                                 viewBox=\"0 0 24 24\"\n                                 fill=\"none\"\n                                 stroke=\"currentColor\"\n                                 strokeWidth={2}\n                                 strokeLinecap=\"round\"\n                                 strokeLinejoin=\"round\"\n                              >\n                                 <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\n                                 <polyline points=\"22,6 12,13 2,6\" />\n                              </svg>\n                              <span className=\"ml-2\">Inbox </span>\n                           </Link>\n                           <Link to=\"/page-login\" className=\"dropdown-item ai-icon\">\n                              <svg\n                                 id=\"icon-logout\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                                 className=\"text-danger\"\n                                 width={18}\n                                 height={18}\n                                 viewBox=\"0 0 24 24\"\n                                 fill=\"none\"\n                                 stroke=\"currentColor\"\n                                 strokeWidth={2}\n                                 strokeLinecap=\"round\"\n                                 strokeLinejoin=\"round\"\n                              >\n                                 <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\n                                 <polyline points=\"16 17 21 12 16 7\" />\n                                 <line x1={21} y1={12} x2={9} y2={12} />\n                              </svg>\n                              <span className=\"ml-2\">Logout </span>\n                           </Link>\n                        </div>\n                     </li>\n                  </ul>\n               </div>\n            </nav>\n         </div>\n      </div>\n   );\n};\n\nexport default Header;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/layouts/nav/NavHader.js",["973","974"],"import React, { useState } from 'react';\n\n/// React router dom\nimport { Link } from 'react-router-dom';\n\n/// images\nimport logo from '../../../images/logo.png';\nimport logoText from '../../../images/logo-text.png';\n\nconst NavHader = () => {\n   const [toggle, setToggle] = useState(false);\n   return (\n      <div className=\"nav-header\">\n         <Link to=\"/\" className=\"brand-logo\">\n            {/* <img className=\"logo-abbr\" src={logo} alt=\"\" />\n            <img className=\"logo-compact\" src={logoText} alt=\"\" /> */}\n            {/* <img className=\"brand-title\" src={logoText} alt=\"\" /> */}\n            <h1 className=\"brand-title tw-text-2xl tw-text-black tw-font-bold\">Diamond Tiles</h1>\n         </Link>\n\n         <div className=\"nav-control\" role=\"button\" tabIndex=\"0\" onClick={() => setToggle(!toggle)}>\n            <div className={`hamburger ${toggle ? 'is-active' : ''}`}>\n               <span className=\"line\" />\n               <span className=\"line\" />\n               <span className=\"line\" />\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default NavHader;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Pie.js",["975","976","977","978","979","980","981"],"import React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nclass ApexPie extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [44, 55, 40],\n         options: {\n            chart: {\n               // height: 350,\n               type: 'donut',\n               offsetY: -10,\n               // toolbar: {\n               //    show: false,\n               // },\n            },\n            labels: ['Blue Stat', 'Green Stat', 'Green Stat'],\n            colors: ['rgba(30,167,197,1)', 'rgba(110,197,30,1)', 'rgba(235,235,235,1)'],\n            stroke: {\n               width: [0],\n            },\n            legend: {\n               position: 'top',\n               offsetX: -10,\n            },\n            dataLabels: {\n               enabled: false,\n            },\n            responsive: [\n               {\n                  breakpoint: 480,\n                  options: {\n                     chart: {\n                        // width: 100,\n                     },\n                  },\n               },\n            ],\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div\n            id=\"chart\"\n            className=\"text-center m-auto\"\n            style={{ width: this.props.width ? `${this.props.width}%` : '80%' }}\n         >\n            <ReactApexChart\n               options={this.state.options}\n               series={this.state.series}\n               type=\"donut\"\n               height={this.props.height ? this.props.height : 350}\n            />\n         </div>\n      );\n   }\n}\n\nexport default ApexPie;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Line5.js",["982","983","984"],"import React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nclass ApexLine extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: 'Recovered Patient',\n               data: [500, 230, 600, 360, 700, 890, 750, 420, 600, 300, 420, 220],\n            },\n            {\n               name: 'New Patient',\n               data: [250, 380, 200, 300, 200, 520, 380, 770, 250, 520, 300, 900],\n            },\n         ],\n         options: {\n            chart: {\n               height: 350,\n               type: 'area',\n               group: 'social',\n               toolbar: {\n                  show: false,\n               },\n               zoom: {\n                  enabled: false,\n               },\n            },\n            dataLabels: {\n               enabled: false,\n            },\n            stroke: {\n               width: [2, 2],\n               colors: ['#F46B68', '#2BC155'],\n               curve: 'straight',\n            },\n            legend: {\n               tooltipHoverFormatter(val, opts) {\n                  return `${val} - ${opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex]}`;\n               },\n               markers: {\n                  fillColors: ['#F46B68', '#2BC155'],\n                  width: 19,\n                  height: 19,\n                  strokeWidth: 0,\n                  radius: 19,\n               },\n            },\n            markers: {\n               size: 6,\n               border: 0,\n               colors: ['#F46B68', '#2BC155'],\n               hover: {\n                  size: 6,\n               },\n            },\n            xaxis: {\n               categories: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  '10 Jan',\n                  '11 Jan',\n                  '12 Jan',\n               ],\n            },\n            yaxis: {\n               labels: {\n                  style: {\n                     colors: '#3e4954',\n                     fontSize: '14px',\n                     fontFamily: 'Poppins',\n                     fontWeight: 100,\n                  },\n               },\n            },\n            fill: {\n               colors: ['#F46B68', '#2BC155'],\n               type: 'solid',\n               opacity: 0.07,\n            },\n            grid: {\n               borderColor: '#f1f1f1',\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={350} />\n         </div>\n      );\n   }\n}\n\nexport default ApexLine;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Line4.js",["985","986","987"],"import React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nclass ApexLine4 extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: 'Yoga',\n               data: [65, 65, 65, 120, 120, 80, 120, 100, 100, 120, 120, 120],\n            },\n            {\n               name: 'Cycling',\n               data: [50, 100, 35, 35, 0, 0, 80, 20, 40, 40, 40, 40],\n            },\n            {\n               name: 'Running',\n               data: [20, 40, 20, 80, 40, 40, 20, 60, 60, 20, 110, 60],\n            },\n         ],\n         options: {\n            chart: {\n               height: 350,\n               type: 'line',\n               toolbar: {\n                  show: false,\n               },\n            },\n            dataLabels: {\n               enabled: false,\n            },\n\n            stroke: {\n               width: [4, 4, 4],\n               colors: ['#C046D3', '#1EA7C5', '#FF9432'],\n               curve: 'straight',\n            },\n            legend: {\n               show: false,\n            },\n            xaxis: {\n               type: 'text',\n               categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            },\n            colors: ['#C046D3', '#1EA7C5', '#FF9432'],\n\n            markers: {\n               size: [8, 8, 6],\n               strokeWidth: [0, 0, 4],\n               strokeColors: ['#C046D3', '#1EA7C5', '#FF9432'],\n               border: 0,\n               colors: ['#C046D3', '#1EA7C5', '#fff'],\n               hover: {\n                  size: 10,\n               },\n            },\n            yaxis: {\n               title: {\n                  text: '',\n               },\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"line\" height={380} />\n         </div>\n      );\n   }\n}\n\nexport default ApexLine4;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Line3.js",["988","989","990"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/RadialBar.js",["991","992","993"],"import React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nclass ApexRedialBar extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [81],\n         options: {\n            chart: {\n               height: 300,\n               type: 'radialBar',\n               offsetY: -10,\n            },\n            plotOptions: {\n               radialBar: {\n                  startAngle: -135,\n                  endAngle: 135,\n                  dataLabels: {\n                     name: {\n                        fontSize: '16px',\n                        color: undefined,\n                        offsetY: 120,\n                     },\n                     value: {\n                        offsetY: 0,\n                        fontSize: '34px',\n                        color: 'black',\n                        formatter(val) {\n                           return `${val}%`;\n                        },\n                     },\n                  },\n               },\n            },\n            fill: {\n               type: 'gradient',\n               colors: '#6EC51E',\n               gradient: {\n                  shade: 'dark',\n                  shadeIntensity: 0.15,\n                  inverseColors: false,\n                  opacityFrom: 1,\n                  opacityTo: 1,\n                  stops: [0, 50, 65, 91],\n               },\n            },\n            stroke: {\n               dashArray: 4,\n               colors: '#6EC51E',\n            },\n            labels: [''],\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"radialBar\" height={350} />\n         </div>\n      );\n   }\n}\nexport default ApexRedialBar;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Bar3.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/rechart/PositiveNagative.js",["994","995","996","997"],"import React, { PureComponent } from 'react';\nimport { BarChart, Bar, ResponsiveContainer } from 'recharts';\n\nconst data = [\n   {\n      name: 'Page A',\n      uv: 1340,\n      pv: 1655,\n      amt: 1350,\n   },\n   {\n      name: 'Page B',\n      uv: -1500,\n      pv: 1398,\n      amt: 1900,\n   },\n   {\n      name: 'Page C',\n      uv: -1000,\n      pv: -1600,\n      amt: 2105,\n   },\n   {\n      name: 'Page D',\n      uv: 2000,\n      pv: 1950,\n      amt: 2000,\n   },\n   {\n      name: 'Page E',\n      uv: -1890,\n      pv: 2100,\n      amt: 2181,\n   },\n   {\n      name: 'Page F',\n      uv: 1305,\n      pv: -1900,\n      amt: 2050,\n   },\n   {\n      name: 'Page G',\n      uv: 1780,\n      pv: 2050,\n      amt: 2100,\n   },\n];\n\nexport default class Example extends PureComponent {\n   render() {\n      return (\n         <ResponsiveContainer\n            height={this.props.height ? this.props.height : '100%'}\n            width={this.props.width ? this.props.width : '100%'}\n         >\n            <BarChart\n               data={data}\n               margin={{\n                  top: 5,\n                  right: 0,\n                  left: 0,\n                  bottom: 5,\n               }}\n            >\n               <Bar dataKey=\"pv\" fill=\"#40189D\" />\n               <Bar dataKey=\"uv\" fill=\"#209F84\" />\n               <Bar dataKey=\"amt\" fill=\"#2781D5\" />\n            </BarChart>\n         </ResponsiveContainer>\n      );\n   }\n}\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/rechart/BarChartNoPadding.js",["998","999","1000"],"import React, { PureComponent } from 'react';\nimport { BarChart, Bar, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst data = [\n   {\n      name: 'Page A',\n      uv: 4000,\n      pv: 2400,\n      amt: 2400,\n   },\n   {\n      name: 'Page B',\n      uv: 3000,\n      pv: 1398,\n      amt: 2210,\n   },\n   {\n      name: 'Page C',\n      uv: 2000,\n      pv: 3000,\n      amt: 2290,\n   },\n   {\n      name: 'Page D',\n      uv: 2780,\n      pv: 3908,\n      amt: 2000,\n   },\n   {\n      name: 'Page E',\n      uv: 1890,\n      pv: 4800,\n      amt: 2181,\n   },\n   {\n      name: 'Page F',\n      uv: 2390,\n      pv: 3800,\n      amt: 2500,\n   },\n   {\n      name: 'Page G',\n      uv: 3490,\n      pv: 4300,\n      amt: 2100,\n   },\n   {\n      name: 'Page A',\n      uv: 4000,\n      pv: 2400,\n      amt: 2400,\n   },\n];\n\nexport default class Example extends PureComponent {\n   render() {\n      return (\n         <ResponsiveContainer width=\"100%\" aspect={4.0 / 2.0}>\n            <BarChart data={data} barSize={30}>\n               <Bar dataKey=\"pv\" fill={this.props.color ? this.props.color : '#44bdec'} />\n            </BarChart>\n         </ResponsiveContainer>\n      );\n   }\n}\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/dualLine2.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/polar.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/radar.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/dualArea.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/basicArea.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/gradinetArea.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar6.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/dualLine.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar1.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar5.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/pie.js",["1001","1002"],"import React, { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nconst ChartPie = ({ color1, color2, color3, height, width }) => {\n   const data = {\n      datasets: [\n         {\n            data: [45, 25, 30],\n            borderWidth: 0,\n            backgroundColor: [\n               `${color1 || 'rgba(89, 59, 219, 0.9)'}`,\n               `${color2 || 'rgba(89, 59, 219, 0.7)'}`,\n               `${color3 || 'rgba(89, 59, 219, 0.5)'}`,\n            ],\n            hoverBackgroundColor: [\n               `${color1 || 'rgba(89, 59, 219, 0.9)'}`,\n               `${color2 || 'rgba(89, 59, 219, 0.7)'}`,\n               `${color3 || 'rgba(89, 59, 219, 0.5)'}`,\n            ],\n         },\n      ],\n      labels: ['one', 'two', 'three'],\n   };\n\n   const options = {\n      responsive: true,\n      legend: false,\n      maintainAspectRatio: false,\n   };\n\n   return (\n      <>\n         <Pie data={data} height={height || 330} options={options} />\n      </>\n   );\n};\n\nexport default ChartPie;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/line1.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/PluginsMenu/Select2/data.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/productData/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/donught.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Sparkline/NagetivePositive.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Bar2.js",["1003","1004"],"import React from 'react';\n\nimport ReactApexChart from 'react-apexcharts';\n\nclass ApexBar2 extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: 'Cycling',\n               data: [80, 40, 55, 20, 45, 30, 80, 90, 85, 90, 30, 85],\n            },\n         ],\n         options: {\n            chart: {\n               type: 'bar',\n               height: 230,\n               toolbar: {\n                  show: false,\n               },\n            },\n            plotOptions: {\n               bar: {\n                  horizontal: false,\n                  dataLabels: {\n                     position: 'top',\n                  },\n               },\n            },\n            colors: ['#1ea7c5'],\n            legend: {\n               show: false,\n               position: 'top',\n               horizontalAlign: 'left',\n            },\n            dataLabels: {\n               enabled: false,\n               offsetX: -6,\n               style: {\n                  fontSize: '12px',\n                  colors: ['#fff'],\n               },\n            },\n            stroke: {\n               show: false,\n            },\n            yaxis: {\n               lines: {\n                  show: false,\n               },\n            },\n            xaxis: {\n               show: false,\n               categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\n         </div>\n      );\n   }\n}\nexport default ApexBar2;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Button.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/donut.jsx",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/polar.jsx",["1005"],"import React, { Component } from 'react';\nimport ChartistGraph from 'react-chartist';\n\nfunction PolarChart() {\n   const data = {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8],\n      series: [\n         [1, 2, 3, 1, -2, 0, 1, 0],\n         [-2, -1, -2, -1, -2.5, -1, -2, -1],\n         [0, 0, 0, 1, 2, 2.5, 2, 1],\n         [2.5, 2, 1, 0.5, 1, 0.5, -1, -2.5],\n      ],\n   };\n\n   const options = {\n      high: 3,\n      low: -3,\n      showArea: true,\n      showLine: false,\n      showPoint: false,\n      fullWidth: true,\n      height: 250,\n      axisX: {\n         showLabel: false,\n         showGrid: false,\n      },\n   };\n\n   const type = 'Line';\n\n   return (\n      <>\n         <ChartistGraph data={data} options={options} type={type} />\n      </>\n   );\n}\n\nexport default PolarChart;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/area.jsx",["1006"],"import React, { Component } from 'react';\nimport ChartistGraph from 'react-chartist';\n\nfunction AreaChart() {\n   const data = {\n      labels: ['Mon', 'Tues', 'Wednes', 'Thurs', 'Fri'],\n      series: [[12, 9, 7, 8, 5]],\n   };\n\n   const options = {\n      fullWidth: true,\n      showArea: true,\n      height: 250,\n      chartPadding: {\n         right: 20,\n      },\n   };\n\n   const type = 'Line';\n\n   return (\n      <>\n         <ChartistGraph data={data} options={options} type={type} />\n      </>\n   );\n}\n\nexport default AreaChart;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/productData/allProducts.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/line.jsx",["1007"],"import React, { Component } from 'react';\nimport ChartistGraph from 'react-chartist';\n\nfunction LineChart() {\n   const data = {\n      labels: ['Mon', 'Tues', 'Wednes', 'Thurs', 'Fri'],\n      series: [\n         [12, 9, 7, 8, 5],\n         [2, 1, 3.5, 7, 3],\n         [1, 3, 4, 5, 6],\n      ],\n   };\n\n   const options = {\n      fullWidth: true,\n      height: 250,\n      chartPadding: {\n         right: 20,\n      },\n   };\n\n   const type = 'Line';\n\n   return (\n      <>\n         <ChartistGraph data={data} options={options} type={type} />\n      </>\n   );\n}\n\nexport default LineChart;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartist/bar.jsx",["1008"],"import React, { Component } from 'react';\nimport ChartistGraph from 'react-chartist';\n\nfunction BarChart() {\n   const data = {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      series: [\n         [5, 4, 3, 7, 5, 10, 3, 4, 8, 10, 6, 8],\n         [3, 2, 9, 5, 4, 6, 4, 6, 7, 8, 7, 4],\n         [4, 6, 3, 9, 6, 5, 2, 8, 3, 0, 5, 4],\n      ],\n   };\n\n   const options = {\n      fullWidth: true,\n      seriesBarDistance: 10,\n      height: 250,\n      chartPadding: {\n         right: 5,\n      },\n   };\n\n   const type = 'Bar';\n\n   return (\n      <>\n         <ChartistGraph data={data} options={options} type={type} id=\"abc\" />\n      </>\n   );\n}\n\nexport default BarChart;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/chatBox/Chat.js",["1009","1010"],"import React, { useState } from 'react';\n\n/// Images\nimport avatar1 from '../../../images/avatar/1.jpg';\nimport avatar2 from '../../../images/avatar/2.jpg';\nimport avatar3 from '../../../images/avatar/3.jpg';\nimport avatar4 from '../../../images/avatar/4.jpg';\nimport avatar5 from '../../../images/avatar/5.jpg';\nimport MsgBox from './MsgBox';\n\nconst Chat = ({ PerfectScrollbar, toggleChatBox, toggleTab }) => {\n   const [openMsg, setOpenMsg] = useState(false);\n   return (\n      <div className={`tab-pane fade  ${toggleTab === 'chat' ? 'active show' : ''}`} id=\"chat\" role=\"tabpanel\">\n         <div className={`card mb-sm-3 mb-md-0 contacts_card dz-chat-user-box ${openMsg ? 'd-none' : ''}`}>\n            <div className=\"card-header chat-list-header text-center\">\n               <a href=\"#\">\n                  <svg\n                     xmlns=\"http://www.w3.org/2000/svg\"\n                     xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                     width=\"18px\"\n                     height=\"18px\"\n                     viewBox=\"0 0 24 24\"\n                     version=\"1.1\"\n                  >\n                     <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                        <rect fill=\"#000000\" x=\"4\" y=\"11\" width=\"16\" height=\"2\" rx=\"1\" />\n                        <rect\n                           fill=\"#000000\"\n                           opacity=\"0.3\"\n                           transform=\"translate(12.000000, 12.000000) rotate(-270.000000) translate(-12.000000, -12.000000) \"\n                           x=\"4\"\n                           y=\"11\"\n                           width=\"16\"\n                           height=\"2\"\n                           rx=\"1\"\n                        />\n                     </g>\n                  </svg>\n               </a>\n               <div>\n                  <h6 className=\"mb-1\">Chat List</h6>\n                  <p className=\"mb-0\">Show All</p>\n               </div>\n               <a href=\"#\">\n                  <svg\n                     xmlns=\"http://www.w3.org/2000/svg\"\n                     xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                     width=\"18px\"\n                     height=\"18px\"\n                     viewBox=\"0 0 24 24\"\n                     version=\"1.1\"\n                  >\n                     <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                        <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                        <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                        <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                        <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                     </g>\n                  </svg>\n               </a>\n            </div>\n            <PerfectScrollbar\n               className={`card-body contacts_body p-0 dz-scroll  ${toggleChatBox ? 'ps ps--active-y' : ''}`}\n               id=\"DZ_W_Contacts_Body\"\n            >\n               <ul className=\"contacts\">\n                  <li className=\"name-first-letter\">A</li>\n                  <li className=\"active dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar1} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Archie Parker</span>\n                           <p>Kalid is online</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar2} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon offline\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Alfie Mason</span>\n                           <p>Taherah left 7 mins ago</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar3} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>AharlieKane</span>\n                           <p>Sami is online</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar4} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon offline\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Athan Jacoby</span>\n                           <p>Nargis left 30 mins ago</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"name-first-letter\">B</li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar5} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon offline\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Bashid Samim</span>\n                           <p>Rashid left 50 mins ago</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar1} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Breddie Ronan</span>\n                           <p>Kalid is online</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar2} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon offline\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Ceorge Carson</span>\n                           <p>Taherah left 7 mins ago</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"name-first-letter\">D</li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar3} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Darry Parker</span>\n                           <p>Sami is online</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar4} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon offline\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Denry Hunter</span>\n                           <p>Nargis left 30 mins ago</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"name-first-letter\">J</li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar5} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon offline\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Jack Ronan</span>\n                           <p>Rashid left 50 mins ago</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar1} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Jacob Tucker</span>\n                           <p>Kalid is online</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar2} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon offline\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>James Logan</span>\n                           <p>Taherah left 7 mins ago</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar3} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Joshua Weston</span>\n                           <p>Sami is online</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"name-first-letter\">O</li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar4} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon offline\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Oliver Acker</span>\n                           <p>Nargis left 30 mins ago</p>\n                        </div>\n                     </div>\n                  </li>\n                  <li className=\"dz-chat-user\" onClick={() => setOpenMsg(true)}>\n                     <div className=\"d-flex bd-highlight\">\n                        <div className=\"img_cont\">\n                           <img src={avatar5} className=\"rounded-circle user_img\" alt=\"\" />\n                           <span className=\"online_icon offline\" />\n                        </div>\n                        <div className=\"user_info\">\n                           <span>Oscar Weston</span>\n                           <p>Rashid left 50 mins ago</p>\n                        </div>\n                     </div>\n                  </li>\n               </ul>\n            </PerfectScrollbar>\n         </div>\n         <MsgBox\n            avatar1={avatar1}\n            avatar2={avatar2}\n            openMsg={openMsg}\n            PerfectScrollbar={PerfectScrollbar}\n            offMsg={() => setOpenMsg(false)}\n         />\n      </div>\n   );\n};\n\nexport default Chat;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/SpinnerOverlay.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Sparkline/sample-base.js",["1011"],"/* eslint-disable class-methods-use-this */\nimport * as React from 'react';\nimport { enableRipple } from '@syncfusion/ej2-base';\n\nenableRipple(true);\n\nexport class SampleBase extends React.PureComponent {\n   componentDidMount() {\n      setTimeout(() => {\n         this.rendereComplete();\n      });\n   }\n\n   rendereComplete() {\n      console.log('this is SampleBase');\n   }\n}\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Pagination.js",["1012","1013"],"import cls from 'classnames';\nimport { useState } from 'react';\nimport { AiOutlineDoubleLeft, AiOutlineDoubleRight, AiOutlineLeft, AiOutlineRight } from 'react-icons/ai';\nimport Select from './Select';\n\nconst getOption = (v) => ({ value: v, label: v });\nconst options = [getOption(5), getOption(10), getOption(25)];\n\nconst PaginationItem = ({\n   children,\n   className = '',\n   disabled,\n   first = false,\n   last = false,\n   active = false,\n   ...props\n}) => (\n   <li\n      {...props}\n      className={cls(\n         'tw-transition-all tw-cursor-pointer tw-flex tw-items-center tw-text-[#7E7E7E] tw-px-[12px] tw-py-[6px] tw-bg-white tw-border tw-border-solid',\n         className,\n         { 'tw-border-[#44bdec] tw-bg-[#44bdec] tw-text-white': active },\n         { 'tw-cursor-not-allowed': disabled },\n         { 'hover:tw-border-[#44bdec] hover:tw-bg-[#44bdec] hover:tw-text-white': !disabled },\n         { 'tw-rounded-l-md': first },\n         { 'tw-rounded-r-md': last }\n      )}\n   >\n      {children}\n   </li>\n);\n\nconst FirstPage = (props) => (\n   <PaginationItem first {...props}>\n      <AiOutlineDoubleLeft />\n   </PaginationItem>\n);\n\nconst PrevPage = (props) => (\n   <PaginationItem {...props}>\n      <AiOutlineLeft />\n   </PaginationItem>\n);\n\nconst EllipsisPage = (props) => (\n   <PaginationItem disabled {...props}>\n      ...\n   </PaginationItem>\n);\n\nconst NextPage = (props) => (\n   <PaginationItem {...props}>\n      <AiOutlineRight />\n   </PaginationItem>\n);\n\nconst LastPage = (props) => (\n   <PaginationItem last {...props}>\n      <AiOutlineDoubleRight />\n   </PaginationItem>\n);\n\nconst Page = ({ children, ...props }) => <PaginationItem {...props}>{children}</PaginationItem>;\n\nconst Pagination = ({\n   isLimitDisabled,\n   page,\n   onPageChange,\n   onLimitChange,\n   totalPages,\n   hasNextPage,\n   hasPrevPage,\n   totalDocs,\n}) => {\n   const [option, setOption] = useState(getOption(5));\n\n   const renderPagination = () => {\n      const pages = [];\n\n      const handleFirstPage = () => {\n         if (page > 1) onPageChange(1);\n      };\n\n      const handlePrevPage = () => {\n         if (page > 1) onPageChange((prev) => prev - 1);\n      };\n\n      const handleNextPage = () => {\n         if (page < totalPages) onPageChange((prev) => prev + 1);\n      };\n\n      const handleLastPage = () => {\n         if (page < totalPages) onPageChange(totalPages);\n      };\n\n      pages.push(<FirstPage disabled={page === 1} onClick={handleFirstPage} />);\n      pages.push(<PrevPage disabled={page === 1} onClick={handlePrevPage} />);\n\n      for (let currPage = 0; currPage < totalPages; currPage++) {\n         pages.push(\n            <Page active={page === currPage + 1} onClick={() => onPageChange(currPage + 1)}>\n               {currPage + 1}\n            </Page>\n         );\n      }\n\n      pages.push(<NextPage disabled={!hasNextPage} onClick={handleNextPage} />);\n      pages.push(<LastPage disabled={!hasNextPage} onClick={handleLastPage} />);\n\n      return pages;\n   };\n\n   return (\n      <div className=\"tw-flex tw-flex-col tw-items-center tw-gap-3 tw-overflow-visible\">\n         <p className=\"tw-m-0\">{`Showing ${\n            // eslint-disable-next-line no-nested-ternary\n            totalPages === page ? totalDocs : page * option.value > totalDocs ? totalDocs : page * option.value\n         } of ${totalDocs}`}</p>\n         <ul className=\"tw-flex \">{renderPagination()}</ul>\n         <Select\n            isDisabled={isLimitDisabled}\n            className=\"tw-mb-6\"\n            options={options}\n            placeholder=\"Select Page Size\"\n            value={option}\n            onChange={(opt) => {\n               setOption(opt);\n               onLimitChange(opt.value);\n            }}\n         />\n      </div>\n   );\n};\n\nexport default Pagination;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/AppsMenu/Shop/productData/ProductStar.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/chatBox/MsgBox.js",["1014","1015"],"import React, { useState } from 'react';\n\nconst MsgBox = ({ avatar1, avatar2, openMsg, PerfectScrollbar, offMsg }) => {\n   const [toggle, setToggle] = useState(false);\n   return (\n      <div className={`card chat dz-chat-history-box ${openMsg ? '' : 'd-none'}`}>\n         <div className=\"card-header chat-list-header text-center\">\n            <a href=\"#\" className=\"dz-chat-history-back\" onClick={() => offMsg()}>\n               <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                  width=\"18px\"\n                  height=\"18px\"\n                  viewBox=\"0 0 24 24\"\n                  version=\"1.1\"\n               >\n                  <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                     <polygon points=\"0 0 24 0 24 24 0 24\" />\n                     <rect\n                        fill=\"#000000\"\n                        opacity=\"0.3\"\n                        transform=\"translate(15.000000, 12.000000) scale(-1, 1) rotate(-90.000000) translate(-15.000000, -12.000000) \"\n                        x=\"14\"\n                        y=\"7\"\n                        width=\"2\"\n                        height=\"10\"\n                        rx=\"1\"\n                     />\n                     <path\n                        d=\"M3.7071045,15.7071045 C3.3165802,16.0976288 2.68341522,16.0976288 2.29289093,15.7071045 C1.90236664,15.3165802 1.90236664,14.6834152 2.29289093,14.2928909 L8.29289093,8.29289093 C8.67146987,7.914312 9.28105631,7.90106637 9.67572234,8.26284357 L15.6757223,13.7628436 C16.0828413,14.136036 16.1103443,14.7686034 15.7371519,15.1757223 C15.3639594,15.5828413 14.7313921,15.6103443 14.3242731,15.2371519 L9.03007346,10.3841355 L3.7071045,15.7071045 Z\"\n                        fill=\"#000000\"\n                        fillRule=\"nonzero\"\n                        transform=\"translate(9.000001, 11.999997) scale(-1, -1) rotate(90.000000) translate(-9.000001, -11.999997) \"\n                     />\n                  </g>\n               </svg>\n            </a>\n            <div>\n               <h6 className=\"mb-1\">Chat with Khelesh</h6>\n               <p className=\"mb-0 text-success\">Online</p>\n            </div>\n            <div className=\"dropdown\">\n               <a href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"false\" onClick={() => setToggle(!toggle)}>\n                  <svg\n                     xmlns=\"http://www.w3.org/2000/svg\"\n                     xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                     width=\"18px\"\n                     height=\"18px\"\n                     viewBox=\"0 0 24 24\"\n                     version=\"1.1\"\n                  >\n                     <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                        <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                        <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                        <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                        <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                     </g>\n                  </svg>\n               </a>\n               <ul className={`dropdown-menu dropdown-menu-right ${toggle ? 'show' : ''}`}>\n                  <li className=\"dropdown-item\" onClick={() => setToggle(false)}>\n                     <i className=\"fa fa-user-circle text-primary mr-2\" /> View profile\n                  </li>\n                  <li className=\"dropdown-item\" onClick={() => setToggle(false)}>\n                     <i className=\"fa fa-users text-primary mr-2\" /> Add to close friends\n                  </li>\n                  <li className=\"dropdown-item\" onClick={() => setToggle(false)}>\n                     <i className=\"fa fa-plus text-primary mr-2\" /> Add to group\n                  </li>\n                  <li className=\"dropdown-item\" onClick={() => setToggle(false)}>\n                     <i className=\"fa fa-ban text-primary mr-2\" /> Block\n                  </li>\n               </ul>\n            </div>\n         </div>\n         <PerfectScrollbar\n            className={`card-body msg_card_body dz-scroll ${openMsg ? 'ps ps--active-y' : ''} `}\n            id=\"DZ_W_Contacts_Body3\"\n         >\n            <div className=\"d-flex justify-content-start mb-4\">\n               <div className=\"img_cont_msg\">\n                  <img src={avatar1} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n               <div className=\"msg_cotainer\">\n                  Hi, how are you samim?\n                  <span className=\"msg_time\">8:40 AM, Today</span>\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-end mb-4\">\n               <div className=\"msg_cotainer_send\">\n                  Hi Khalid i am good tnx how about you?\n                  <span className=\"msg_time_send\">8:55 AM, Today</span>\n               </div>\n               <div className=\"img_cont_msg\">\n                  <img src={avatar2} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-start mb-4\">\n               <div className=\"img_cont_msg\">\n                  <img src={avatar1} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n               <div className=\"msg_cotainer\">\n                  I am good too, thank you for your chat template\n                  <span className=\"msg_time\">9:00 AM, Today</span>\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-end mb-4\">\n               <div className=\"msg_cotainer_send\">\n                  You are welcome\n                  <span className=\"msg_time_send\">9:05 AM, Today</span>\n               </div>\n               <div className=\"img_cont_msg\">\n                  <img src={avatar2} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-start mb-4\">\n               <div className=\"img_cont_msg\">\n                  <img src={avatar1} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n               <div className=\"msg_cotainer\">\n                  I am looking for your next templates\n                  <span className=\"msg_time\">9:07 AM, Today</span>\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-end mb-4\">\n               <div className=\"msg_cotainer_send\">\n                  Ok, thank you have a good day\n                  <span className=\"msg_time_send\">9:10 AM, Today</span>\n               </div>\n               <div className=\"img_cont_msg\">\n                  <img src={avatar2} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-start mb-4\">\n               <div className=\"img_cont_msg\">\n                  <img src={avatar1} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n               <div className=\"msg_cotainer\">\n                  Bye, see you\n                  <span className=\"msg_time\">9:12 AM, Today</span>\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-start mb-4\">\n               <div className=\"img_cont_msg\">\n                  <img src={avatar1} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n               <div className=\"msg_cotainer\">\n                  Hi, how are you samim?\n                  <span className=\"msg_time\">8:40 AM, Today</span>\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-end mb-4\">\n               <div className=\"msg_cotainer_send\">\n                  Hi Khalid i am good tnx how about you?\n                  <span className=\"msg_time_send\">8:55 AM, Today</span>\n               </div>\n               <div className=\"img_cont_msg\">\n                  <img src={avatar2} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-start mb-4\">\n               <div className=\"img_cont_msg\">\n                  <img src={avatar1} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n               <div className=\"msg_cotainer\">\n                  I am good too, thank you for your chat template\n                  <span className=\"msg_time\">9:00 AM, Today</span>\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-end mb-4\">\n               <div className=\"msg_cotainer_send\">\n                  You are welcome\n                  <span className=\"msg_time_send\">9:05 AM, Today</span>\n               </div>\n               <div className=\"img_cont_msg\">\n                  <img src={avatar2} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-start mb-4\">\n               <div className=\"img_cont_msg\">\n                  <img src={avatar1} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n               <div className=\"msg_cotainer\">\n                  I am looking for your next templates\n                  <span className=\"msg_time\">9:07 AM, Today</span>\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-end mb-4\">\n               <div className=\"msg_cotainer_send\">\n                  Ok, thank you have a good day\n                  <span className=\"msg_time_send\">9:10 AM, Today</span>\n               </div>\n               <div className=\"img_cont_msg\">\n                  <img src={avatar2} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n            </div>\n            <div className=\"d-flex justify-content-start mb-4\">\n               <div className=\"img_cont_msg\">\n                  <img src={avatar1} className=\"rounded-circle user_img_msg\" alt=\"\" />\n               </div>\n               <div className=\"msg_cotainer\">\n                  Bye, see you\n                  <span className=\"msg_time\">9:12 AM, Today</span>\n               </div>\n            </div>\n         </PerfectScrollbar>\n         <div className=\"card-footer type_msg\">\n            <div className=\"input-group\">\n               <textarea className=\"form-control\" placeholder=\"Type your message...\" />\n               <div className=\"input-group-append\">\n                  <button type=\"button\" className=\"btn btn-primary\">\n                     <i className=\"fa fa-location-arrow\" />\n                  </button>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default MsgBox;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Select.js",["1016","1017"],"import ReactSelect from 'react-select';\n\nconst selectStyles = {\n   control: (provided, state) => {\n      provided.borderColor = state.menuIsOpen ? '#44bdec' : 'hsl(0, 0%, 80%)';\n      provided.boxShadow = state.menuIsOpen ? '0 0 0 1px #44bdec' : '';\n      provided['&:hover'] = { borderColor: '#44bdec' };\n      provided.justifyContent = 'center';\n      provided.paddingTop = '0.2rem';\n      provided.paddingBottom = '0.2rem';\n\n      return provided;\n   },\n   valueContainer: (provided, state) => {\n      provided.justifyContent = 'center';\n      return provided;\n   },\n   menu: (provided, state) => {\n      provided.textAlign = 'center';\n      return provided;\n   },\n   option: (provided, state) => {\n      provided.backgroundColor = state.isSelected || state.isFocused ? '#44bdec' : 'transparent';\n\n      if (state.isFocused) provided.color = 'white';\n      return provided;\n   },\n};\n\nconst Select = ({ className = '', ...props }) => (\n   <ReactSelect menuPlacement=\"auto\" className={`tw-w-[100px] ${className}`} styles={selectStyles} {...props} />\n);\n\nexport default Select;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/useQuery.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/useAlert.js",["1018"],"import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { When } from 'react-if';\nimport cls from 'classnames';\nimport { getError } from './server';\n\nexport const useAlert = () => {\n   const [isShowing, setIsShowing] = useState(false);\n   const [message, setMessage] = useState('');\n   const [variant, setVariant] = useState('success');\n\n   const callback = useRef(null);\n   const timeout = useRef(null);\n\n   // eslint-disable-next-line arrow-body-style\n   useEffect(() => {\n      return () => {\n         if (timeout.current) clearTimeout(timeout.current);\n      };\n   }, []);\n\n   const resetTimeout = useCallback((duration) => {\n      if (timeout.current) clearTimeout(timeout.current);\n      timeout.current = setTimeout(() => {\n         setIsShowing(false);\n         timeout.current = null;\n         if (callback.current) callback.current();\n      }, duration);\n   }, []);\n\n   const getAlert = useCallback(\n      () =>\n         isShowing ? (\n            <Alert\n               className=\"alert-dismissible fade show\"\n               variant={variant}\n               dismissible\n               onClose={() => setIsShowing(false)}\n            >\n               <p className={cls(`tw-m-0 tw-opacity-60`, { 'tw-text-black': variant === 'success' })}>{message}</p>\n            </Alert>\n         ) : null,\n      [isShowing, message, variant]\n   );\n\n   const setAlert = useCallback(\n      ({ message: msg = '', variant: v = 'success', callback: cb = null, duration: d = 3000 }) => {\n         callback.current = cb;\n         resetTimeout(d);\n         setIsShowing(true);\n         setMessage(msg);\n         setVariant(v);\n      },\n      [resetTimeout]\n   );\n\n   const setErrorAlert = useCallback(\n      ({ message: msg = 'Unable to dispatch action', err, callback: cb = null, duration: d = 6000 }) => {\n         resetTimeout(d);\n         const m = (\n            <>\n               <strong>{msg}</strong>\n               <br />\n               {getError(err).map((e, i, a) => (\n                  <React.Fragment key={`error-${i}`}>\n                     <p className=\"tw-m-0\">{e}</p>\n                     {i < a.length - 2 ? <br /> : null}\n                  </React.Fragment>\n               ))}\n            </>\n         );\n\n         callback.current = cb;\n         setIsShowing(true);\n         setMessage(m);\n         setVariant('danger');\n      },\n      [resetTimeout]\n   );\n\n   const alert = useMemo(() => ({ getAlert, setAlert, setErrorAlert }), [getAlert, setAlert, setErrorAlert]);\n\n   return alert;\n};\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/helpers/server.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/chatBox/Alerts.js",["1019","1020"],"import React from 'react';\n\nconst Alerts = ({ toggleTab, PerfectScrollbar, toggleChatBox }) => (\n   <div className={`tab-pane fade  ${toggleTab === 'alerts' ? 'active show' : ''}`} id=\"alerts\" role=\"tabpanel\">\n      <div className=\"card mb-sm-3 mb-md-0 contacts_card\">\n         <div className=\"card-header chat-list-header text-center\">\n            <a href=\"#\">\n               <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                  width=\"18px\"\n                  height=\"18px\"\n                  viewBox=\"0 0 24 24\"\n                  version=\"1.1\"\n               >\n                  <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                     <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                     <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                     <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                     <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                  </g>\n               </svg>\n            </a>\n            <div>\n               <h6 className=\"mb-1\">Notications</h6>\n               <p className=\"mb-0\">Show All</p>\n            </div>\n            <a href=\"#\">\n               <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                  width=\"18px\"\n                  height=\"18px\"\n                  viewBox=\"0 0 24 24\"\n                  version=\"1.1\"\n               >\n                  <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                     <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                     <path\n                        d=\"M14.2928932,16.7071068 C13.9023689,16.3165825 13.9023689,15.6834175 14.2928932,15.2928932 C14.6834175,14.9023689 15.3165825,14.9023689 15.7071068,15.2928932 L19.7071068,19.2928932 C20.0976311,19.6834175 20.0976311,20.3165825 19.7071068,20.7071068 C19.3165825,21.0976311 18.6834175,21.0976311 18.2928932,20.7071068 L14.2928932,16.7071068 Z\"\n                        fill=\"#000000\"\n                        fillRule=\"nonzero\"\n                        opacity=\"0.3\"\n                     />\n                     <path\n                        d=\"M11,16 C13.7614237,16 16,13.7614237 16,11 C16,8.23857625 13.7614237,6 11,6 C8.23857625,6 6,8.23857625 6,11 C6,13.7614237 8.23857625,16 11,16 Z M11,18 C7.13400675,18 4,14.8659932 4,11 C4,7.13400675 7.13400675,4 11,4 C14.8659932,4 18,7.13400675 18,11 C18,14.8659932 14.8659932,18 11,18 Z\"\n                        fill=\"#000000\"\n                        fillRule=\"nonzero\"\n                     />\n                  </g>\n               </svg>\n            </a>\n         </div>\n         <PerfectScrollbar\n            className={`card-body contacts_body p-0 dz-scroll  ${toggleChatBox ? 'ps ps--active-y' : ''}`}\n            id=\"DZ_W_Contacts_Body1\"\n         >\n            <ul className=\"contacts\">\n               <li className=\"name-first-letter\">SEVER STATUS</li>\n               <li className=\"active\">\n                  <div className=\"d-flex bd-highlight\">\n                     <div className=\"img_cont primary\">KK</div>\n                     <div className=\"user_info\">\n                        <span>David Nester Birthday</span>\n                        <p className=\"text-primary\">Today</p>\n                     </div>\n                  </div>\n               </li>\n               <li className=\"name-first-letter\">SOCIAL</li>\n               <li>\n                  <div className=\"d-flex bd-highlight\">\n                     <div className=\"img_cont success\">\n                        RU\n                        <i className=\"icon fa-birthday-cake\" />\n                     </div>\n                     <div className=\"user_info\">\n                        <span>Perfection Simplified</span>\n                        <p>Jame Smith commented on your status</p>\n                     </div>\n                  </div>\n               </li>\n               <li className=\"name-first-letter\">SEVER STATUS</li>\n               <li>\n                  <div className=\"d-flex bd-highlight\">\n                     <div className=\"img_cont primary\">\n                        AU\n                        <i className=\"icon fa fa-user-plus\" />\n                     </div>\n                     <div className=\"user_info\">\n                        <span>AharlieKane</span>\n                        <p>Sami is online</p>\n                     </div>\n                  </div>\n               </li>\n               <li>\n                  <div className=\"d-flex bd-highlight\">\n                     <div className=\"img_cont info\">\n                        MO\n                        <i className=\"icon fa fa-user-plus\" />\n                     </div>\n                     <div className=\"user_info\">\n                        <span>Athan Jacoby</span>\n                        <p>Nargis left 30 mins ago</p>\n                     </div>\n                  </div>\n               </li>\n            </ul>\n         </PerfectScrollbar>\n         <div className=\"card-footer\" />\n      </div>\n   </div>\n);\n\nexport default Alerts;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/chatBox/Notes.js",["1021","1022","1023","1024","1025","1026","1027","1028","1029","1030"],"import React from 'react';\n\nconst Notes = ({ toggleTab, PerfectScrollbar, toggleChatBox }) => (\n   <div className={`tab-pane fade  ${toggleTab === 'notes' ? 'active show' : ''}`} id=\"notes\">\n      <div className=\"card mb-sm-3 mb-md-0 note_card\">\n         <div className=\"card-header chat-list-header text-center\">\n            <a href=\"#\">\n               <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                  width=\"18px\"\n                  height=\"18px\"\n                  viewBox=\"0 0 24 24\"\n                  version=\"1.1\"\n               >\n                  <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                     <rect fill=\"#000000\" x=\"4\" y=\"11\" width=\"16\" height=\"2\" rx=\"1\" />\n                     <rect\n                        fill=\"#000000\"\n                        opacity=\"0.3\"\n                        transform=\"translate(12.000000, 12.000000) rotate(-270.000000) translate(-12.000000, -12.000000) \"\n                        x=\"4\"\n                        y=\"11\"\n                        width=\"16\"\n                        height=\"2\"\n                        rx=\"1\"\n                     />\n                  </g>\n               </svg>\n            </a>\n            <div>\n               <h6 className=\"mb-1\">Notes</h6>\n               <p className=\"mb-0\">Add New Nots</p>\n            </div>\n            <a href=\"#\">\n               <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                  width=\"18px\"\n                  height=\"18px\"\n                  viewBox=\"0 0 24 24\"\n                  version=\"1.1\"\n               >\n                  <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                     <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                     <path\n                        d=\"M14.2928932,16.7071068 C13.9023689,16.3165825 13.9023689,15.6834175 14.2928932,15.2928932 C14.6834175,14.9023689 15.3165825,14.9023689 15.7071068,15.2928932 L19.7071068,19.2928932 C20.0976311,19.6834175 20.0976311,20.3165825 19.7071068,20.7071068 C19.3165825,21.0976311 18.6834175,21.0976311 18.2928932,20.7071068 L14.2928932,16.7071068 Z\"\n                        fill=\"#000000\"\n                        fillRule=\"nonzero\"\n                        opacity=\"0.3\"\n                     />\n                     <path\n                        d=\"M11,16 C13.7614237,16 16,13.7614237 16,11 C16,8.23857625 13.7614237,6 11,6 C8.23857625,6 6,8.23857625 6,11 C6,13.7614237 8.23857625,16 11,16 Z M11,18 C7.13400675,18 4,14.8659932 4,11 C4,7.13400675 7.13400675,4 11,4 C14.8659932,4 18,7.13400675 18,11 C18,14.8659932 14.8659932,18 11,18 Z\"\n                        fill=\"#000000\"\n                        fillRule=\"nonzero\"\n                     />\n                  </g>\n               </svg>\n            </a>\n         </div>\n         <PerfectScrollbar\n            className={`card-body contacts_body p-0 dz-scroll  ${toggleChatBox ? 'ps ps--active-y' : ''}`}\n            id=\"DZ_W_Contacts_Body2\"\n         >\n            <ul className=\"contacts\">\n               <li className=\"active\">\n                  <div className=\"d-flex bd-highlight\">\n                     <div className=\"user_info\">\n                        <span>New order placed..</span>\n                        <p>10 Aug 2020</p>\n                     </div>\n                     <div className=\"ml-auto\">\n                        <a href=\"#\" className=\"btn btn-primary btn-xs sharp mr-1\">\n                           <i className=\"fa fa-pencil\" />\n                        </a>\n                        <a href=\"#\" className=\"btn btn-danger btn-xs sharp\">\n                           <i className=\"fa fa-trash\" />\n                        </a>\n                     </div>\n                  </div>\n               </li>\n               <li>\n                  <div className=\"d-flex bd-highlight\">\n                     <div className=\"user_info\">\n                        <span>Youtube, a video-sharing website..</span>\n                        <p>10 Aug 2020</p>\n                     </div>\n                     <div className=\"ml-auto\">\n                        <a href=\"#\" className=\"btn btn-primary btn-xs sharp mr-1\">\n                           <i className=\"fa fa-pencil\" />\n                        </a>\n                        <a href=\"#\" className=\"btn btn-danger btn-xs sharp\">\n                           <i className=\"fa fa-trash\" />\n                        </a>\n                     </div>\n                  </div>\n               </li>\n               <li>\n                  <div className=\"d-flex bd-highlight\">\n                     <div className=\"user_info\">\n                        <span>john just buy your product..</span>\n                        <p>10 Aug 2020</p>\n                     </div>\n                     <div className=\"ml-auto\">\n                        <a href=\"#\" className=\"btn btn-primary btn-xs sharp mr-1\">\n                           <i className=\"fa fa-pencil\" />\n                        </a>\n                        <a href=\"#\" className=\"btn btn-danger btn-xs sharp\">\n                           <i className=\"fa fa-trash\" />\n                        </a>\n                     </div>\n                  </div>\n               </li>\n               <li>\n                  <div className=\"d-flex bd-highlight\">\n                     <div className=\"user_info\">\n                        <span>Athan Jacoby</span>\n                        <p>10 Aug 2020</p>\n                     </div>\n                     <div className=\"ml-auto\">\n                        <a href=\"#\" className=\"btn btn-primary btn-xs sharp mr-1\">\n                           <i className=\"fa fa-pencil\" />\n                        </a>\n                        <a href=\"#\" className=\"btn btn-danger btn-xs sharp\">\n                           <i className=\"fa fa-trash\" />\n                        </a>\n                     </div>\n                  </div>\n               </li>\n            </ul>\n         </PerfectScrollbar>\n      </div>\n   </div>\n);\n\nexport default Notes;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/PatientTable.js",["1031"],"/* eslint-disable no-nested-ternary */\nimport React, { useState, useRef } from 'react';\nimport { Table, Pagination, Badge, Dropdown } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\nimport data from './tableData.js';\n\nconst PatientTable = () => {\n   const sort = 3;\n   const jobPagination = Array(Math.ceil(data.patientTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(data.patientTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort));\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.patientTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort);\n      setdemo(data.patientTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort));\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Patient</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.patientTable.columns.map((d, i) => (\n                                 <th key={i}>\n                                    {i === 0 ? (\n                                       <div className=\"custom-control custom-checkbox\">\n                                          <input\n                                             type=\"checkbox\"\n                                             className=\"custom-control-input\"\n                                             id=\"checkAll\"\n                                             required\n                                          />\n                                          <label className=\"custom-control-label\" htmlFor=\"checkAll\" />\n                                       </div>\n                                    ) : (\n                                       d\n                                    )}\n                                 </th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, ii) => (\n                                    <td key={ii}>\n                                       {ii === 0 ? (\n                                          <div className=\"custom-control custom-checkbox\">\n                                             <input\n                                                type=\"checkbox\"\n                                                className=\"custom-control-input\"\n                                                id={`checkAll${i}`}\n                                                required\n                                             />\n                                             <label className=\"custom-control-label\" htmlFor={`checkAll${i}`} />\n                                          </div>\n                                       ) : da === 'Recovered' ? (\n                                          <Badge variant=\"success light\">\n                                             <i className=\"fa fa-circle text-success mr-1\" />\n                                             Recovered\n                                          </Badge>\n                                       ) : da === 'New Patient' ? (\n                                          <Badge variant=\"danger light\">\n                                             <i className=\"fa fa-circle text-danger mr-1\" />\n                                             New Patient\n                                          </Badge>\n                                       ) : da === 'In Treatment' ? (\n                                          <Badge variant=\"warning light\">\n                                             <i className=\"fa fa-circle text-warning mr-1\" />\n                                             In Treatment\n                                          </Badge>\n                                       ) : ii === 8 ? (\n                                          <Dropdown>\n                                             <Dropdown.Toggle variant className=\"icon-false table-dropdown\">\n                                                <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n                                                   <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                                      <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                                      <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                                      <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                                      <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                                   </g>\n                                                </svg>\n                                             </Dropdown.Toggle>\n                                             <Dropdown.Menu>\n                                                <Dropdown.Item to=\"#\">Accept Patient</Dropdown.Item>\n                                                <Dropdown.Item to=\"#\">Reject Order</Dropdown.Item>\n                                                <Dropdown.Item to=\"#\">View Details</Dropdown.Item>\n                                             </Dropdown.Menu>\n                                          </Dropdown>\n                                       ) : (\n                                          da\n                                       )}\n                                    </td>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                     </table>\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to\n                           {data.patientTable.data.length < (activePag.current + 1) * sort\n                              ? data.patientTable.data.length\n                              : (activePag.current + 1) * sort}\n                           of {data.patientTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination className=\"pagination-primary pagination-circle\" size=\"lg\">\n                              <li\n                                 className=\"page-item page-indicator \"\n                                 onClick={() => activePag.current > 1 && onClick(activePag.current - 1)}\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-left\" />\n                                 </Link>\n                              </li>\n                              {jobPagination.map((number, i) => (\n                                 <Pagination.Item\n                                    className={activePag.current === i ? 'active' : ''}\n                                    onClick={() => onClick(i)}\n                                 >\n                                    {number}\n                                 </Pagination.Item>\n                              ))}\n                              <li\n                                 className=\"page-item page-indicator\"\n                                 onClick={() =>\n                                    activePag.current + 1 < jobPagination.length && onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-right\" />\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default PatientTable;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/FeesCollection.js",["1032"],"/* eslint-disable no-nested-ternary */\nimport React, { useState, useRef } from 'react';\nimport { Table, Pagination, Badge } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\nimport data from './tableData.js';\n\nconst FeesCollection = () => {\n   const sort = 3;\n   const jobPagination = Array(Math.ceil(data.feeTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(data.feeTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort));\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.feeTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort);\n      setdemo(data.feeTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort));\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Fees Collection</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.feeTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, ii) => (\n                                    <td key={ii}>\n                                       {da === 'Paid' ? (\n                                          <Badge variant=\"success light\">Paid</Badge>\n                                       ) : da === 'Unpaid' ? (\n                                          <Badge variant=\"danger light\">Unpaid</Badge>\n                                       ) : da === 'Panding' ? (\n                                          <Badge variant=\"warning light\">Panding</Badge>\n                                       ) : (\n                                          da\n                                       )}\n                                    </td>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                        <tfoot>\n                           <tr role=\"row\">\n                              {data.feeTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </tfoot>\n                     </table>\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to\n                           {data.feeTable.data.length < (activePag.current + 1) * sort\n                              ? data.feeTable.data.length\n                              : (activePag.current + 1) * sort}\n                           of {data.feeTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination className=\"pagination-primary pagination-circle\" size=\"lg\">\n                              <li\n                                 className=\"page-item page-indicator \"\n                                 onClick={() => activePag.current > 1 && onClick(activePag.current - 1)}\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-left\" />\n                                 </Link>\n                              </li>\n                              {jobPagination.map((number, i) => (\n                                 <Pagination.Item\n                                    className={activePag.current === i ? 'active' : ''}\n                                    onClick={() => onClick(i)}\n                                 >\n                                    {number}\n                                 </Pagination.Item>\n                              ))}\n                              <li\n                                 className=\"page-item page-indicator\"\n                                 onClick={() =>\n                                    activePag.current + 1 < jobPagination.length && onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-right\" />\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default FeesCollection;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/ProfileDatatable.js",["1033"],"import React, { Fragment, useState, useRef } from 'react';\nimport { Table, Pagination } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\nimport data from './tableData.js';\n\nconst ProfileDatatable = () => {\n   const sort = 3;\n   const jobPagination = Array(Math.ceil(data.profileTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(data.profileTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort));\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.profileTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort);\n      setdemo(data.profileTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort));\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Profile Datatable</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.profileTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, dI) => (\n                                    <Fragment key={dI}>\n                                       <td>\n                                          {i === 0 ? (\n                                             <img className=\"rounded-circle\" width=\"35\" src={da} alt=\"\" />\n                                          ) : (\n                                             <>\n                                                {da}\n                                                {i === 8 && (\n                                                   <div className=\"d-flex\">\n                                                      <Link to=\"#\" className=\"btn btn-primary shadow btn-xs sharp mr-1\">\n                                                         <i className=\"fa fa-pencil\" />\n                                                      </Link>\n                                                      <Link to=\"#\" className=\"btn btn-danger shadow btn-xs sharp\">\n                                                         <i className=\"fa fa-trash\" />\n                                                      </Link>\n                                                   </div>\n                                                )}\n                                             </>\n                                          )}\n                                       </td>\n                                    </Fragment>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                        <tfoot>\n                           <tr role=\"row\">\n                              {data.profileTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </tfoot>\n                     </table>\n\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to\n                           {data.profileTable.data.length < (activePag.current + 1) * sort\n                              ? data.profileTable.data.length\n                              : (activePag.current + 1) * sort}\n                           of {data.profileTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination className=\"pagination-primary pagination-circle\" size=\"lg\">\n                              <li\n                                 className=\"page-item page-indicator \"\n                                 onClick={() => activePag.current > 1 && onClick(activePag.current - 1)}\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-left\" />\n                                 </Link>\n                              </li>\n                              {jobPagination.map((number, i) => (\n                                 <Pagination.Item\n                                    className={activePag.current === i ? 'active' : ''}\n                                    onClick={() => onClick(i)}\n                                 >\n                                    {number}\n                                 </Pagination.Item>\n                              ))}\n                              <li\n                                 className=\"page-item page-indicator\"\n                                 onClick={() =>\n                                    activePag.current + 1 < jobPagination.length && onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-right\" />\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default ProfileDatatable;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/SimpleDataTable.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/table/BasicDatatable.js",["1034"],"import React, { useState, useRef } from 'react';\nimport { Table, Pagination } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\nimport data from './tableData.js';\n\nconst BasicDatatable = () => {\n   const sort = 3;\n   const jobPaggination = Array(Math.ceil(data.jobsTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(data.jobsTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort));\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.jobsTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort);\n      setdemo(data.jobsTable.data.slice(activePag.current * sort, (activePag.current + 1) * sort));\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Basic Datatable</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.jobsTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, dI) => (\n                                    <td key={dI}>{da}</td>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                        <tfoot>\n                           <tr role=\"row\">\n                              {data.jobsTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </tfoot>\n                     </table>\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to\n                           {data.jobsTable.data.length < (activePag.current + 1) * sort\n                              ? data.jobsTable.data.length\n                              : (activePag.current + 1) * sort}\n                           of {data.jobsTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination className=\"pagination-primary pagination-circle\" size=\"lg\">\n                              <li\n                                 className=\"page-item page-indicator \"\n                                 onClick={() => activePag.current > 1 && onClick(activePag.current - 1)}\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-left\" />\n                                 </Link>\n                              </li>\n                              {jobPaggination.map((number, i) => (\n                                 <Pagination.Item\n                                    className={activePag.current === i ? 'active' : ''}\n                                    onClick={() => onClick(i)}\n                                 >\n                                    {number}\n                                 </Pagination.Item>\n                              ))}\n                              <li\n                                 className=\"page-item page-indicator\"\n                                 onClick={() =>\n                                    activePag.current + 1 < jobPaggination.length && onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-right\" />\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default BasicDatatable;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/Dashboard/Modal.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/bootstrap/alertData.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/NagetivePositive2.js",["1035","1036","1037"],"import React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nclass ApexNagetivePosative extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: 'New Clients',\n               data: [70, 20, 75, 20, 50, 40, 65, 15, 40, 55, 60, 20, 75, 40, 25, 70, 20, 40, 65, 50],\n            },\n            {\n               name: 'Retained Clients',\n               data: [\n                  -60, -10, -50, -25, -30, -65, -22, -10, -50, -20, -70, -35, -60, -20, -30, -45, -70, -50, -45, -10,\n               ],\n            },\n         ],\n         options: {\n            chart: {\n               type: 'bar',\n               height: 320,\n               stacked: true,\n               toolbar: {\n                  show: false,\n               },\n               sparkline: {\n                  // enabled: true\n               },\n               backgroundBarRadius: 5,\n               offsetX: -10,\n            },\n            plotOptions: {\n               bar: {\n                  columnWidth: '30%',\n                  endingShape: 'rounded',\n                  colors: {\n                     backgroundBarColors: [\n                        'rgba(0,0,0,0)',\n                        'rgba(0,0,0,0)',\n                        'rgba(0,0,0,0)',\n                        'rgba(0,0,0,0)',\n                        'rgba(0,0,0,0)',\n                        'rgba(0,0,0,0)',\n                        'rgba(0,0,0,0)',\n                        'rgba(0,0,0,0)',\n                        'rgba(0,0,0,0)',\n                        'rgba(0,0,0,0)',\n                     ],\n                     backgroundBarOpacity: 1,\n                     backgroundBarRadius: 5,\n                     opacity: 0,\n                  },\n               },\n               distributed: true,\n            },\n            colors: ['#6EC51E', '#FF285C'],\n\n            grid: {\n               show: true,\n            },\n            legend: {\n               show: false,\n            },\n            fill: {\n               opacity: 1,\n            },\n            dataLabels: {\n               enabled: false,\n               colors: ['#6EC51E', '#FF285C'],\n               dropShadow: {\n                  enabled: true,\n                  top: 1,\n                  left: 1,\n                  blur: 1,\n                  opacity: 1,\n               },\n            },\n            xaxis: {\n               categories: [\n                  '01',\n                  '02',\n                  '03',\n                  '04',\n                  '05',\n                  '06',\n                  '07',\n                  '08',\n                  '09',\n                  '10',\n                  '11',\n                  '12',\n                  '13',\n                  '14',\n                  '15',\n                  '16',\n                  '17',\n                  '18',\n                  '19',\n                  '20',\n               ],\n               labels: {\n                  style: {\n                     colors: '#787878',\n                     fontSize: '13px',\n                     fontFamily: 'Poppins',\n                     fontWeight: 400,\n                  },\n               },\n               crosshairs: {\n                  show: false,\n               },\n               axisBorder: {\n                  show: false,\n               },\n            },\n\n            yaxis: {\n               // show: false\n               labels: {\n                  style: {\n                     colors: '#787878',\n                     fontSize: '13px',\n                     fontFamily: 'Poppins',\n                     fontWeight: 400,\n                  },\n               },\n            },\n\n            tooltip: {\n               x: {\n                  show: true,\n               },\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={320} />\n         </div>\n      );\n   }\n}\n\nexport default ApexNagetivePosative;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Bar.js",["1038","1039","1040","1041"],"import React from 'react';\n\nimport ReactApexChart from 'react-apexcharts';\n\nclass ApexBar extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: 'Running',\n               data: [50, 18, 70, 40, 90, 70, 20, 75, 80, 25, 70, 45],\n            },\n            {\n               name: 'Cycling',\n               data: [80, 40, 55, 20, 45, 30, 80, 90, 85, 90, 30, 85],\n            },\n         ],\n         options: {\n            chart: {\n               type: 'bar',\n               height: 230,\n               toolbar: {\n                  show: false,\n               },\n            },\n            plotOptions: {\n               bar: {\n                  horizontal: false,\n                  columnWidth: this.props.columnWidth ? this.props.columnWidth : '100%',\n                  endingShape: 'flat',\n               },\n            },\n\n            colors: ['#FF9432', '#1EA7C5'],\n            legend: {\n               show: false,\n               position: 'top',\n               horizontalAlign: 'left',\n            },\n            dataLabels: {\n               enabled: false,\n            },\n            stroke: {\n               show: true,\n               width: 10,\n               colors: ['transparent'],\n            },\n            xaxis: {\n               categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n            },\n            responsive: [\n               {\n                  breakpoint: 360,\n                  options: {\n                     plotOptions: {\n                        bar: {\n                           columnWidth: '100%',\n                        },\n                     },\n                  },\n               },\n            ],\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart\n               options={this.state.options}\n               series={this.state.series}\n               type=\"bar\"\n               height={350}\n               // responsive={this.state.responsive}\n            />\n         </div>\n      );\n   }\n}\nexport default ApexBar;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Line.js",["1042","1043","1044"],"import React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nclass ApexLine extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: 'Cycling',\n               data: [50, 100, 35, 35, 0, 0, 80, 20, 40, 40, 40, 40],\n            },\n         ],\n         options: {\n            chart: {\n               height: 350,\n               type: 'area',\n               toolbar: {\n                  show: false,\n               },\n            },\n            dataLabels: {\n               enabled: false,\n            },\n\n            stroke: {\n               width: [4],\n               colors: ['#1EA7C5'],\n               curve: 'straight',\n            },\n            legend: {\n               show: false,\n               position: 'top',\n               horizontalAlign: 'left',\n            },\n            colors: ['#1EA7C5'],\n            xaxis: {\n               type: 'text',\n               categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            },\n            markers: {\n               size: [8],\n               strokeWidth: [0],\n               strokeColors: ['#1EA7C5'],\n               border: 0,\n               colors: ['#1EA7C5'],\n               hover: {\n                  size: 10,\n               },\n            },\n            yaxis: {\n               title: {\n                  text: '',\n               },\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={350} />\n         </div>\n      );\n   }\n}\n\nexport default ApexLine;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/apexcharts/Line2.js",["1045","1046","1047"],"import React, { Component } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nclass ApexLine2 extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         series: [\n            {\n               name: 'Yoga',\n               data: [65, 65, 65, 120, 120, 80, 120, 100, 100, 120, 120, 120],\n            },\n         ],\n         options: {\n            chart: {\n               height: 350,\n               type: 'area',\n               toolbar: {\n                  show: false,\n               },\n            },\n            dataLabels: {\n               enabled: false,\n            },\n\n            stroke: {\n               width: [4],\n               colors: ['#C046D3'],\n               curve: 'straight',\n            },\n\n            xaxis: {\n               type: 'text',\n               categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            },\n            colors: ['#C046D3'],\n            markers: {\n               size: [8],\n               strokeWidth: [0],\n               strokeColors: ['#C046D3'],\n               border: 0,\n               colors: ['#C046D3'],\n               hover: {\n                  size: 10,\n               },\n            },\n            yaxis: {\n               title: {\n                  text: '',\n               },\n            },\n         },\n      };\n   }\n\n   render() {\n      return (\n         <div id=\"chart\">\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={350} />\n         </div>\n      );\n   }\n}\n\nexport default ApexLine2;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar4.js",["1048"],"import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport 'chartjs-plugin-streaming';\n\nconst createReactClass = require('create-react-class');\n\nconst data = {\n   labels: ['4', '1', '2', '3', '4', '5', '6', '9', '1', '2', '3', '4', '5', '6'],\n   datasets: [\n      {\n         label: 'My First dataset',\n         backgroundColor: 'rgba(105,255,147,1)',\n         strokeColor: 'rgba(105,255,147,1)',\n         pointColor: 'rgba(0,0,0,0)',\n         pointStrokeColor: 'rgba(105,255,147,1)',\n         pointHighlightFill: 'rgba(105,255,147,1)',\n         pointHighlightStroke: 'rgba(105,255,147,1)',\n         data: [],\n      },\n   ],\n};\n\nconst options = {\n   tooltips: {\n      enabled: false,\n   },\n   legend: {\n      display: false,\n   },\n   scales: {\n      yAxes: [\n         {\n            display: false,\n         },\n      ],\n      xAxes: [\n         {\n            display: false,\n            type: 'realtime',\n            realtime: {\n               onRefresh() {\n                  data.datasets[0].data.push({\n                     x: Date.now(),\n                     y: Math.random() * 100,\n                  });\n               },\n               delay: 2000,\n            },\n         },\n      ],\n   },\n   title: {\n      display: false,\n   },\n   plugins: {\n      streaming: {\n         // per-chart option\n         frameRate: 0, // chart is drawn 30 times every second\n      },\n   },\n};\n\nexport default class LineExample extends React.Component {\n   render() {\n      return <Bar data={data} options={options} height={150} />;\n   }\n}\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar3.js",["1049","1050","1051","1052","1053","1054"],"import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nclass BarChart3 extends Component {\n   render() {\n      const data = {\n         labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n         datasets: [\n            {\n               label: 'My First dataset',\n               data: [65, 59, 80, 81, 56, 55, 40, 88, 45, 95, 54, 76],\n               borderColor: this.props.color ? this.props.color : '#3101A3',\n               borderWidth: '0',\n               backgroundColor: this.props.color ? this.props.color : '#3101A3',\n            },\n         ],\n      };\n\n      const options = {\n         legend: false,\n         responsive: true,\n         maintainAspectRatio: false,\n         scales: {\n            yAxes: [\n               {\n                  display: false,\n                  ticks: {\n                     beginAtZero: true,\n                     display: false,\n                     max: 100,\n                     min: 0,\n                     stepSize: 10,\n                  },\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n               },\n            ],\n            xAxes: [\n               {\n                  display: false,\n                  barPercentage: 0.6,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  ticks: {\n                     display: false,\n                  },\n               },\n            ],\n         },\n      };\n\n      return (\n         <>\n            <Bar data={data} height={this.props.height ? this.props.height : 100} options={options} />\n         </>\n      );\n   }\n}\n\nexport default BarChart3;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/bar2.js",["1055","1056","1057","1058"],"import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nclass BarChart2 extends Component {\n   render() {\n      const data = {\n         labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n         datasets: [\n            {\n               label: 'My First dataset',\n               data: [65, 59, 80, 81, 56, 55, 40, 88, 45, 95, 54, 76],\n               borderColor: this.props.color ? this.props.color : '#2f4cdd',\n               borderWidth: '0',\n               backgroundColor: this.props.color ? this.props.color : '#2f4cdd',\n            },\n         ],\n      };\n\n      const options = {\n         legend: false,\n         responsive: true,\n         maintainAspectRatio: false,\n         scales: {\n            yAxes: [\n               {\n                  display: false,\n                  ticks: {\n                     beginAtZero: true,\n                     display: false,\n                     max: 100,\n                     min: 0,\n                     stepSize: 10,\n                  },\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n               },\n            ],\n            xAxes: [\n               {\n                  display: false,\n                  barPercentage: 0.1,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  ticks: {\n                     display: false,\n                  },\n               },\n            ],\n         },\n      };\n\n      return (\n         <>\n            <Bar data={data} height={100} options={options} />\n         </>\n      );\n   }\n}\n\nexport default BarChart2;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/line6.js",["1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072"],"import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nclass LineChart6 extends Component {\n   render() {\n      const data = {\n         labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n         datasets: [\n            {\n               label: 'My First dataset',\n               data: [28, 35, 36, 48, 46, 42, 60],\n               backgroundColor: '#ffff',\n               borderColor: this.props.color ? this.props.color : '#5514A4',\n               borderWidth: 0,\n               strokeColor: this.props.color ? this.props.color : '#5514A4',\n               capBezierPoints: !0,\n               pointColor: this.props.color ? this.props.color : '#fff',\n               pointBorderColor: this.props.color ? this.props.color : '#fff',\n               pointBackgroundColor: this.props.color ? this.props.color : '#5514A4',\n               pointBorderWidth: 0,\n               pointRadius: 1,\n               pointHoverBorderColor: this.props.color ? this.props.color : '#5514A4',\n               pointHoverRadius: 3,\n               pointStyle: 'none',\n            },\n         ],\n      };\n\n      const options = {\n         responsive: true,\n         maintainAspectRatio: false,\n         tooltips: {\n            enabled: true,\n         },\n         legend: {\n            display: false,\n            labels: {\n               usePointStyle: false,\n            },\n         },\n         scales: {\n            xAxes: [\n               {\n                  display: false,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  scaleLabel: {\n                     display: false,\n                     labelString: 'Month',\n                  },\n                  ticks: {\n                     beginAtZero: true,\n                  },\n               },\n            ],\n            yAxes: [\n               {\n                  display: false,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  scaleLabel: {\n                     display: true,\n                     labelString: 'Value',\n                  },\n               },\n            ],\n         },\n         title: {\n            display: true,\n         },\n      };\n      return (\n         <>\n            <Line data={data} options={options} height={this.props.height ? this.props.height : 300} />\n         </>\n      );\n   }\n}\n\nexport default LineChart6;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/line4.js",["1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098"],"/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nclass LineChart3 extends Component {\n   render() {\n      const data = {\n         labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n         datasets: [\n            {\n               label: 'My First dataset',\n               data: [28, 35, 36, 48, 46, 42, 60],\n               backgroundColor: this.props.color ? this.props.color : '#5514A4',\n               borderColor: this.props.borderColor\n                  ? this.props.borderColor\n                  : this.props.color\n                  ? this.props.color\n                  : '#5514A4',\n               strokeColor: this.props.borderColor\n                  ? this.props.borderColor\n                  : this.props.color\n                  ? this.props.color\n                  : '#5514A4',\n               capBezierPoints: !0,\n               pointColor: this.props.borderColor\n                  ? this.props.borderColor\n                  : this.props.color\n                  ? this.props.color\n                  : '#fff',\n               pointBorderColor: this.props.borderColor\n                  ? this.props.borderColor\n                  : this.props.color\n                  ? this.props.color\n                  : '#fff',\n               pointBackgroundColor: this.props.borderColor\n                  ? this.props.borderColor\n                  : this.props.color\n                  ? this.props.color\n                  : '#5514A4',\n               borderWidth: 2,\n               pointBorderWidth: 0,\n               pointRadius: 3,\n               pointHoverBorderColor: this.props.color ? this.props.color : '#5514A4',\n               pointHoverRadius: 0,\n               pointStyle: 'line',\n            },\n         ],\n      };\n\n      const options = {\n         responsive: true,\n         maintainAspectRatio: false,\n         tooltips: {\n            enabled: true,\n         },\n         legend: {\n            display: false,\n            labels: {\n               usePointStyle: false,\n            },\n         },\n         scales: {\n            xAxes: [\n               {\n                  display: false,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  scaleLabel: {\n                     display: false,\n                     labelString: 'Month',\n                  },\n                  ticks: {\n                     beginAtZero: true,\n                  },\n               },\n            ],\n            yAxes: [\n               {\n                  display: false,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  scaleLabel: {\n                     display: true,\n                     labelString: 'Value',\n                  },\n               },\n            ],\n         },\n         title: {\n            display: true,\n         },\n      };\n      return (\n         <>\n            <Line data={data} options={options} height={this.props.height ? this.props.height : 300} />\n         </>\n      );\n   }\n}\n\nexport default LineChart3;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/Chartjs/line3.js",["1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116"],"/* eslint-disable no-nested-ternary */\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nclass LineChart3 extends Component {\n   render() {\n      const data = {\n         labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n         datasets: [\n            {\n               label: 'My First dataset',\n               data: [28, 35, 36, 48, 46, 42, 60],\n               backgroundColor: this.props.color ? this.props.color : this.props.color ? this.props.color : '#45FCC1',\n               borderColor: this.props.color ? this.props.color : this.props.color ? this.props.color : '#45FCC1',\n               borderWidth: 2,\n               strokeColor: this.props.color ? this.props.color : '#45FCC1',\n               capBezierPoints: !0,\n               pointColor: '#fff',\n               pointBorderColor: '#fff',\n               pointBackgroundColor: this.props.color ? this.props.color : '#45FCC1',\n               pointBorderWidth: 3,\n               pointRadius: 0,\n               pointHoverBackgroundColor: '#FFF',\n               pointHoverBorderColor: this.props.border\n                  ? this.props.border\n                  : this.props.color\n                  ? this.props.color\n                  : '#45FCC1',\n               pointHoverRadius: 0,\n            },\n         ],\n      };\n\n      const options = {\n         responsive: true,\n         maintainAspectRatio: false,\n         tooltips: {\n            enabled: false,\n         },\n         legend: {\n            display: false,\n            labels: {\n               usePointStyle: false,\n            },\n         },\n         scales: {\n            xAxes: [\n               {\n                  display: false,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  scaleLabel: {\n                     display: false,\n                     labelString: 'Month',\n                  },\n               },\n            ],\n            yAxes: [\n               {\n                  display: false,\n                  gridLines: {\n                     display: false,\n                     drawBorder: false,\n                  },\n                  scaleLabel: {\n                     display: true,\n                     labelString: 'Value',\n                  },\n               },\n            ],\n         },\n         title: {\n            display: false,\n         },\n      };\n      return <Line data={data} options={options} height={this.props.height ? this.props.height : 300} />;\n   }\n\n   // componentDidMount() {\n   //     const { datasets } = this.refs.chart.chartInstance.data\n   //     console.log(datasets[0].data);\n   // }\n}\n\nexport default LineChart3;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/charts/chartflot/Bar.js",["1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128"],"import React, { Component } from 'react';\r\nimport { Line, Bar, HorizontalBar, Radar, Pie, Polar } from 'react-chartjs-2';\r\n\r\nclass BarChart extends Component {\r\n   render() {\r\n      const data = {\r\n         labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n         datasets: [\r\n            {\r\n               label: 'My First dataset',\r\n               data: [65, 59, 80, 81, 56, 55, 80, 81, 56, 55, 40, 89],\r\n               borderColor: 'rgba(52, 57, 87, 1)',\r\n               borderWidth: '0',\r\n               backgroundColor: this.props.color ? this.props.color : '#40189D',\r\n            },\r\n         ],\r\n      };\r\n\r\n      const options = {\r\n         maintainAspectRatio: false,\r\n         tooltips: {\r\n            enabled: false,\r\n         },\r\n         legend: {\r\n            display: false,\r\n            labels: {\r\n               usePointStyle: false,\r\n            },\r\n         },\r\n         scales: this.props.label\r\n            ? {\r\n                 yAxes: [\r\n                    {\r\n                       ticks: {\r\n                          beginAtZero: true,\r\n                          min: 0,\r\n                       },\r\n                       gridLines: {\r\n                          display: false,\r\n                          drawBorder: false,\r\n                       },\r\n                    },\r\n                 ],\r\n                 xAxes: [\r\n                    {\r\n                       barPercentage: 0.7,\r\n                       gridLines: {\r\n                          display: false,\r\n                          drawBorder: false,\r\n                       },\r\n                    },\r\n                    { barPercentage: 0.1 },\r\n                 ],\r\n              }\r\n            : {\r\n                 xAxes: [{ display: false }],\r\n                 yAxes: [{ display: false }],\r\n              },\r\n      };\r\n\r\n      return (\r\n         <>\r\n            <Bar\r\n               data={data}\r\n               width={this.props.width ? this.props.width : 433}\r\n               height={this.props.height ? this.props.height : 251}\r\n               options={options}\r\n            />\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default BarChart;\r\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/suppliers/SupplierActions.js",["1129","1130"],"import useUrlState from '@ahooksjs/use-url-state';\nimport { useFormik } from 'formik';\nimport Button from 'jsx/components/Button';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, patch, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ButtonGroup, Card } from 'react-bootstrap';\nimport { AiFillCaretLeft, AiFillSave } from 'react-icons/ai';\nimport { Else, If, Then, When } from 'react-if';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst SupplierActions = () => {\n   const history = useHistory();\n   const params = useParams();\n   const [isError, setIsError] = useState(false);\n\n   const [urlState, setUrlState] = useUrlState({});\n\n   const alert = useAlert();\n   const isEditing = useMemo(() => urlState?.type === 'edit', [urlState.type]);\n   const isViewSupplier = useMemo(() => urlState?.type === 'view', [urlState.type]);\n   const isAddSupplier = useMemo(() => params?.id === 'add', [params.id]);\n\n   const query = useQuery(['supplier', params.id], () => get(`/suppliers/id/${params.id}`), {\n      enabled: !isAddSupplier,\n      onError: (err) => {\n         setIsError(true);\n         alert.setErrorAlert({\n            message: 'Invalid URL!',\n            err: { message: ['The page will redirect to manage suppliers.'] },\n            callback: () => history.push('/suppliers'),\n            duration: 3000,\n         });\n      },\n   });\n   const patchMutation = useMutation((payload) => patch(`/suppliers/id/${params.id}`, payload), {\n      onError: (err) => {\n         alert.setErrorAlert({\n            message: 'Unable to edit supplier.',\n            err,\n         });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/suppliers', payload), {\n      onSuccess: () => {\n         history.push('/suppliers');\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add supplier', err });\n      },\n   });\n\n   const mutation = useMemo(() => (isEditing ? patchMutation : postMutation), [isEditing, patchMutation, postMutation]);\n\n   if (!isEditing && !isViewSupplier && !isAddSupplier) {\n      history.push('/suppliers');\n   }\n\n   const formik = useFormik({\n      initialValues: {\n         name: '',\n         phone: '',\n         company: '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         mutation.mutate(values);\n      },\n   });\n\n   useEffect(() => {\n      if (isEditing && query.data) {\n         formik.setFieldValue('name', query.data?.name ?? '');\n         formik.setFieldValue('phone', query.data?.phone ?? '');\n         formik.setFieldValue('company', query.data?.company ?? '');\n      }\n   }, [isEditing, query.data]);\n\n   return (\n      <>\n         <PageTItle activeMenu=\"Suppliers\" motherMenu=\"Manage\" />\n         {alert.getAlert()}\n         <Card>\n            <When condition={patchMutation.isLoading || postMutation.isLoading || query.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <If condition={isAddSupplier || isEditing}>\n               <Then>\n                  <form onSubmit={formik.handleSubmit}>\n                     <Card.Header>\n                        <Card.Title>{isEditing ? 'Edit Supplier' : 'Add New Supplier'}</Card.Title>\n                     </Card.Header>\n                     <Card.Body>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Name</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"name\"\n                                 disabled={isError}\n                                 value={formik.values.name}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Phone</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"phone\"\n                                 disabled={isError}\n                                 value={formik.values.phone}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Company</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"company\"\n                                 disabled={isError}\n                                 value={formik.values.company}\n                              />\n                           </div>\n                        </div>\n                     </Card.Body>\n                     <Card.Footer>\n                        <div className=\"row\">\n                           <div className=\"col-xl-12 tw-justify-center\">\n                              <ButtonGroup>\n                                 <Button\n                                    icon={AiFillCaretLeft}\n                                    variant=\"warning light\"\n                                    onClick={() => history.replace('/suppliers')}\n                                    loading={mutation.isLoading}\n                                 >\n                                    Back\n                                 </Button>\n                                 <Button\n                                    icon={AiFillSave}\n                                    variant=\"primary\"\n                                    type=\"submit\"\n                                    loading={mutation.isLoading}\n                                    disabled={isError}\n                                 >\n                                    Save\n                                 </Button>\n                              </ButtonGroup>\n                           </div>\n                        </div>\n                     </Card.Footer>\n                  </form>\n               </Then>\n               <Else>\n                  <Card.Header>\n                     <Card.Title>View Supplier</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Name</label>\n                           <h4>{query.data?.name ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Phone</label>\n                           <h4>{query.data?.phone ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Company</label>\n                           <h4>{query.data?.company ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                  </Card.Body>\n                  <Card.Footer>\n                     <div className=\"row\">\n                        <div className=\"col-xl-12 tw-justify-center\">\n                           <Button\n                              icon={AiFillCaretLeft}\n                              variant=\"warning light\"\n                              onClick={() => history.replace('/suppliers')}\n                              loading={mutation.isLoading}\n                           >\n                              Back\n                           </Button>\n                        </div>\n                     </div>\n                  </Card.Footer>\n               </Else>\n            </If>\n         </Card>\n      </>\n   );\n};\n\nexport default SupplierActions;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/employees/EmployeeActions.js",["1131","1132","1133"],"import useUrlState from '@ahooksjs/use-url-state';\nimport { useFormik } from 'formik';\nimport Button from 'jsx/components/Button';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, patch, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ButtonGroup, Card } from 'react-bootstrap';\nimport { AiFillCaretLeft, AiFillSave } from 'react-icons/ai';\nimport { Else, If, Then, When } from 'react-if';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst EmployeeActions = () => {\n   const history = useHistory();\n   const params = useParams();\n   const [employee, setEmployee] = useState(null);\n   const [isError, setIsError] = useState(false);\n\n   const [urlState, setUrlState] = useUrlState({});\n\n   const alert = useAlert();\n   const isEditing = useMemo(() => urlState?.type === 'edit', [urlState.type]);\n   const isViewEmployee = useMemo(() => urlState?.type === 'view', [urlState.type]);\n   const isAddEmployee = useMemo(() => params?.id === 'add', [params.id]);\n\n   const query = useQuery(['employee', params.id], () => get(`/employees/id/${params.id}`), {\n      enabled: !isAddEmployee,\n      onError: (err) => {\n         setIsError(true);\n         alert.setErrorAlert({\n            message: 'Invalid URL!',\n            err: { message: ['The page will redirect to manage employees.'] },\n            callback: () => history.push('/employees'),\n            duration: 3000,\n         });\n      },\n   });\n   const patchMutation = useMutation((payload) => patch(`/employees/id/${params.id}`, payload), {\n      onError: (err) => {\n         alert.setErrorAlert({\n            message: 'Unable to edit employee.',\n            err,\n         });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/employees', payload), {\n      onSuccess: () => {\n         history.push('/employees');\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add employee', err });\n      },\n   });\n\n   const mutation = useMemo(() => (isEditing ? patchMutation : postMutation), [isEditing, patchMutation, postMutation]);\n\n   if (!isEditing && !isViewEmployee && !isAddEmployee) {\n      history.push('/employees');\n   }\n\n   const formik = useFormik({\n      initialValues: {\n         name: isEditing ? employee?.name : '',\n         phone: isEditing ? employee?.phone : '',\n         cnic: isEditing ? employee?.cnic : '',\n         address: isEditing ? employee?.address : '',\n         salary: isEditing ? employee?.salary : '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         mutation.mutate(values);\n      },\n   });\n\n   useEffect(() => {\n      if (isEditing && query.data) {\n         formik.setFieldValue('name', query.data?.employee?.name ?? '');\n         formik.setFieldValue('phone', query.data?.employee?.phone ?? '');\n         formik.setFieldValue('cnic', query.data?.employee?.cnic ?? '');\n         formik.setFieldValue('address', query.data?.employee?.address ?? '');\n         formik.setFieldValue('salary', query.data?.employee?.salary ?? '');\n      }\n   }, [isEditing, query.data]);\n\n   return (\n      <>\n         <PageTItle activeMenu=\"employees\" motherMenu=\"Manage\" />\n         {alert.getAlert()}\n         <Card>\n            <When condition={patchMutation.isLoading || postMutation.isLoading || query.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <If condition={isAddEmployee || isEditing}>\n               <Then>\n                  <form onSubmit={formik.handleSubmit}>\n                     <Card.Header>\n                        <Card.Title>{isEditing ? 'Edit Employee' : 'Add New Employee'}</Card.Title>\n                     </Card.Header>\n                     <Card.Body>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Name</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"name\"\n                                 disabled={isError}\n                                 value={formik.values.name}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Phone</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"phone\"\n                                 disabled={isError}\n                                 value={formik.values.phone}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">CNIC</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"cnic\"\n                                 disabled={isError}\n                                 value={formik.values.cnic}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Address</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"address\"\n                                 disabled={isError}\n                                 value={formik.values.address}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Salary</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"salary\"\n                                 disabled={isError}\n                                 value={formik.values.salary}\n                              />\n                           </div>\n                        </div>\n                     </Card.Body>\n                     <Card.Footer>\n                        <div className=\"row\">\n                           <div className=\"col-xl-12 tw-justify-center\">\n                              <ButtonGroup>\n                                 <Button\n                                    icon={AiFillCaretLeft}\n                                    variant=\"warning light\"\n                                    onClick={() => history.replace('/employees')}\n                                    loading={mutation.isLoading}\n                                 >\n                                    Back\n                                 </Button>\n                                 <Button\n                                    icon={AiFillSave}\n                                    variant=\"primary\"\n                                    type=\"submit\"\n                                    loading={mutation.isLoading}\n                                    disabled={isError}\n                                 >\n                                    Save\n                                 </Button>\n                              </ButtonGroup>\n                           </div>\n                        </div>\n                     </Card.Footer>\n                  </form>\n               </Then>\n               <Else>\n                  <Card.Header>\n                     <Card.Title>View Employee</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Name</label>\n                           <h4>{query.data?.employee?.name}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Phone</label>\n                           <h4>{query.data?.employee?.phone}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">CNIC</label>\n                           <h4>{query.data?.employee?.cnic}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Address</label>\n                           <h4>{query.data?.employee?.address}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Salary</label>\n                           <h4>{query.data?.employee?.salary}</h4>\n                        </div>\n                     </div>\n                  </Card.Body>\n                  <Card.Footer>\n                     <div className=\"row\">\n                        <div className=\"col-xl-12 tw-justify-center\">\n                           <Button\n                              icon={AiFillCaretLeft}\n                              variant=\"warning light\"\n                              onClick={() => history.replace('/employees')}\n                              loading={mutation.isLoading}\n                           >\n                              Back\n                           </Button>\n                        </div>\n                     </div>\n                  </Card.Footer>\n               </Else>\n            </If>\n         </Card>\n      </>\n   );\n};\n\nexport default EmployeeActions;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/products/ProductActions.js",["1134","1135","1136","1137","1138","1139"],"import useUrlState from '@ahooksjs/use-url-state';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport { useFormik } from 'formik';\nimport Button from 'jsx/components/Button';\nimport Pagination from 'jsx/components/Pagination';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, patch, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport _ from 'lodash';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ButtonGroup, Card, OverlayTrigger, Popover, Table } from 'react-bootstrap';\nimport { AiFillCaretLeft, AiFillEye, AiFillSave, AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport { useHistory, useParams } from 'react-router-dom';\nimport CreatableSelect from '../../components/CreatableSelect';\n\nconst ProductActions = () => {\n   dayjs.extend(relativeTime);\n\n   const history = useHistory();\n   const params = useParams();\n   const [isError, setIsError] = useState(false);\n   const [salePage, setSalePage] = useState(1);\n   const [saleLimit, setSaleLimit] = useState(5);\n   const [saleSort, setSaleSort] = useState({ field: 'sourcePrice', order: 1 });\n   const [inventoriesPage, setInventoriesPage] = useState(1);\n   const [inventoriesLimit, setInventoriesLimit] = useState(5);\n   const [inventoriesSort, setInventoriesSort] = useState({ field: 'sourcePrice', order: 1 });\n\n   const [urlState, setUrlState] = useUrlState({});\n\n   const alert = useAlert();\n   const getTypes = useQuery('types', () => get('/types'));\n   const queryClient = useQueryClient();\n\n   const isEditing = useMemo(() => urlState?.type === 'edit', [urlState.type]);\n   const isViewProduct = useMemo(() => urlState?.type === 'view', [urlState.type]);\n   const isAddProduct = useMemo(() => params?.id === 'add', [params.id]);\n\n   const query = useQuery(\n      [\n         'product',\n         params.id,\n         salePage,\n         saleLimit,\n         saleSort.field,\n         saleSort.order,\n         inventoriesPage,\n         inventoriesLimit,\n         inventoriesSort.field,\n         inventoriesSort.order,\n      ],\n      () =>\n         get(\n            `/products/id/${params.id}?salePage=${salePage}&saleLimit=${saleLimit}&saleSort[${saleSort.field}]=${saleSort.order}&inventoriesPage=${inventoriesPage}&inventoriesLimit=${inventoriesLimit}&inventoriesSort[${inventoriesSort.field}]=${inventoriesSort.order}`\n         ),\n      {\n         enabled: !isAddProduct,\n         onError: (err) => {\n            setIsError(true);\n            alert.setErrorAlert({\n               message: 'Invalid URL!',\n               err: { message: ['The page will redirect to manage products.'] },\n               callback: () => history.push('/products'),\n               duration: 3000,\n            });\n         },\n      }\n   );\n   const patchMutation = useMutation((payload) => patch(`/products/id/${params.id}`, payload), {\n      onError: (err) => {\n         alert.setErrorAlert({\n            message: 'Unable to edit product.',\n            err,\n         });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/products', payload), {\n      onSuccess: () => {\n         history.push('/products');\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add product', err });\n      },\n   });\n   const postTypeMutation = useMutation((payload) => post('/types', payload), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('types');\n      },\n   });\n\n   const mutation = useMemo(() => (isEditing ? patchMutation : postMutation), [isEditing, patchMutation, postMutation]);\n\n   if (!isEditing && !isViewProduct && !isAddProduct) {\n      history.push('/products');\n   }\n\n   const formik = useFormik({\n      initialValues: {\n         title: '',\n         modelNumber: '',\n         type: '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         mutation.mutate(values);\n      },\n   });\n\n   const handleCreateType = async (title) => {\n      postTypeMutation.mutate({ title });\n      // history.push({ pathname: '/types', search: `?action=add&title=${title}&redirect=/products/add` });\n   };\n   const handleInventoriesSort = (key) => {\n      setInventoriesSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n\n   useEffect(() => {\n      if (isEditing && query.data?.product) {\n         formik.setFieldValue('title', query.data?.product?.title ?? '');\n         formik.setFieldValue('modelNumber', query.data?.product?.modelNumber ?? '');\n         formik.setFieldValue('type', query.data?.product?.type?._id ?? '');\n      }\n   }, [isEditing, query.data?.product]);\n   return (\n      <>\n         <div className=\"row p-0 m-0\">\n            <div className=\"col-10\">\n               <PageTItle activeMenu=\"View\" motherMenu=\"Products\" />\n            </div>\n            <div className=\"col-1\">\n               <Button\n                  icon={AiFillCaretLeft}\n                  variant=\"warning light\"\n                  onClick={() => history.replace('/products')}\n                  loading={mutation.isLoading}\n               >\n                  Back\n               </Button>\n            </div>\n         </div>\n         {alert.getAlert()}\n         <Card>\n            <When condition={getTypes.isLoading || postTypeMutation.isLoading || query.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <If condition={isAddProduct || isEditing}>\n               <Then>\n                  <form onSubmit={formik.handleSubmit}>\n                     <Card.Header>\n                        <Card.Title>{isEditing ? 'Edit Product' : 'Add New product'}</Card.Title>\n                     </Card.Header>\n                     <Card.Body>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Title</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"title\"\n                                 disabled={isError}\n                                 value={formik.values.title}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Model Number</label>\n                              <input\n                                 className=\"form-control\"\n                                 onChange={formik.handleChange}\n                                 type=\"text\"\n                                 name=\"modelNumber\"\n                                 disabled={isError}\n                                 value={formik.values.modelNumber}\n                              />\n                           </div>\n                        </div>\n                        <div className=\"row\">\n                           <div className=\"form-group col-xl-6\">\n                              <label className=\"col-form-label\">Type</label>\n                              {(query.data?.product || isAddProduct) && (\n                                 <CreatableSelect\n                                    isClearable\n                                    defaultValue={\n                                       isEditing && {\n                                          _id: query.data?.product?.type?.id,\n                                          label: query.data?.product?.type?.title,\n                                          value: query.data?.product?.type?.title,\n                                       }\n                                    }\n                                    onChange={(e) => formik.setFieldValue('type', e?._id)}\n                                    options={\n                                       getTypes.data?.length > 0 &&\n                                       getTypes.data.map((e) => ({ ...e, label: e.title, value: e.title }))\n                                    }\n                                    onCreateOption={handleCreateType}\n                                 />\n                              )}\n                           </div>\n                        </div>\n                     </Card.Body>\n                     <Card.Footer>\n                        <div className=\"row\">\n                           <div className=\"col-xl-12 tw-justify-center\">\n                              <ButtonGroup>\n                                 {/* <Button\n                                    icon={AiFillCaretLeft}\n                                    variant=\"warning light\"\n                                    onClick={() => history.replace('/products')}\n                                    loading={mutation.isLoading}\n                                 >\n                                    Back\n                                 </Button> */}\n                                 <Button\n                                    icon={AiFillSave}\n                                    variant=\"primary\"\n                                    type=\"submit\"\n                                    loading={mutation.isLoading}\n                                    disabled={isError}\n                                 >\n                                    Save\n                                 </Button>\n                              </ButtonGroup>\n                           </div>\n                        </div>\n                     </Card.Footer>\n                  </form>\n               </Then>\n               <Else>\n                  <Card.Header>\n                     <Card.Title>View product</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Title</label>\n                           <h4>{query.data?.product?.title ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Model Number</label>\n                           <h4>{query.data?.product?.modelNumber ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Type</label>\n                           <h4>{query.data?.product?.type?.title ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                  </Card.Body>\n               </Else>\n            </If>\n         </Card>\n         <When condition={isViewProduct}>\n            <Card>\n               <When condition={query.isLoading}>\n                  <SpinnerOverlay />\n               </When>\n               <Card.Header>\n                  <Card.Title>View Expenses</Card.Title>\n               </Card.Header>\n               <Card.Body>\n                  <If condition={query.data?.inventories?.totalDocs > 0}>\n                     <Then>\n                        <Table className=\"tw-relative\" responsive>\n                           <thead>\n                              <tr>\n                                 <th className=\"width80\">\n                                    <strong>#</strong>\n                                 </th>\n                                 <th>\n                                    <strong\n                                       className=\"tw-cursor-pointer\"\n                                       onClick={() => handleInventoriesSort('supplier')}\n                                    >\n                                       SUPPLIER\n                                       <span>\n                                          <When condition={inventoriesSort.field !== 'supplier'}>\n                                             <FaSort className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'supplier' && inventoriesSort.order === -1\n                                             }\n                                          >\n                                             <FaSortDown className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'supplier' && inventoriesSort.order === 1\n                                             }\n                                          >\n                                             <FaSortUp className=\"d-inline mx-1\" />\n                                          </When>\n                                       </span>\n                                    </strong>\n                                 </th>\n                                 <th>\n                                    <strong\n                                       className=\"tw-cursor-pointer\"\n                                       onClick={() => handleInventoriesSort('modelNumber')}\n                                    >\n                                       MODEL NUMBER\n                                       <span>\n                                          <When condition={inventoriesSort.field !== 'modelNumber'}>\n                                             <FaSort className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'modelNumber' && inventoriesSort.order === -1\n                                             }\n                                          >\n                                             <FaSortDown className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'modelNumber' && inventoriesSort.order === 1\n                                             }\n                                          >\n                                             <FaSortUp className=\"d-inline mx-1\" />\n                                          </When>\n                                       </span>\n                                    </strong>\n                                 </th>\n                                 <th>\n                                    <strong\n                                       className=\"tw-cursor-pointer\"\n                                       onClick={() => handleInventoriesSort('sourcePrice')}\n                                    >\n                                       PRICE\n                                       <span>\n                                          <When condition={inventoriesSort.field !== 'sourcePrice'}>\n                                             <FaSort className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'sourcePrice' && inventoriesSort.order === -1\n                                             }\n                                          >\n                                             <FaSortDown className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'sourcePrice' && inventoriesSort.order === 1\n                                             }\n                                          >\n                                             <FaSortUp className=\"d-inline mx-1\" />\n                                          </When>\n                                       </span>\n                                    </strong>\n                                 </th>\n                                 <th>\n                                    <strong className=\"tw-cursor-pointer\" onClick={() => handleInventoriesSort('paid')}>\n                                       PAID\n                                       <span>\n                                          <When condition={inventoriesSort.field !== 'paid'}>\n                                             <FaSort className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={\n                                                inventoriesSort.field === 'paid' && inventoriesSort.order === -1\n                                             }\n                                          >\n                                             <FaSortDown className=\"d-inline mx-1\" />\n                                          </When>\n                                          <When\n                                             condition={inventoriesSort.field === 'paid' && inventoriesSort.order === 1}\n                                          >\n                                             <FaSortUp className=\"d-inline mx-1\" />\n                                          </When>\n                                       </span>\n                                    </strong>\n                                 </th>\n                              </tr>\n                           </thead>\n                           <tbody>\n                              {query.data?.inventories?.docs.map((e, index) => (\n                                 <tr key={`${e._id}`} className={e.isRemaining && 'tw-bg-red-400 tw-text-gray-50'}>\n                                    <td>\n                                       <strong className={e.isRemaining && 'tw-text-gray-50'}>\n                                          {query.data.inventories?.pagingCounter * (index + 1)}\n                                       </strong>\n                                    </td>\n                                    <td>{e?.supplier?.name ?? 'N/A'}</td>\n                                    <td>{e?.product?.modelNumber ?? 'N/A'}</td>\n                                    <td>{e?.sourcePrice ?? 'N/a'}</td>\n                                    <td>{e?.paid ?? 'N/A'}</td>\n                                    <td>\n                                       <OverlayTrigger\n                                          trigger={['hover', 'hover']}\n                                          placement=\"top\"\n                                          overlay={\n                                             <Popover className=\"tw-border-gray-500\">\n                                                <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                   dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                      ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                      : dayjs(e.createdAt).fromNow()\n                                                }.`}</Popover.Content>\n                                             </Popover>\n                                          }\n                                       >\n                                          <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                       </OverlayTrigger>\n                                    </td>\n                                 </tr>\n                              ))}\n                           </tbody>\n                        </Table>\n                     </Then>\n                     <Else>\n                        <When condition={!query.isLoading}>\n                           <p className=\"tw-m-0\">No Puchahes created</p>\n                        </When>\n                     </Else>\n                  </If>\n               </Card.Body>\n            </Card>\n         </When>\n         <When condition={inventoriesLimit > 5 ? true : query.data?.inventories?.totalPages > 1}>\n            <Pagination\n               page={inventoriesPage}\n               onPageChange={setInventoriesPage}\n               onLimitChange={setInventoriesLimit}\n               {..._.omit(query.data, ['docs'])}\n               isLimitDisabled={query.isLoading}\n            />\n         </When>\n      </>\n   );\n};\n\nexport default ProductActions;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/types/index.js",["1140","1141","1142"],"import useUrlState from '@ahooksjs/use-url-state';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport Button from 'jsx/components/Button';\nimport ModalWrapper from 'jsx/components/ModalWrapper';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { del, get, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport React, { useMemo, useState } from 'react';\nimport { ButtonGroup, Card, Col, OverlayTrigger, Popover, Row, Table } from 'react-bootstrap';\nimport { AiFillDelete, AiFillEye, AiFillPlusCircle, AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst Types = () => {\n   const history = useHistory();\n   dayjs.extend(relativeTime);\n   const [urlState, setUrlState] = useUrlState({});\n\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [search, setSearch] = useState('');\n   const [showModal, setShowModal] = useState(false);\n   const [title, setTitle] = useState('');\n\n   const alert = useAlert();\n   const queryClient = useQueryClient();\n\n   const query = useQuery('types', () => get('/types', page, limit, '', '', search));\n   const postMutation = useMutation((payload) => post('/types', payload), {\n      onSuccess: () => {\n         if (urlState.redirect) {\n            history.replace(urlState.redirect);\n         }\n         setShowModal(false);\n         query.refetch();\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add unit', err });\n      },\n   });\n   const deleteMutation = useMutation((id) => del(`/types/id/${id}`), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('types');\n         alert.setAlert({\n            message: 'Type deleted successfully',\n            variant: 'success',\n         });\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to delete Type', err });\n      },\n   });\n\n   const mutation = useMemo(() => postMutation, [postMutation]);\n\n   const handleOnClickAdd = () => {\n      setShowModal(true);\n      setTitle('');\n      // setUrlState({ action: 'add' });\n   };\n\n   const handleOnClickDelete = (id) => {\n      swal({\n         title: 'Are you sure?',\n         text: 'Once deleted, you will not be able to recover it!',\n         icon: 'warning',\n         buttons: true,\n         dangerMode: true,\n      }).then((willDelete) => {\n         if (willDelete) {\n            deleteMutation.mutate(id);\n         }\n      });\n   };\n   const handleOnClickView = (id) => {\n      history.push(`/products/types/${id}`);\n   };\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      mutation.mutate({ title });\n   };\n   const alertMarkup = alert.getAlert();\n\n   return (\n      <>\n         {alertMarkup ? (\n            <Row>\n               <Col lg={12}>{alertMarkup}</Col>\n            </Row>\n         ) : null}\n         <Card className=\"h-100\">\n            <When condition={query.isLoading || deleteMutation.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <Card.Header>\n               <Card.Title>Manage types</Card.Title>\n               <Button size=\"sm\" variant=\"primary\" icon={AiFillPlusCircle} onClick={handleOnClickAdd}>\n                  Add New Type\n               </Button>\n            </Card.Header>\n            <Card.Body>\n               <If condition={query.data?.length > 0}>\n                  <Then>\n                     <Table className=\"tw-relative\" responsive>\n                        <thead>\n                           <tr>\n                              <th className=\"width80\">\n                                 <strong>#</strong>\n                              </th>\n                              <th>\n                                 <strong>TITLE</strong>\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {query.data?.map((e, index) => (\n                              <tr key={`${e._id}`}>\n                                 <td>\n                                    <strong>{index + 1}</strong>\n                                 </td>\n                                 <td>{e.title}</td>\n                                 <td>\n                                    <OverlayTrigger\n                                       trigger={['hover', 'hover']}\n                                       placement=\"top\"\n                                       overlay={\n                                          <Popover className=\"tw-border-gray-500\">\n                                             <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                   ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                   : dayjs(e.createdAt).fromNow()\n                                             }.`}</Popover.Content>\n                                          </Popover>\n                                       }\n                                    >\n                                       <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                    </OverlayTrigger>\n                                 </td>\n                                 <td>\n                                    <ButtonGroup>\n                                       <Button\n                                          variant=\"dark\"\n                                          size=\"sm\"\n                                          icon={AiFillEye}\n                                          onClick={() => handleOnClickView(e._id)}\n                                       />\n                                       <Button\n                                          variant=\"danger\"\n                                          size=\"sm\"\n                                          icon={AiFillDelete}\n                                          onClick={() => handleOnClickDelete(e._id)}\n                                       />\n                                    </ButtonGroup>\n                                 </td>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </Table>\n                  </Then>\n                  <Else>\n                     <When condition={!query.isLoading}>\n                        <p className=\"tw-m-0\">No types created</p>\n                     </When>\n                  </Else>\n               </If>\n            </Card.Body>\n         </Card>\n         {/* <When condition={limit > 5 ? true : query.data?.totalPages > 1}>\n            <Pagination\n               page={page}\n               onPageChange={setPage}\n               onLimitChange={setLimit}\n               {..._.omit(query.data)}\n               isLimitDisabled={query.isLoading || deleteMutation.isLoading}\n            />\n         </When> */}\n         <ModalWrapper\n            show={showModal}\n            onHide={() => {\n               setShowModal(false);\n               setUrlState({});\n            }}\n            title=\"Add New Type\"\n            isLoading={query.isLoading || postMutation.isLoading}\n            size=\"md\"\n            onSubmit={handleSubmit}\n            submitButtonText=\"Confirm\"\n         >\n            <form onSubmit={handleSubmit}>\n               <div className=\"row\">\n                  <div className=\"form-group col-xl-6\">\n                     <label className=\"col-form-label\">Title</label>\n                     <input\n                        className=\"form-control\"\n                        onChange={(e) => setTitle(e.target.value)}\n                        type=\"text\"\n                        name=\"title\"\n                        value={title}\n                     />\n                     <button type=\"submit\" className=\"tw-invisible\" />\n                  </div>\n               </div>\n            </form>\n         </ModalWrapper>\n      </>\n   );\n};\n\nexport default React.memo(Types);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/units/index.js",["1143","1144","1145","1146","1147","1148","1149","1150"],"import useUrlState from '@ahooksjs/use-url-state';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport Button from 'jsx/components/Button';\nimport ModalWrapper from 'jsx/components/ModalWrapper';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { del, get, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ButtonGroup, Card, Col, OverlayTrigger, Popover, Row, Table } from 'react-bootstrap';\nimport { AiFillDelete, AiFillPlusCircle, AiOutlineQuestionCircle, AiFillEye } from 'react-icons/ai';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport CreatableSelect from '../../components/CreatableSelect';\n\nconst Units = () => {\n   const history = useHistory();\n   dayjs.extend(relativeTime);\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [urlState, setUrlState] = useUrlState({});\n   const [search, setSearch] = useState('');\n\n   const [showModal, setShowModal] = useState(false);\n   const [selectedRow, setSelectedRow] = useState(null);\n\n   const alert = useAlert();\n\n   const queryClient = useQueryClient();\n\n   const query = useQuery(['units', page, limit, search], () => get('/units', page, limit, '', '', search));\n   const getTypes = useQuery('types', () => get('/types'));\n   const deleteMutation = useMutation((id) => del(`/units/id/${id}`), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('units');\n         alert.setAlert({\n            message: 'Unit deleted successfully',\n            variant: 'success',\n         });\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to delete Unit', err });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/units', payload), {\n      onSuccess: () => {\n         setShowModal(false);\n         setUrlState({});\n         query.refetch();\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add unit', err });\n      },\n   });\n   const postTypeMutation = useMutation((payload) => post('/types', payload), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('types');\n      },\n   });\n\n   const isAdd = useMemo(() => urlState?.action === 'add', [urlState.action]);\n   const mutation = useMemo(() => postMutation, [postMutation]);\n\n   const formik = useFormik({\n      initialValues: {\n         title: '',\n         value: '',\n         type: '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         mutation.mutate(values);\n      },\n   });\n\n   const handleOnClickAdd = () => {\n      setShowModal(true);\n      formik.setFieldValue('title', '');\n      formik.setFieldValue('value', '');\n      formik.setFieldValue('type', '');\n      // setUrlState({ action: 'add' });\n   };\n\n   const handleOnClickDelete = (id) => {\n      swal({\n         title: 'Are you sure?',\n         text: 'Once deleted, you will not be able to recover it!',\n         icon: 'warning',\n         buttons: true,\n         dangerMode: true,\n      }).then((willDelete) => {\n         if (willDelete) {\n            deleteMutation.mutate(id);\n         }\n      });\n   };\n   const handleOnClickView = (id) => {\n      history.push(`/products/units/${id}`);\n   };\n\n   const handleCreateType = (title) => {\n      postTypeMutation.mutate({ title });\n\n      // history.push({ pathname: '/types', search: `?action=add&title=${title}&redirect=/units?action=add` });\n   };\n\n   const alertMarkup = alert.getAlert();\n\n   return (\n      <>\n         {/* <PageTItle activeMenu=\"units\" motherMenu=\"Manage\" /> */}\n         {/* <div className=\"row tw-mb-8\">\n            <div className=\"col-xl-6\">\n               <Button variant=\"primary\" icon={AiFillPlusCircle} onClick={handleOnClickAdd}>\n                  Add New Unit\n               </Button>\n            </div>\n         </div> */}\n         {alertMarkup ? (\n            <Row>\n               <Col lg={12}>{alertMarkup}</Col>\n            </Row>\n         ) : null}\n         <Card className=\"h-100\">\n            <When condition={query.isLoading || deleteMutation.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <Card.Header>\n               <Card.Title>Manage units</Card.Title>\n               <Button size=\"sm\" variant=\"primary\" icon={AiFillPlusCircle} onClick={handleOnClickAdd}>\n                  Add New Unit\n               </Button>\n            </Card.Header>\n            <Card.Body>\n               <If condition={query.data?.length > 0}>\n                  <Then>\n                     <Table className=\"tw-relative\" responsive>\n                        <thead>\n                           <tr>\n                              <th className=\"width80\">\n                                 <strong>#</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\">TITLE</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\">VALUE</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\">TYPE</strong>\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {query.data?.map((e, index) => (\n                              <tr key={`${e._id}`}>\n                                 <td>\n                                    <strong>{index + 1}</strong>\n                                 </td>\n                                 <td>{e.title}</td>\n                                 <td>{e.value}</td>\n                                 <td>{(e.type && e.type?.title) ?? 'N/A'}</td>\n                                 <td>\n                                    <OverlayTrigger\n                                       trigger={['hover', 'hover']}\n                                       placement=\"top\"\n                                       overlay={\n                                          <Popover className=\"tw-border-gray-500\">\n                                             <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                   ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                   : dayjs(e.createdAt).fromNow()\n                                             }.`}</Popover.Content>\n                                          </Popover>\n                                       }\n                                    >\n                                       <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                    </OverlayTrigger>\n                                 </td>\n                                 <td>\n                                    <ButtonGroup>\n                                       <Button\n                                          variant=\"dark\"\n                                          size=\"sm\"\n                                          icon={AiFillEye}\n                                          onClick={() => handleOnClickView(e._id)}\n                                       />\n                                       <Button\n                                          variant=\"danger\"\n                                          size=\"sm\"\n                                          icon={AiFillDelete}\n                                          onClick={() => handleOnClickDelete(e._id)}\n                                       />\n                                    </ButtonGroup>\n                                 </td>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </Table>\n                  </Then>\n                  <Else>\n                     <When condition={!query.isLoading}>\n                        <p className=\"tw-m-0\">No units created</p>\n                     </When>\n                  </Else>\n               </If>\n            </Card.Body>\n         </Card>\n\n         {/* ADD Modal */}\n         <ModalWrapper\n            show={showModal}\n            onHide={() => {\n               setShowModal(false);\n               setUrlState({});\n            }}\n            title=\"Add New Unit\"\n            isLoading={query.isLoading || postMutation.isLoading}\n            size=\"md\"\n            onSubmit={formik.handleSubmit}\n            submitButtonText=\"Confirm\"\n         >\n            <When condition={getTypes.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <form onSubmit={formik.handleSubmit}>\n               <div className=\"row\">\n                  <div className=\"form-group col-xl-6\">\n                     <label className=\"col-form-label\">Title</label>\n                     <input\n                        className=\"form-control\"\n                        onChange={formik.handleChange}\n                        type=\"text\"\n                        name=\"title\"\n                        value={formik.values.title}\n                     />\n                  </div>\n               </div>\n               <div className=\"row\">\n                  <div className=\"form-group col-xl-6\">\n                     <label className=\"col-form-label\">Value</label>\n                     <input\n                        className=\"form-control\"\n                        onChange={formik.handleChange}\n                        type=\"text\"\n                        name=\"value\"\n                        value={formik.values.value}\n                     />\n                  </div>\n                  <button type=\"submit\" className=\"tw-invisible\" />\n               </div>\n            </form>\n            <div className=\"row\">\n               <div className=\"form-group col-xl-6\">\n                  <label className=\"col-form-label\">Type</label>\n                  <CreatableSelect\n                     isClearable\n                     onChange={(e) => formik.setFieldValue('type', e?._id)}\n                     options={\n                        getTypes.data?.length > 0 &&\n                        getTypes.data.map((e) => ({ ...e, label: e.title, value: e.title }))\n                     }\n                     onCreateOption={handleCreateType}\n                  />\n               </div>\n            </div>\n         </ModalWrapper>\n      </>\n   );\n};\n\nexport default React.memo(Units);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/ModalWrapper.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/purchase/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/components/CreatableSelect.js",["1151","1152"],"import Creatable from 'react-select/creatable';\n\nconst selectStyles = {\n   control: (provided, state) => {\n      provided.borderColor = state.menuIsOpen ? '#44bdec' : 'hsl(0, 0%, 80%)';\n      provided.boxShadow = state.menuIsOpen ? '0 0 0 1px #44bdec' : '';\n      provided['&:hover'] = { borderColor: '#44bdec' };\n      provided.justifyContent = 'center';\n      provided.paddingTop = '0.2rem';\n      provided.paddingBottom = '0.2rem';\n\n      return provided;\n   },\n   valueContainer: (provided, state) => {\n      provided.justifyContent = 'center';\n      return provided;\n   },\n   menu: (provided, state) => {\n      provided.textAlign = 'center';\n      return provided;\n   },\n   option: (provided, state) => {\n      provided.backgroundColor = state.isSelected || state.isFocused ? '#44bdec' : 'transparent';\n\n      if (state.isFocused) provided.color = 'white';\n      return provided;\n   },\n};\n\nconst Select = ({ className = '', ...props }) => (\n   <Creatable menuPlacement=\"auto\" className={`tw-w-[auto] ${className}`} styles={selectStyles} {...props} />\n);\n\nexport default Select;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/sale/index.js",["1153"],"import { useDebounce } from 'ahooks';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport Button from 'jsx/components/Button';\nimport Pagination from 'jsx/components/Pagination';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { del, get, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport _ from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport { ButtonGroup, Card, Col, OverlayTrigger, Popover, Row, Table } from 'react-bootstrap';\nimport { AiFillDelete, AiFillEdit, AiFillEye, AiFillPlusCircle, AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst Sale = () => {\n   dayjs.extend(relativeTime);\n   const history = useHistory();\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [sort, setSort] = useState({ field: null, order: -1 });\n   const [search, setSearch] = useState('');\n   const debouncedSearchValue = useDebounce(search, { wait: 500 });\n\n   const alert = useAlert();\n   const queryClient = useQueryClient();\n\n   const query = useQuery(['sales', page, limit, sort.field, sort.order, debouncedSearchValue], () =>\n      get('/sales', page, limit, sort.field, sort.order, debouncedSearchValue)\n   );\n   const deleteMutation = useMutation((id) => del(`/sales/id/${id}`), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('sales');\n         alert.setAlert({\n            message: 'Sale deleted successfully',\n            variant: 'success',\n         });\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to delete sale', err });\n      },\n   });\n\n   const handleOnClickEdit = (obj) => {\n      history.push({ pathname: `/sales/${obj._id}`, search: `?type=edit` });\n   };\n\n   const handleOnClickView = (obj) => {\n      history.push({ pathname: `/sales/${obj._id}`, search: `?type=view` });\n   };\n   const handleOnClickAdd = () => {\n      history.push('/sales/add');\n   };\n\n   const handleOnClickDelete = (id) => {\n      swal({\n         title: 'Are you sure?',\n         text: 'Once deleted, you will not be able to recover it!',\n         icon: 'warning',\n         buttons: true,\n         dangerMode: true,\n      }).then((willDelete) => {\n         if (willDelete) {\n            deleteMutation.mutate(id);\n         }\n      });\n   };\n\n   const alertMarkup = alert.getAlert();\n\n   const handleSort = (key) => {\n      setSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n\n   useEffect(() => {\n      if (page > query.data?.totalPages) {\n         setPage((prev) => prev - 1);\n      }\n   }, [page, query.data?.totalPages]);\n\n   return (\n      <>\n         <PageTItle activeMenu=\"sales\" motherMenu=\"Diamond Tiles\" />\n         <div className=\"row tw-mb-8\">\n            <div className=\"col-xl-6\">\n               <Button variant=\"primary\" icon={AiFillPlusCircle} onClick={handleOnClickAdd}>\n                  Add New Sale\n               </Button>\n            </div>\n\n            <div className=\"col-xl-6\">\n               {/* <ButtonGroup className=\"tw-float-right\">\n                  <input\n                     type=\"text\"\n                     className=\"input-rounded tw-rounded-r-none tw-pl-6\"\n                     placeholder=\"Search Purchase...\"\n                     disabled={deleteMutation.isLoading}\n                     onChange={(e) => setSearch(e.target.value)}\n                  />\n                  <Button variant=\"secondary\" className=\"btn btn-secondary tw-pl-6\" loading={query.isLoading}>\n                     Search\n                  </Button>\n               </ButtonGroup> */}\n            </div>\n         </div>\n         {alertMarkup ? (\n            <Row>\n               <Col lg={12}>{alertMarkup}</Col>\n            </Row>\n         ) : null}\n         <div className=\"row\">\n            <Col lg={12}>\n               <Card>\n                  <When condition={query.isLoading || deleteMutation.isLoading}>\n                     <SpinnerOverlay />\n                  </When>\n                  <Card.Header>\n                     <Card.Title>Manage Sales</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <If condition={query.data?.totalDocs > 0}>\n                        <Then>\n                           <Table className=\"tw-relative\" responsive>\n                              <thead>\n                                 <tr>\n                                    <th className=\"width80\">\n                                       <strong>#</strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('customer')}>\n                                          CUSTOMER\n                                          <span>\n                                             <When condition={sort.field !== 'customer'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'customer' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'customer' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('inventory')}>\n                                          INVENTORY\n                                          <span>\n                                             <When condition={sort.field !== 'inventory'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'inventory' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'inventory' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('quantity')}>\n                                          QUANTITY\n                                          <span>\n                                             <When condition={sort.field !== 'quantity'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'quantity' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'quantity' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('retailPrice')}>\n                                          RETAIL PRICE\n                                          <span>\n                                             <When condition={sort.field !== 'retailPrice'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'retailPrice' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'retailPrice' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                    <th>\n                                       <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('paid')}>\n                                          PAID\n                                          <span>\n                                             <When condition={sort.field !== 'paid'}>\n                                                <FaSort className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'paid' && sort.order === -1}>\n                                                <FaSortDown className=\"d-inline mx-1\" />\n                                             </When>\n                                             <When condition={sort.field === 'paid' && sort.order === 1}>\n                                                <FaSortUp className=\"d-inline mx-1\" />\n                                             </When>\n                                          </span>\n                                       </strong>\n                                    </th>\n                                 </tr>\n                              </thead>\n                              <tbody>\n                                 {query.data &&\n                                    query.data?.docs.map((e, index) => (\n                                       <tr key={`${e._id}`}>\n                                          <td>\n                                             <strong>{query.data.pagingCounter * (index + 1)}</strong>\n                                          </td>\n                                          <td>{e?.customer?.name ?? 'N/A'}</td>\n                                          <td>{e?.inventory?.title ?? 'N/A'}</td>\n                                          <td>{e?.quantity ?? 'N/a'}</td>\n                                          <td>{e?.retailPrice ?? 'N/A'}</td>\n                                          <td>{e?.paid ?? 'N/A'}</td>\n                                          <td>\n                                             <OverlayTrigger\n                                                trigger={['hover', 'hover']}\n                                                placement=\"top\"\n                                                overlay={\n                                                   <Popover className=\"tw-border-gray-500\">\n                                                      <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                         dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                            ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                            : dayjs(e.createdAt).fromNow()\n                                                      }.`}</Popover.Content>\n                                                   </Popover>\n                                                }\n                                             >\n                                                <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                             </OverlayTrigger>\n                                          </td>\n                                          <td>\n                                             <ButtonGroup>\n                                                <Button\n                                                   variant=\"dark\"\n                                                   size=\"sm\"\n                                                   icon={AiFillEye}\n                                                   onClick={() => handleOnClickView(e)}\n                                                >\n                                                   View\n                                                </Button>\n                                                <Button\n                                                   variant=\"warning\"\n                                                   size=\"sm\"\n                                                   icon={AiFillEdit}\n                                                   onClick={() => handleOnClickEdit(e)}\n                                                >\n                                                   Edit\n                                                </Button>\n                                                <Button\n                                                   variant=\"danger\"\n                                                   size=\"sm\"\n                                                   icon={AiFillDelete}\n                                                   onClick={() => handleOnClickDelete(e._id)}\n                                                >\n                                                   Delete\n                                                </Button>\n                                             </ButtonGroup>\n                                          </td>\n                                       </tr>\n                                    ))}\n                              </tbody>\n                           </Table>\n                        </Then>\n                        <Else>\n                           <When condition={!query.isLoading && !debouncedSearchValue}>\n                              <p className=\"tw-m-0\">No sales created</p>\n                           </When>\n                           <When condition={!query.isLoading && debouncedSearchValue}>\n                              <p className=\"tw-m-0\">No result found!</p>\n                           </When>\n                        </Else>\n                     </If>\n                  </Card.Body>\n               </Card>\n            </Col>\n         </div>\n         <When condition={limit > 5 ? true : query.data?.totalPages > 1}>\n            <Pagination\n               page={page}\n               onPageChange={setPage}\n               onLimitChange={setLimit}\n               {..._.omit(query.data, ['docs'])}\n               isLimitDisabled={query.isLoading || deleteMutation.isLoading}\n            />\n         </When>\n      </>\n   );\n};\n\nexport default Sale;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/expenses/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/expenseTypes/index.js",["1154","1155"],"import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useFormik } from 'formik';\nimport Button from 'jsx/components/Button';\nimport ModalWrapper from 'jsx/components/ModalWrapper';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { del, get, post, useAlert, useMutation, useQuery } from 'jsx/helpers';\nimport React, { useState } from 'react';\nimport { ButtonGroup, Card, Col, OverlayTrigger, Popover, Row, Table } from 'react-bootstrap';\nimport { AiFillDelete, AiFillPlusCircle, AiOutlineQuestionCircle } from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\nimport { Else, If, Then, When } from 'react-if';\nimport { useQueryClient } from 'react-query';\nimport swal from 'sweetalert';\n\nconst ExpenseTypes = () => {\n   dayjs.extend(relativeTime);\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [sort, setSort] = useState({ field: null, order: -1 });\n\n   const [showModal, setShowModal] = useState(false);\n\n   const alert = useAlert();\n\n   const queryClient = useQueryClient();\n\n   const query = useQuery(['expenses/types', page, limit, sort.field, sort.order], () =>\n      get('/expenses/types', page, limit, sort.field, sort.order)\n   );\n   const deleteMutation = useMutation((id) => del(`/expenses/types/id/${id}`), {\n      onSuccess: async () => {\n         await queryClient.invalidateQueries('expenses/types');\n         alert.setAlert({\n            message: 'Expense type deleted successfully.',\n            variant: 'success',\n         });\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to delete Expense type.', err });\n      },\n   });\n\n   const postMutation = useMutation((payload) => post('/expenses/types', payload), {\n      onSuccess: () => {\n         setShowModal(false);\n         query.refetch();\n      },\n      onError: (err) => {\n         alert.setErrorAlert({ message: 'Unable to add Expense type.', err });\n      },\n   });\n\n   const formik = useFormik({\n      initialValues: {\n         title: '',\n      },\n      validateOnChange: false,\n      validateOnBlur: false,\n      onSubmit: (values) => {\n         postMutation.mutate(values);\n      },\n   });\n\n   const handleOnClickAdd = () => {\n      setShowModal(true);\n      formik.setFieldValue('title', '');\n   };\n\n   const handleOnClickDelete = (id) => {\n      swal({\n         title: 'Are you sure?',\n         text: 'Once deleted, you will not be able to recover it!',\n         icon: 'warning',\n         buttons: true,\n         dangerMode: true,\n      }).then((willDelete) => {\n         if (willDelete) {\n            deleteMutation.mutate(id);\n         }\n      });\n   };\n\n   const handleSort = (key) => {\n      setSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n   const alertMarkup = alert.getAlert();\n\n   return (\n      <>\n         {alertMarkup ? (\n            <Row>\n               <Col lg={12}>{alertMarkup}</Col>\n            </Row>\n         ) : null}\n         <Card className=\"h-100\">\n            <When condition={query.isLoading || deleteMutation.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <Card.Header>\n               <Card.Title>Manage Types</Card.Title>\n               <Button size=\"sm\" variant=\"primary\" icon={AiFillPlusCircle} onClick={handleOnClickAdd}>\n                  Add New Expense Type\n               </Button>\n            </Card.Header>\n            <Card.Body>\n               <If condition={query.data?.length > 0}>\n                  <Then>\n                     <Table className=\"tw-relative\" responsive>\n                        <thead>\n                           <tr>\n                              <th className=\"width80\">\n                                 <strong>#</strong>\n                              </th>\n                              <th className=\"tw-cursor-pointer\" onClick={() => handleSort('title')}>\n                                 <strong className=\"tw-cursor-pointer\">\n                                    TITLE\n                                    <span>\n                                       <When condition={sort.field !== 'title'}>\n                                          <FaSort className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'title' && sort.order === -1}>\n                                          <FaSortDown className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'title' && sort.order === 1}>\n                                          <FaSortUp className=\"d-inline mx-1\" />\n                                       </When>\n                                    </span>\n                                 </strong>\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {query.data?.map((e, index) => (\n                              <tr key={`${e._id}`}>\n                                 <td>\n                                    <strong>{index + 1}</strong>\n                                 </td>\n                                 <td>{e.title}</td>\n                                 <td>\n                                    <OverlayTrigger\n                                       trigger={['hover', 'hover']}\n                                       placement=\"top\"\n                                       overlay={\n                                          <Popover className=\"tw-border-gray-500\">\n                                             <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                   ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                   : dayjs(e.createdAt).fromNow()\n                                             }.`}</Popover.Content>\n                                          </Popover>\n                                       }\n                                    >\n                                       <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                    </OverlayTrigger>\n                                 </td>\n                                 <td>\n                                    <ButtonGroup>\n                                       <Button\n                                          variant=\"danger\"\n                                          size=\"sm\"\n                                          icon={AiFillDelete}\n                                          onClick={() => handleOnClickDelete(e._id)}\n                                       />\n                                    </ButtonGroup>\n                                 </td>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </Table>\n                  </Then>\n                  <Else>\n                     <When condition={!query.isLoading}>\n                        <p className=\"tw-m-0\">No types found</p>\n                     </When>\n                  </Else>\n               </If>\n            </Card.Body>\n         </Card>\n\n         {/* ADD Modal */}\n         <ModalWrapper\n            show={showModal}\n            onHide={() => {\n               setShowModal(false);\n            }}\n            title=\"Add New Expense Type\"\n            isLoading={query.isLoading || postMutation.isLoading}\n            size=\"md\"\n            onSubmit={formik.handleSubmit}\n            submitButtonText=\"Confirm\"\n         >\n            <form onSubmit={formik.handleSubmit}>\n               <div className=\"row\">\n                  <div className=\"form-group col-xl-6\">\n                     <label className=\"col-form-label\">Title</label>\n                     <input\n                        className=\"form-control\"\n                        onChange={formik.handleChange}\n                        type=\"text\"\n                        name=\"title\"\n                        value={formik.values.title}\n                     />\n                  </div>\n               </div>\n            </form>\n         </ModalWrapper>\n      </>\n   );\n};\n\nexport default React.memo(ExpenseTypes);\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/salaries/index.js",[],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/types/TypeActions.js",["1156","1157","1158","1159","1160","1161","1162","1163"],"import { useDebounce } from 'ahooks';\nimport Button from 'jsx/components/Button';\nimport SpinnerOverlay from 'jsx/components/SpinnerOverlay';\nimport { get, useAlert, useQuery } from 'jsx/helpers';\nimport PageTItle from 'jsx/layouts/PageTitle';\nimport React, { useState, useEffect } from 'react';\nimport { Card, ButtonGroup, Table, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { When, If, Else, Then } from 'react-if';\nimport { useHistory, useParams } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\nimport {\n   AiFillDelete,\n   AiFillEdit,\n   AiFillEye,\n   AiFillPlusCircle,\n   AiOutlineQuestionCircle,\n   AiFillCaretLeft,\n} from 'react-icons/ai';\nimport { FaSort, FaSortDown, FaSortUp } from 'react-icons/fa';\n\nconst TypeActions = () => {\n   dayjs.extend(relativeTime);\n\n   const history = useHistory();\n   const params = useParams();\n   const [page, setPage] = useState(1);\n   const [limit, setLimit] = useState(5);\n   const [sort, setSort] = useState({ field: null, order: -1 });\n   const [search, setSearch] = useState('');\n   const debouncedSearchValue = useDebounce(search, { wait: 500 });\n   const alert = useAlert();\n\n   const query = useQuery(\n      ['type', params.id, page, limit, sort.field, sort.order, debouncedSearchValue],\n      () => get(`/types/id/${params.id}`, page, limit, sort.field, sort.order, debouncedSearchValue),\n      {\n         onError: (err) => {\n            alert.setErrorAlert({\n               message: 'Invalid URL!',\n               err: { message: ['The page will redirect to manage products.'] },\n               callback: () => history.push('/products'),\n               duration: 3000,\n            });\n         },\n      }\n   );\n\n   const handleOnClickEdit = (obj) => {\n      history.push({ pathname: `/products/${obj._id}`, search: `?type=edit` });\n   };\n\n   const handleOnClickView = (obj) => {\n      history.push({ pathname: `/products/${obj._id}`, search: `?type=view` });\n   };\n   const handleOnClickAdd = () => {\n      history.push('/products/add');\n   };\n\n   const handleSort = (key) => {\n      setSort((prev) => ({ field: key, order: prev.order * -1 }));\n   };\n\n   useEffect(() => {\n      if (page > query.data?.totalPages) {\n         setPage((prev) => prev - 1);\n      }\n   }, [page, query.data?.totalPages]);\n   return (\n      <>\n         <div className=\"row p-0 m-0\">\n            <div className=\"col-10\">\n               <PageTItle activeMenu=\"Type\" motherMenu=\"Products\" />\n            </div>\n            <div className=\"col-1\">\n               <Button\n                  icon={AiFillCaretLeft}\n                  variant=\"warning light\"\n                  onClick={() => history.goBack()}\n                  loading={query.isLoading}\n               >\n                  Back\n               </Button>\n            </div>\n         </div>\n         {alert.getAlert()}\n         <div className=\"row mb-3\">\n            <div className=\"col-xl-5 my-2\">\n               <Card className=\"h-100\">\n                  <When condition={query.isLoading}>\n                     <SpinnerOverlay />\n                  </When>\n\n                  <Card.Header>\n                     <Card.Title>View Type</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <div className=\"row\">\n                        <div className=\"form-group col-xl-6\">\n                           <label className=\"col-form-label\">Title</label>\n                           <h4>{query.data?.type?.title ?? 'N/A'}</h4>\n                        </div>\n                     </div>\n                  </Card.Body>\n               </Card>\n            </div>\n            <div className=\"col-xl-7 my-2\">\n               <Card className=\"h-100\">\n                  <When condition={query.isLoading}>\n                     <SpinnerOverlay />\n                  </When>\n\n                  <Card.Header>\n                     <Card.Title>View Units</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                     <Table className=\"tw-relative\" responsive>\n                        <thead>\n                           <tr>\n                              <th className=\"width80\">\n                                 <strong>#</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\">TITLE</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\">VALUE</strong>\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {query.data?.units?.map((e, index) => (\n                              <tr key={`${e._id}`}>\n                                 <td>\n                                    <strong>{index + 1}</strong>\n                                 </td>\n                                 <td>{e.title}</td>\n                                 <td>{e.value}</td>\n                                 <td>\n                                    <OverlayTrigger\n                                       trigger={['hover', 'hover']}\n                                       placement=\"top\"\n                                       overlay={\n                                          <Popover className=\"tw-border-gray-500\">\n                                             <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                   ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                   : dayjs(e.createdAt).fromNow()\n                                             }.`}</Popover.Content>\n                                          </Popover>\n                                       }\n                                    >\n                                       <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                    </OverlayTrigger>\n                                 </td>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </Table>\n                  </Card.Body>\n               </Card>\n            </div>\n         </div>\n\n         {/* VIEW PRODUCTS */}\n         <Card>\n            <When condition={query.isLoading}>\n               <SpinnerOverlay />\n            </When>\n            <Card.Header>\n               <Card.Title>View Products</Card.Title>\n               <ButtonGroup className=\"tw-float-right\">\n                  <input\n                     type=\"text\"\n                     className=\"input-rounded tw-pl-6 tw-shadow-inner tw-ring-1 py-1\"\n                     placeholder=\"Search products...\"\n                     onChange={(e) => setSearch(e.target.value)}\n                  />\n               </ButtonGroup>\n            </Card.Header>\n            <Card.Body>\n               <If condition={query.data?.products?.totalDocs > 0}>\n                  <Then>\n                     <Table className=\"tw-relative\" responsive>\n                        <thead>\n                           <tr>\n                              <th className=\"width80\">\n                                 <strong>#</strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('title')}>\n                                    TITLE\n                                    <span>\n                                       <When condition={sort.field !== 'title'}>\n                                          <FaSort className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'title' && sort.order === -1}>\n                                          <FaSortDown className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'title' && sort.order === 1}>\n                                          <FaSortUp className=\"d-inline mx-1\" />\n                                       </When>\n                                    </span>\n                                 </strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('modelNumber')}>\n                                    MODEL#\n                                    <span>\n                                       <When condition={sort.field !== 'modelNumber'}>\n                                          <FaSort className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'modelNumber' && sort.order === -1}>\n                                          <FaSortDown className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'modelNumber' && sort.order === 1}>\n                                          <FaSortUp className=\"d-inline mx-1\" />\n                                       </When>\n                                    </span>\n                                 </strong>\n                              </th>\n                              <th>\n                                 <strong className=\"tw-cursor-pointer\" onClick={() => handleSort('type')}>\n                                    TYPE\n                                    <span>\n                                       <When condition={sort.field !== 'type'}>\n                                          <FaSort className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'type' && sort.order === -1}>\n                                          <FaSortDown className=\"d-inline mx-1\" />\n                                       </When>\n                                       <When condition={sort.field === 'type' && sort.order === 1}>\n                                          <FaSortUp className=\"d-inline mx-1\" />\n                                       </When>\n                                    </span>\n                                 </strong>\n                              </th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {query.data?.products?.docs.map((e, index) => (\n                              <tr key={`${e._id}`}>\n                                 <td>\n                                    <strong>{query.data?.products?.pagingCounter * (index + 1)}</strong>\n                                 </td>\n                                 <td>{e.title}</td>\n                                 <td>{e.modelNumber}</td>\n                                 <td>{(e.type && e.type?.title) ?? 'N/A'}</td>\n                                 <td>\n                                    <OverlayTrigger\n                                       trigger={['hover', 'hover']}\n                                       placement=\"top\"\n                                       overlay={\n                                          <Popover className=\"tw-border-gray-500\">\n                                             <Popover.Content>{`Created by ${e.createdBy ?? 'N/A'} ${\n                                                dayjs(e.createdAt).diff(dayjs(), 'day', true) > 7\n                                                   ? `at ${dayjs(e.createdAt).format('DD-MMM-YYYY')}`\n                                                   : dayjs(e.createdAt).fromNow()\n                                             }.`}</Popover.Content>\n                                          </Popover>\n                                       }\n                                    >\n                                       <AiOutlineQuestionCircle className=\"tw-cursor-pointer\" />\n                                    </OverlayTrigger>\n                                 </td>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </Table>\n                  </Then>\n                  <Else>\n                     <When condition={!query.isLoading && !debouncedSearchValue}>\n                        <p className=\"tw-m-0\">No products created</p>\n                     </When>\n                     <When condition={!query.isLoading && debouncedSearchValue}>\n                        <p className=\"tw-m-0\">No result found!</p>\n                     </When>\n                  </Else>\n               </If>\n            </Card.Body>\n         </Card>\n      </>\n   );\n};\n\nexport default TypeActions;\n","/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/dashboard/index.js",["1164","1165","1166","1167","1168","1169","1170"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/khaata/index.js",["1171","1172","1173","1174","1175","1176"],"/Users/hussamkhan/Documents/Projects/diamond-tiles-frontend/src/jsx/pages/purchase/PurchaseActions.js",["1177","1178","1179","1180","1181","1182"],{"ruleId":"1183","replacedBy":"1184"},{"ruleId":"1185","replacedBy":"1186"},{"ruleId":"1187","replacedBy":"1188"},{"ruleId":"1189","replacedBy":"1190"},{"ruleId":"1191","replacedBy":"1192"},{"ruleId":"1193","severity":1,"message":"1194","line":11,"column":8,"nodeType":"1195","messageId":"1196","endLine":11,"endColumn":11},{"ruleId":"1193","severity":1,"message":"1197","line":12,"column":8,"nodeType":"1195","messageId":"1196","endLine":12,"endColumn":14},{"ruleId":"1193","severity":1,"message":"1198","line":28,"column":8,"nodeType":"1195","messageId":"1196","endLine":28,"endColumn":12},{"ruleId":"1199","severity":1,"message":"1200","line":205,"column":26,"nodeType":"1201","messageId":"1202","endLine":205,"endColumn":60},{"ruleId":"1193","severity":1,"message":"1203","line":317,"column":22,"nodeType":"1195","messageId":"1196","endLine":317,"endColumn":34},{"ruleId":"1193","severity":1,"message":"1204","line":12,"column":13,"nodeType":"1195","messageId":"1196","endLine":12,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1205","line":13,"column":13,"nodeType":"1195","messageId":"1196","endLine":13,"endColumn":24},{"ruleId":"1193","severity":1,"message":"1206","line":13,"column":13,"nodeType":"1195","messageId":"1196","endLine":13,"endColumn":27},{"ruleId":"1193","severity":1,"message":"1207","line":3,"column":27,"nodeType":"1195","messageId":"1196","endLine":3,"endColumn":35},{"ruleId":"1193","severity":1,"message":"1208","line":34,"column":7,"nodeType":"1195","messageId":"1196","endLine":34,"endColumn":10},{"ruleId":"1209","severity":1,"message":"1210","line":51,"column":28,"nodeType":"1211","endLine":51,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":61,"column":28,"nodeType":"1211","endLine":61,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":71,"column":28,"nodeType":"1211","endLine":71,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":80,"column":28,"nodeType":"1211","endLine":80,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":87,"column":28,"nodeType":"1211","endLine":87,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":94,"column":28,"nodeType":"1211","endLine":94,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":117,"column":28,"nodeType":"1211","endLine":117,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":127,"column":28,"nodeType":"1211","endLine":127,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":137,"column":28,"nodeType":"1211","endLine":137,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":146,"column":28,"nodeType":"1211","endLine":146,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":153,"column":28,"nodeType":"1211","endLine":153,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":160,"column":28,"nodeType":"1211","endLine":160,"endColumn":78},{"ruleId":"1209","severity":1,"message":"1210","line":592,"column":34,"nodeType":"1211","endLine":592,"endColumn":89},{"ruleId":"1209","severity":1,"message":"1210","line":595,"column":34,"nodeType":"1211","endLine":595,"endColumn":94},{"ruleId":"1209","severity":1,"message":"1210","line":629,"column":34,"nodeType":"1211","endLine":629,"endColumn":89},{"ruleId":"1209","severity":1,"message":"1210","line":632,"column":34,"nodeType":"1211","endLine":632,"endColumn":94},{"ruleId":"1209","severity":1,"message":"1210","line":668,"column":34,"nodeType":"1211","endLine":668,"endColumn":89},{"ruleId":"1209","severity":1,"message":"1210","line":671,"column":34,"nodeType":"1211","endLine":671,"endColumn":94},{"ruleId":"1209","severity":1,"message":"1210","line":707,"column":34,"nodeType":"1211","endLine":707,"endColumn":89},{"ruleId":"1209","severity":1,"message":"1210","line":710,"column":34,"nodeType":"1211","endLine":710,"endColumn":94},{"ruleId":"1209","severity":1,"message":"1210","line":744,"column":34,"nodeType":"1211","endLine":744,"endColumn":89},{"ruleId":"1209","severity":1,"message":"1210","line":747,"column":34,"nodeType":"1211","endLine":747,"endColumn":94},{"ruleId":"1209","severity":1,"message":"1210","line":783,"column":34,"nodeType":"1211","endLine":783,"endColumn":89},{"ruleId":"1209","severity":1,"message":"1210","line":786,"column":34,"nodeType":"1211","endLine":786,"endColumn":94},{"ruleId":"1209","severity":1,"message":"1210","line":1525,"column":22,"nodeType":"1211","endLine":1525,"endColumn":92},{"ruleId":"1193","severity":1,"message":"1212","line":9,"column":10,"nodeType":"1195","messageId":"1196","endLine":9,"endColumn":18},{"ruleId":"1193","severity":1,"message":"1213","line":15,"column":19,"nodeType":"1195","messageId":"1196","endLine":15,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1214","line":16,"column":20,"nodeType":"1195","messageId":"1196","endLine":16,"endColumn":30},{"ruleId":"1193","severity":1,"message":"1215","line":23,"column":32,"nodeType":"1195","messageId":"1196","endLine":23,"endColumn":54},{"ruleId":"1209","severity":1,"message":"1210","line":211,"column":28,"nodeType":"1211","endLine":211,"endColumn":40},{"ruleId":"1193","severity":1,"message":"1216","line":4,"column":8,"nodeType":"1195","messageId":"1196","endLine":4,"endColumn":16},{"ruleId":"1209","severity":1,"message":"1210","line":203,"column":34,"nodeType":"1211","endLine":211,"endColumn":35},{"ruleId":"1209","severity":1,"message":"1210","line":219,"column":34,"nodeType":"1211","endLine":224,"endColumn":35},{"ruleId":"1209","severity":1,"message":"1210","line":228,"column":34,"nodeType":"1211","endLine":233,"endColumn":35},{"ruleId":"1209","severity":1,"message":"1210","line":70,"column":34,"nodeType":"1211","endLine":70,"endColumn":63},{"ruleId":"1193","severity":1,"message":"1217","line":26,"column":7,"nodeType":"1195","messageId":"1196","endLine":26,"endColumn":16},{"ruleId":"1209","severity":1,"message":"1210","line":52,"column":19,"nodeType":"1211","endLine":52,"endColumn":59},{"ruleId":"1209","severity":1,"message":"1210","line":260,"column":19,"nodeType":"1211","endLine":260,"endColumn":83},{"ruleId":"1209","severity":1,"message":"1210","line":280,"column":19,"nodeType":"1211","endLine":280,"endColumn":83},{"ruleId":"1193","severity":1,"message":"1218","line":2,"column":65,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":71},{"ruleId":"1209","severity":1,"message":"1210","line":101,"column":28,"nodeType":"1211","endLine":101,"endColumn":73},{"ruleId":"1209","severity":1,"message":"1210","line":104,"column":28,"nodeType":"1211","endLine":104,"endColumn":75},{"ruleId":"1193","severity":1,"message":"1219","line":30,"column":77,"nodeType":"1195","messageId":"1196","endLine":30,"endColumn":78},{"ruleId":"1193","severity":1,"message":"1220","line":4,"column":26,"nodeType":"1195","messageId":"1196","endLine":4,"endColumn":30},{"ruleId":"1209","severity":1,"message":"1210","line":249,"column":31,"nodeType":"1211","endLine":249,"endColumn":43},{"ruleId":"1209","severity":1,"message":"1210","line":257,"column":31,"nodeType":"1211","endLine":257,"endColumn":43},{"ruleId":"1209","severity":1,"message":"1210","line":265,"column":31,"nodeType":"1211","endLine":265,"endColumn":43},{"ruleId":"1209","severity":1,"message":"1210","line":283,"column":31,"nodeType":"1211","endLine":283,"endColumn":43},{"ruleId":"1209","severity":1,"message":"1210","line":291,"column":31,"nodeType":"1211","endLine":291,"endColumn":43},{"ruleId":"1209","severity":1,"message":"1210","line":299,"column":31,"nodeType":"1211","endLine":299,"endColumn":43},{"ruleId":"1221","severity":1,"message":"1222","line":53,"column":22,"nodeType":"1223","messageId":"1224","endLine":53,"endColumn":33},{"ruleId":"1225","severity":1,"message":"1226","line":93,"column":38,"nodeType":"1223","messageId":"1227","endLine":93,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1226","line":93,"column":66,"nodeType":"1223","messageId":"1227","endLine":93,"endColumn":83},{"ruleId":"1193","severity":1,"message":"1228","line":2,"column":10,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":14},{"ruleId":"1193","severity":1,"message":"1229","line":2,"column":20,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":25},{"ruleId":"1209","severity":1,"message":"1210","line":68,"column":37,"nodeType":"1211","endLine":68,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":100,"column":37,"nodeType":"1211","endLine":100,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":130,"column":37,"nodeType":"1211","endLine":130,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":162,"column":37,"nodeType":"1211","endLine":162,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":192,"column":37,"nodeType":"1211","endLine":192,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":222,"column":37,"nodeType":"1211","endLine":222,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":254,"column":37,"nodeType":"1211","endLine":254,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":284,"column":37,"nodeType":"1211","endLine":284,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":314,"column":37,"nodeType":"1211","endLine":314,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":346,"column":37,"nodeType":"1211","endLine":346,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":376,"column":37,"nodeType":"1211","endLine":376,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":408,"column":37,"nodeType":"1211","endLine":408,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":438,"column":37,"nodeType":"1211","endLine":438,"endColumn":49},{"ruleId":"1209","severity":1,"message":"1210","line":468,"column":37,"nodeType":"1211","endLine":468,"endColumn":49},{"ruleId":"1193","severity":1,"message":"1230","line":7,"column":8,"nodeType":"1195","messageId":"1196","endLine":7,"endColumn":16},{"ruleId":"1193","severity":1,"message":"1228","line":2,"column":10,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":14},{"ruleId":"1193","severity":1,"message":"1231","line":16,"column":21,"nodeType":"1195","messageId":"1196","endLine":16,"endColumn":32},{"ruleId":"1193","severity":1,"message":"1232","line":19,"column":21,"nodeType":"1195","messageId":"1196","endLine":19,"endColumn":32},{"ruleId":"1233","severity":1,"message":"1234","line":76,"column":7,"nodeType":"1235","endLine":76,"endColumn":30,"suggestions":"1236"},{"ruleId":"1193","severity":1,"message":"1237","line":5,"column":8,"nodeType":"1195","messageId":"1196","endLine":5,"endColumn":15},{"ruleId":"1193","severity":1,"message":"1207","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1239","line":5,"column":7,"nodeType":"1195","messageId":"1196","endLine":5,"endColumn":23},{"ruleId":"1193","severity":1,"message":"1240","line":4,"column":7,"nodeType":"1195","messageId":"1196","endLine":4,"endColumn":13},{"ruleId":"1193","severity":1,"message":"1241","line":5,"column":7,"nodeType":"1195","messageId":"1196","endLine":5,"endColumn":13},{"ruleId":"1193","severity":1,"message":"1240","line":4,"column":7,"nodeType":"1195","messageId":"1196","endLine":4,"endColumn":13},{"ruleId":"1193","severity":1,"message":"1241","line":5,"column":7,"nodeType":"1195","messageId":"1196","endLine":5,"endColumn":13},{"ruleId":"1193","severity":1,"message":"1242","line":8,"column":42,"nodeType":"1195","messageId":"1196","endLine":8,"endColumn":44},{"ruleId":"1193","severity":1,"message":"1243","line":8,"column":46,"nodeType":"1195","messageId":"1196","endLine":8,"endColumn":53},{"ruleId":"1225","severity":1,"message":"1226","line":33,"column":14,"nodeType":"1223","messageId":"1227","endLine":33,"endColumn":38},{"ruleId":"1225","severity":1,"message":"1226","line":33,"column":59,"nodeType":"1223","messageId":"1227","endLine":33,"endColumn":83},{"ruleId":"1193","severity":1,"message":"1242","line":16,"column":50,"nodeType":"1195","messageId":"1196","endLine":16,"endColumn":52},{"ruleId":"1193","severity":1,"message":"1243","line":16,"column":54,"nodeType":"1195","messageId":"1196","endLine":16,"endColumn":61},{"ruleId":"1193","severity":1,"message":"1244","line":5,"column":26,"nodeType":"1195","messageId":"1196","endLine":5,"endColumn":31},{"ruleId":"1193","severity":1,"message":"1244","line":5,"column":33,"nodeType":"1195","messageId":"1196","endLine":5,"endColumn":38},{"ruleId":"1193","severity":1,"message":"1244","line":5,"column":26,"nodeType":"1195","messageId":"1196","endLine":5,"endColumn":31},{"ruleId":"1221","severity":1,"message":"1222","line":13,"column":7,"nodeType":"1223","messageId":"1224","endLine":13,"endColumn":18},{"ruleId":"1221","severity":1,"message":"1222","line":18,"column":7,"nodeType":"1223","messageId":"1224","endLine":18,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1245","line":5,"column":81,"nodeType":"1223","messageId":"1227","endLine":5,"endColumn":94},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1246","line":2,"column":8,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":16},{"ruleId":"1193","severity":1,"message":"1247","line":10,"column":7,"nodeType":"1195","messageId":"1196","endLine":10,"endColumn":21},{"ruleId":"1193","severity":1,"message":"1248","line":23,"column":7,"nodeType":"1195","messageId":"1196","endLine":23,"endColumn":13},{"ruleId":"1225","severity":1,"message":"1226","line":96,"column":26,"nodeType":"1223","messageId":"1227","endLine":96,"endColumn":43},{"ruleId":"1225","severity":1,"message":"1226","line":127,"column":41,"nodeType":"1223","messageId":"1227","endLine":127,"endColumn":68},{"ruleId":"1225","severity":1,"message":"1226","line":128,"column":39,"nodeType":"1223","messageId":"1227","endLine":128,"endColumn":64},{"ruleId":"1193","severity":1,"message":"1249","line":13,"column":8,"nodeType":"1195","messageId":"1196","endLine":13,"endColumn":13},{"ruleId":"1221","severity":1,"message":"1222","line":67,"column":7,"nodeType":"1223","messageId":"1224","endLine":67,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1245","line":78,"column":17,"nodeType":"1223","messageId":"1227","endLine":78,"endColumn":36},{"ruleId":"1193","severity":1,"message":"1250","line":5,"column":8,"nodeType":"1195","messageId":"1196","endLine":5,"endColumn":24},{"ruleId":"1193","severity":1,"message":"1251","line":9,"column":8,"nodeType":"1195","messageId":"1196","endLine":9,"endColumn":15},{"ruleId":"1193","severity":1,"message":"1252","line":10,"column":8,"nodeType":"1195","messageId":"1196","endLine":10,"endColumn":14},{"ruleId":"1193","severity":1,"message":"1253","line":14,"column":19,"nodeType":"1195","messageId":"1196","endLine":14,"endColumn":25},{"ruleId":"1193","severity":1,"message":"1254","line":14,"column":46,"nodeType":"1195","messageId":"1196","endLine":14,"endColumn":60},{"ruleId":"1193","severity":1,"message":"1255","line":14,"column":62,"nodeType":"1195","messageId":"1196","endLine":14,"endColumn":67},{"ruleId":"1193","severity":1,"message":"1256","line":7,"column":8,"nodeType":"1195","messageId":"1196","endLine":7,"endColumn":12},{"ruleId":"1193","severity":1,"message":"1257","line":8,"column":8,"nodeType":"1195","messageId":"1196","endLine":8,"endColumn":16},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1245","line":50,"column":29,"nodeType":"1223","messageId":"1227","endLine":50,"endColumn":45},{"ruleId":"1225","severity":1,"message":"1245","line":50,"column":51,"nodeType":"1223","messageId":"1227","endLine":50,"endColumn":67},{"ruleId":"1225","severity":1,"message":"1226","line":53,"column":25,"nodeType":"1223","messageId":"1227","endLine":53,"endColumn":43},{"ruleId":"1225","severity":1,"message":"1226","line":54,"column":24,"nodeType":"1223","messageId":"1227","endLine":54,"endColumn":41},{"ruleId":"1225","severity":1,"message":"1245","line":56,"column":24,"nodeType":"1223","messageId":"1227","endLine":56,"endColumn":41},{"ruleId":"1225","severity":1,"message":"1245","line":56,"column":44,"nodeType":"1223","messageId":"1227","endLine":56,"endColumn":61},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1226","line":103,"column":38,"nodeType":"1223","messageId":"1227","endLine":103,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1226","line":103,"column":66,"nodeType":"1223","messageId":"1227","endLine":103,"endColumn":83},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1226","line":71,"column":38,"nodeType":"1223","messageId":"1227","endLine":71,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1226","line":71,"column":66,"nodeType":"1223","messageId":"1227","endLine":71,"endColumn":83},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1226","line":60,"column":38,"nodeType":"1223","messageId":"1227","endLine":60,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1226","line":60,"column":66,"nodeType":"1223","messageId":"1227","endLine":60,"endColumn":83},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1226","line":61,"column":38,"nodeType":"1223","messageId":"1227","endLine":61,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1226","line":61,"column":66,"nodeType":"1223","messageId":"1227","endLine":61,"endColumn":83},{"ruleId":"1225","severity":1,"message":"1245","line":53,"column":21,"nodeType":"1223","messageId":"1227","endLine":53,"endColumn":38},{"ruleId":"1225","severity":1,"message":"1245","line":53,"column":41,"nodeType":"1223","messageId":"1227","endLine":53,"endColumn":58},{"ruleId":"1225","severity":1,"message":"1245","line":54,"column":20,"nodeType":"1223","messageId":"1227","endLine":54,"endColumn":36},{"ruleId":"1225","severity":1,"message":"1245","line":54,"column":39,"nodeType":"1223","messageId":"1227","endLine":54,"endColumn":55},{"ruleId":"1193","severity":1,"message":"1258","line":2,"column":25,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":32},{"ruleId":"1225","severity":1,"message":"1245","line":60,"column":40,"nodeType":"1223","messageId":"1227","endLine":60,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1245","line":60,"column":59,"nodeType":"1223","messageId":"1227","endLine":60,"endColumn":75},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1259","line":4,"column":53,"nodeType":"1195","messageId":"1196","endLine":4,"endColumn":58},{"ruleId":"1225","severity":1,"message":"1226","line":65,"column":38,"nodeType":"1223","messageId":"1227","endLine":65,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1226","line":65,"column":66,"nodeType":"1223","messageId":"1227","endLine":65,"endColumn":83},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1209","severity":1,"message":"1210","line":17,"column":16,"nodeType":"1211","endLine":17,"endColumn":28},{"ruleId":"1209","severity":1,"message":"1210","line":45,"column":16,"nodeType":"1211","endLine":45,"endColumn":28},{"ruleId":"1221","severity":1,"message":"1222","line":15,"column":7,"nodeType":"1223","messageId":"1224","endLine":15,"endColumn":18},{"ruleId":"1193","severity":1,"message":"1260","line":46,"column":7,"nodeType":"1195","messageId":"1196","endLine":46,"endColumn":19},{"ruleId":"1193","severity":1,"message":"1261","line":73,"column":4,"nodeType":"1195","messageId":"1196","endLine":73,"endColumn":15},{"ruleId":"1209","severity":1,"message":"1210","line":8,"column":13,"nodeType":"1211","endLine":8,"endColumn":83},{"ruleId":"1209","severity":1,"message":"1210","line":43,"column":16,"nodeType":"1211","endLine":43,"endColumn":108},{"ruleId":"1193","severity":1,"message":"1262","line":14,"column":31,"nodeType":"1195","messageId":"1196","endLine":14,"endColumn":36},{"ruleId":"1193","severity":1,"message":"1262","line":18,"column":21,"nodeType":"1195","messageId":"1196","endLine":18,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1263","line":3,"column":10,"nodeType":"1195","messageId":"1196","endLine":3,"endColumn":14},{"ruleId":"1209","severity":1,"message":"1210","line":7,"column":13,"nodeType":"1211","endLine":7,"endColumn":25},{"ruleId":"1209","severity":1,"message":"1210","line":28,"column":13,"nodeType":"1211","endLine":28,"endColumn":25},{"ruleId":"1209","severity":1,"message":"1210","line":7,"column":13,"nodeType":"1211","endLine":7,"endColumn":25},{"ruleId":"1209","severity":1,"message":"1210","line":35,"column":13,"nodeType":"1211","endLine":35,"endColumn":25},{"ruleId":"1209","severity":1,"message":"1210","line":73,"column":25,"nodeType":"1211","endLine":73,"endColumn":83},{"ruleId":"1209","severity":1,"message":"1210","line":76,"column":25,"nodeType":"1211","endLine":76,"endColumn":77},{"ruleId":"1209","severity":1,"message":"1210","line":89,"column":25,"nodeType":"1211","endLine":89,"endColumn":83},{"ruleId":"1209","severity":1,"message":"1210","line":92,"column":25,"nodeType":"1211","endLine":92,"endColumn":77},{"ruleId":"1209","severity":1,"message":"1210","line":105,"column":25,"nodeType":"1211","endLine":105,"endColumn":83},{"ruleId":"1209","severity":1,"message":"1210","line":108,"column":25,"nodeType":"1211","endLine":108,"endColumn":77},{"ruleId":"1209","severity":1,"message":"1210","line":121,"column":25,"nodeType":"1211","endLine":121,"endColumn":83},{"ruleId":"1209","severity":1,"message":"1210","line":124,"column":25,"nodeType":"1211","endLine":124,"endColumn":77},{"ruleId":"1193","severity":1,"message":"1264","line":16,"column":11,"nodeType":"1195","messageId":"1196","endLine":16,"endColumn":15},{"ruleId":"1193","severity":1,"message":"1264","line":16,"column":11,"nodeType":"1195","messageId":"1196","endLine":16,"endColumn":15},{"ruleId":"1193","severity":1,"message":"1264","line":15,"column":11,"nodeType":"1195","messageId":"1196","endLine":15,"endColumn":15},{"ruleId":"1193","severity":1,"message":"1264","line":15,"column":11,"nodeType":"1195","messageId":"1196","endLine":15,"endColumn":15},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1226","line":144,"column":38,"nodeType":"1223","messageId":"1227","endLine":144,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1226","line":144,"column":66,"nodeType":"1223","messageId":"1227","endLine":144,"endColumn":83},{"ruleId":"1225","severity":1,"message":"1245","line":31,"column":32,"nodeType":"1223","messageId":"1227","endLine":31,"endColumn":54},{"ruleId":"1225","severity":1,"message":"1245","line":31,"column":57,"nodeType":"1223","messageId":"1227","endLine":31,"endColumn":79},{"ruleId":"1225","severity":1,"message":"1226","line":73,"column":25,"nodeType":"1223","messageId":"1227","endLine":73,"endColumn":43},{"ruleId":"1225","severity":1,"message":"1226","line":74,"column":24,"nodeType":"1223","messageId":"1227","endLine":74,"endColumn":41},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1226","line":64,"column":38,"nodeType":"1223","messageId":"1227","endLine":64,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1226","line":64,"column":66,"nodeType":"1223","messageId":"1227","endLine":64,"endColumn":83},{"ruleId":"1193","severity":1,"message":"1238","line":1,"column":17,"nodeType":"1195","messageId":"1196","endLine":1,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1226","line":60,"column":38,"nodeType":"1223","messageId":"1227","endLine":60,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1226","line":60,"column":66,"nodeType":"1223","messageId":"1227","endLine":60,"endColumn":83},{"ruleId":"1193","severity":1,"message":"1239","line":5,"column":7,"nodeType":"1195","messageId":"1196","endLine":5,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1245","line":12,"column":29,"nodeType":"1223","messageId":"1227","endLine":12,"endColumn":45},{"ruleId":"1225","severity":1,"message":"1245","line":12,"column":48,"nodeType":"1223","messageId":"1227","endLine":12,"endColumn":64},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":33,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":49},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":52,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":68},{"ruleId":"1225","severity":1,"message":"1245","line":58,"column":38,"nodeType":"1223","messageId":"1227","endLine":58,"endColumn":55},{"ruleId":"1225","severity":1,"message":"1245","line":58,"column":58,"nodeType":"1223","messageId":"1227","endLine":58,"endColumn":75},{"ruleId":"1225","severity":1,"message":"1245","line":12,"column":29,"nodeType":"1223","messageId":"1227","endLine":12,"endColumn":45},{"ruleId":"1225","severity":1,"message":"1245","line":12,"column":48,"nodeType":"1223","messageId":"1227","endLine":12,"endColumn":64},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":33,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":49},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":52,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":68},{"ruleId":"1225","severity":1,"message":"1245","line":13,"column":29,"nodeType":"1223","messageId":"1227","endLine":13,"endColumn":45},{"ruleId":"1225","severity":1,"message":"1245","line":13,"column":48,"nodeType":"1223","messageId":"1227","endLine":13,"endColumn":64},{"ruleId":"1225","severity":1,"message":"1245","line":15,"column":29,"nodeType":"1223","messageId":"1227","endLine":15,"endColumn":45},{"ruleId":"1225","severity":1,"message":"1245","line":15,"column":48,"nodeType":"1223","messageId":"1227","endLine":15,"endColumn":64},{"ruleId":"1225","severity":1,"message":"1245","line":17,"column":28,"nodeType":"1223","messageId":"1227","endLine":17,"endColumn":44},{"ruleId":"1225","severity":1,"message":"1245","line":17,"column":47,"nodeType":"1223","messageId":"1227","endLine":17,"endColumn":63},{"ruleId":"1225","severity":1,"message":"1245","line":18,"column":34,"nodeType":"1223","messageId":"1227","endLine":18,"endColumn":50},{"ruleId":"1225","severity":1,"message":"1245","line":18,"column":53,"nodeType":"1223","messageId":"1227","endLine":18,"endColumn":69},{"ruleId":"1225","severity":1,"message":"1245","line":19,"column":38,"nodeType":"1223","messageId":"1227","endLine":19,"endColumn":54},{"ruleId":"1225","severity":1,"message":"1245","line":19,"column":57,"nodeType":"1223","messageId":"1227","endLine":19,"endColumn":73},{"ruleId":"1225","severity":1,"message":"1245","line":22,"column":39,"nodeType":"1223","messageId":"1227","endLine":22,"endColumn":55},{"ruleId":"1225","severity":1,"message":"1245","line":22,"column":58,"nodeType":"1223","messageId":"1227","endLine":22,"endColumn":74},{"ruleId":"1225","severity":1,"message":"1245","line":78,"column":57,"nodeType":"1223","messageId":"1227","endLine":78,"endColumn":74},{"ruleId":"1225","severity":1,"message":"1245","line":78,"column":77,"nodeType":"1223","messageId":"1227","endLine":78,"endColumn":94},{"ruleId":"1225","severity":1,"message":"1245","line":13,"column":33,"nodeType":"1223","messageId":"1227","endLine":13,"endColumn":49},{"ruleId":"1225","severity":1,"message":"1245","line":13,"column":52,"nodeType":"1223","messageId":"1227","endLine":13,"endColumn":68},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":29,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":51},{"ruleId":"1225","severity":1,"message":"1245","line":15,"column":21,"nodeType":"1223","messageId":"1227","endLine":15,"endColumn":43},{"ruleId":"1225","severity":1,"message":"1245","line":16,"column":21,"nodeType":"1223","messageId":"1227","endLine":16,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":17,"column":21,"nodeType":"1223","messageId":"1227","endLine":17,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":19,"column":29,"nodeType":"1223","messageId":"1227","endLine":19,"endColumn":51},{"ruleId":"1225","severity":1,"message":"1245","line":20,"column":21,"nodeType":"1223","messageId":"1227","endLine":20,"endColumn":43},{"ruleId":"1225","severity":1,"message":"1245","line":21,"column":21,"nodeType":"1223","messageId":"1227","endLine":21,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":22,"column":21,"nodeType":"1223","messageId":"1227","endLine":22,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":25,"column":28,"nodeType":"1223","messageId":"1227","endLine":25,"endColumn":50},{"ruleId":"1225","severity":1,"message":"1245","line":26,"column":21,"nodeType":"1223","messageId":"1227","endLine":26,"endColumn":43},{"ruleId":"1225","severity":1,"message":"1245","line":27,"column":21,"nodeType":"1223","messageId":"1227","endLine":27,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":28,"column":21,"nodeType":"1223","messageId":"1227","endLine":28,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":30,"column":34,"nodeType":"1223","messageId":"1227","endLine":30,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1245","line":31,"column":21,"nodeType":"1223","messageId":"1227","endLine":31,"endColumn":43},{"ruleId":"1225","severity":1,"message":"1245","line":32,"column":21,"nodeType":"1223","messageId":"1227","endLine":32,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":33,"column":21,"nodeType":"1223","messageId":"1227","endLine":33,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":35,"column":38,"nodeType":"1223","messageId":"1227","endLine":35,"endColumn":60},{"ruleId":"1225","severity":1,"message":"1245","line":36,"column":21,"nodeType":"1223","messageId":"1227","endLine":36,"endColumn":43},{"ruleId":"1225","severity":1,"message":"1245","line":37,"column":21,"nodeType":"1223","messageId":"1227","endLine":37,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":38,"column":21,"nodeType":"1223","messageId":"1227","endLine":38,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":43,"column":39,"nodeType":"1223","messageId":"1227","endLine":43,"endColumn":55},{"ruleId":"1225","severity":1,"message":"1245","line":43,"column":58,"nodeType":"1223","messageId":"1227","endLine":43,"endColumn":74},{"ruleId":"1225","severity":1,"message":"1245","line":99,"column":57,"nodeType":"1223","messageId":"1227","endLine":99,"endColumn":74},{"ruleId":"1225","severity":1,"message":"1245","line":99,"column":77,"nodeType":"1223","messageId":"1227","endLine":99,"endColumn":94},{"ruleId":"1225","severity":1,"message":"1245","line":13,"column":33,"nodeType":"1223","messageId":"1227","endLine":13,"endColumn":49},{"ruleId":"1225","severity":1,"message":"1245","line":13,"column":52,"nodeType":"1223","messageId":"1227","endLine":13,"endColumn":68},{"ruleId":"1225","severity":1,"message":"1245","line":13,"column":71,"nodeType":"1223","messageId":"1227","endLine":13,"endColumn":87},{"ruleId":"1225","severity":1,"message":"1245","line":13,"column":90,"nodeType":"1223","messageId":"1227","endLine":13,"endColumn":106},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":29,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":45},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":48,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":64},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":67,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":83},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":86,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":102},{"ruleId":"1225","severity":1,"message":"1245","line":16,"column":29,"nodeType":"1223","messageId":"1227","endLine":16,"endColumn":45},{"ruleId":"1225","severity":1,"message":"1245","line":16,"column":48,"nodeType":"1223","messageId":"1227","endLine":16,"endColumn":64},{"ruleId":"1225","severity":1,"message":"1245","line":20,"column":38,"nodeType":"1223","messageId":"1227","endLine":20,"endColumn":54},{"ruleId":"1225","severity":1,"message":"1245","line":20,"column":57,"nodeType":"1223","messageId":"1227","endLine":20,"endColumn":73},{"ruleId":"1225","severity":1,"message":"1245","line":24,"column":39,"nodeType":"1223","messageId":"1227","endLine":24,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1245","line":25,"column":21,"nodeType":"1223","messageId":"1227","endLine":25,"endColumn":38},{"ruleId":"1225","severity":1,"message":"1245","line":26,"column":21,"nodeType":"1223","messageId":"1227","endLine":26,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":27,"column":21,"nodeType":"1223","messageId":"1227","endLine":27,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1245","line":78,"column":58,"nodeType":"1223","messageId":"1227","endLine":78,"endColumn":75},{"ruleId":"1225","severity":1,"message":"1245","line":78,"column":78,"nodeType":"1223","messageId":"1227","endLine":78,"endColumn":95},{"ruleId":"1193","severity":1,"message":"1265","line":2,"column":10,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":14},{"ruleId":"1193","severity":1,"message":"1266","line":2,"column":21,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":34},{"ruleId":"1193","severity":1,"message":"1267","line":2,"column":36,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":41},{"ruleId":"1193","severity":1,"message":"1268","line":2,"column":43,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":46},{"ruleId":"1193","severity":1,"message":"1269","line":2,"column":48,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":53},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":33,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":49},{"ruleId":"1225","severity":1,"message":"1245","line":14,"column":52,"nodeType":"1223","messageId":"1227","endLine":14,"endColumn":68},{"ruleId":"1225","severity":1,"message":"1245","line":30,"column":18,"nodeType":"1223","messageId":"1227","endLine":30,"endColumn":34},{"ruleId":"1225","severity":1,"message":"1245","line":65,"column":23,"nodeType":"1223","messageId":"1227","endLine":65,"endColumn":39},{"ruleId":"1225","severity":1,"message":"1245","line":65,"column":42,"nodeType":"1223","messageId":"1227","endLine":65,"endColumn":58},{"ruleId":"1225","severity":1,"message":"1245","line":66,"column":24,"nodeType":"1223","messageId":"1227","endLine":66,"endColumn":41},{"ruleId":"1225","severity":1,"message":"1245","line":66,"column":44,"nodeType":"1223","messageId":"1227","endLine":66,"endColumn":61},{"ruleId":"1193","severity":1,"message":"1232","line":18,"column":21,"nodeType":"1195","messageId":"1196","endLine":18,"endColumn":32},{"ruleId":"1233","severity":1,"message":"1234","line":80,"column":7,"nodeType":"1235","endLine":80,"endColumn":30,"suggestions":"1270"},{"ruleId":"1193","severity":1,"message":"1271","line":16,"column":21,"nodeType":"1195","messageId":"1196","endLine":16,"endColumn":32},{"ruleId":"1193","severity":1,"message":"1232","line":19,"column":21,"nodeType":"1195","messageId":"1196","endLine":19,"endColumn":32},{"ruleId":"1233","severity":1,"message":"1234","line":85,"column":7,"nodeType":"1235","endLine":85,"endColumn":30,"suggestions":"1272"},{"ruleId":"1193","severity":1,"message":"1273","line":14,"column":27,"nodeType":"1195","messageId":"1196","endLine":14,"endColumn":36},{"ruleId":"1193","severity":1,"message":"1274","line":27,"column":21,"nodeType":"1195","messageId":"1196","endLine":27,"endColumn":32},{"ruleId":"1193","severity":1,"message":"1275","line":28,"column":22,"nodeType":"1195","messageId":"1196","endLine":28,"endColumn":34},{"ruleId":"1193","severity":1,"message":"1276","line":29,"column":21,"nodeType":"1195","messageId":"1196","endLine":29,"endColumn":32},{"ruleId":"1193","severity":1,"message":"1232","line":34,"column":21,"nodeType":"1195","messageId":"1196","endLine":34,"endColumn":32},{"ruleId":"1233","severity":1,"message":"1234","line":130,"column":7,"nodeType":"1235","endLine":130,"endColumn":39,"suggestions":"1277"},{"ruleId":"1193","severity":1,"message":"1278","line":21,"column":17,"nodeType":"1195","messageId":"1196","endLine":21,"endColumn":24},{"ruleId":"1193","severity":1,"message":"1279","line":22,"column":18,"nodeType":"1195","messageId":"1196","endLine":22,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1280","line":23,"column":19,"nodeType":"1195","messageId":"1196","endLine":23,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1281","line":8,"column":8,"nodeType":"1195","messageId":"1196","endLine":8,"endColumn":17},{"ruleId":"1193","severity":1,"message":"1282","line":9,"column":17,"nodeType":"1195","messageId":"1196","endLine":9,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1278","line":22,"column":17,"nodeType":"1195","messageId":"1196","endLine":22,"endColumn":24},{"ruleId":"1193","severity":1,"message":"1279","line":23,"column":18,"nodeType":"1195","messageId":"1196","endLine":23,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1280","line":25,"column":19,"nodeType":"1195","messageId":"1196","endLine":25,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1283","line":28,"column":11,"nodeType":"1195","messageId":"1196","endLine":28,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1284","line":28,"column":24,"nodeType":"1195","messageId":"1196","endLine":28,"endColumn":38},{"ruleId":"1193","severity":1,"message":"1285","line":65,"column":10,"nodeType":"1195","messageId":"1196","endLine":65,"endColumn":15},{"ruleId":"1193","severity":1,"message":"1262","line":14,"column":31,"nodeType":"1195","messageId":"1196","endLine":14,"endColumn":36},{"ruleId":"1193","severity":1,"message":"1262","line":18,"column":21,"nodeType":"1195","messageId":"1196","endLine":18,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1280","line":25,"column":19,"nodeType":"1195","messageId":"1196","endLine":25,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1278","line":18,"column":17,"nodeType":"1195","messageId":"1196","endLine":18,"endColumn":24},{"ruleId":"1193","severity":1,"message":"1279","line":19,"column":18,"nodeType":"1195","messageId":"1196","endLine":19,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1286","line":14,"column":4,"nodeType":"1195","messageId":"1196","endLine":14,"endColumn":16},{"ruleId":"1193","severity":1,"message":"1287","line":15,"column":4,"nodeType":"1195","messageId":"1196","endLine":15,"endColumn":14},{"ruleId":"1193","severity":1,"message":"1273","line":16,"column":4,"nodeType":"1195","messageId":"1196","endLine":16,"endColumn":13},{"ruleId":"1193","severity":1,"message":"1288","line":17,"column":4,"nodeType":"1195","messageId":"1196","endLine":17,"endColumn":20},{"ruleId":"1193","severity":1,"message":"1279","line":29,"column":18,"nodeType":"1195","messageId":"1196","endLine":29,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1289","line":50,"column":10,"nodeType":"1195","messageId":"1196","endLine":50,"endColumn":27},{"ruleId":"1193","severity":1,"message":"1290","line":54,"column":10,"nodeType":"1195","messageId":"1196","endLine":54,"endColumn":27},{"ruleId":"1193","severity":1,"message":"1291","line":57,"column":10,"nodeType":"1195","messageId":"1196","endLine":57,"endColumn":26},{"ruleId":"1193","severity":1,"message":"1228","line":2,"column":10,"nodeType":"1195","messageId":"1196","endLine":2,"endColumn":14},{"ruleId":"1193","severity":1,"message":"1292","line":4,"column":10,"nodeType":"1195","messageId":"1196","endLine":4,"endColumn":15},{"ruleId":"1193","severity":1,"message":"1293","line":12,"column":7,"nodeType":"1195","messageId":"1196","endLine":12,"endColumn":15},{"ruleId":"1193","severity":1,"message":"1294","line":13,"column":7,"nodeType":"1195","messageId":"1196","endLine":13,"endColumn":16},{"ruleId":"1193","severity":1,"message":"1295","line":14,"column":7,"nodeType":"1195","messageId":"1196","endLine":14,"endColumn":14},{"ruleId":"1193","severity":1,"message":"1296","line":17,"column":11,"nodeType":"1195","messageId":"1196","endLine":17,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1297","line":17,"column":24,"nodeType":"1195","messageId":"1196","endLine":17,"endColumn":38},{"ruleId":"1193","severity":1,"message":"1298","line":11,"column":10,"nodeType":"1195","messageId":"1196","endLine":11,"endColumn":21},{"ruleId":"1193","severity":1,"message":"1286","line":12,"column":10,"nodeType":"1195","messageId":"1196","endLine":12,"endColumn":22},{"ruleId":"1193","severity":1,"message":"1287","line":12,"column":24,"nodeType":"1195","messageId":"1196","endLine":12,"endColumn":34},{"ruleId":"1193","severity":1,"message":"1288","line":12,"column":47,"nodeType":"1195","messageId":"1196","endLine":12,"endColumn":63},{"ruleId":"1193","severity":1,"message":"1280","line":24,"column":19,"nodeType":"1195","messageId":"1196","endLine":24,"endColumn":28},{"ruleId":"1193","severity":1,"message":"1299","line":28,"column":10,"nodeType":"1195","messageId":"1196","endLine":28,"endColumn":21},{"ruleId":"1193","severity":1,"message":"1300","line":10,"column":10,"nodeType":"1195","messageId":"1196","endLine":10,"endColumn":23},{"ruleId":"1193","severity":1,"message":"1301","line":10,"column":40,"nodeType":"1195","messageId":"1196","endLine":10,"endColumn":46},{"ruleId":"1193","severity":1,"message":"1271","line":18,"column":21,"nodeType":"1195","messageId":"1196","endLine":18,"endColumn":32},{"ruleId":"1193","severity":1,"message":"1232","line":21,"column":21,"nodeType":"1195","messageId":"1196","endLine":21,"endColumn":32},{"ruleId":"1233","severity":1,"message":"1234","line":98,"column":7,"nodeType":"1235","endLine":98,"endColumn":30,"suggestions":"1302"},{"ruleId":"1193","severity":1,"message":"1303","line":129,"column":67,"nodeType":"1195","messageId":"1196","endLine":129,"endColumn":72},"lines-around-directive",["1304"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'Home' is defined but never used.","react/display-name","Component definition is missing display name","ArrowFunctionExpression","noDisplayName","'getComponent' is assigned a value but never used.","'unlock' is assigned a value but never used.","'submitLogin' is assigned a value but never used.","'submitRegister' is assigned a value but never used.","'Suspense' is defined but never used.","'Ext' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Dropdown' is defined but never used.","'setSquare' is assigned a value but never used.","'setRounded' is assigned a value but never used.","'setInlineNotifications' is assigned a value but never used.","'JobieNav' is defined but never used.","'carousel4' is assigned a value but never used.","'Button' is defined but never used.","'i' is defined but never used. Allowed unused args must match /res|next|^err/u.","'Tabs' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","react/destructuring-assignment","Must use destructuring state assignment","useDestructAssignment","'Link' is defined but never used.","'Table' is defined but never used.","'loadable' is defined but never used.","'setCustomer' is assigned a value but never used.","'setUrlState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.","ArrayExpression",["1305"],"'ChatBox' is defined but never used.","'Component' is defined but never used.","'createReactClass' is assigned a value but never used.","'COLORS' is assigned a value but never used.","'colors' is assigned a value but never used.","'un' is defined but never used. Allowed unused args must match /res|next|^err/u.","'percent' is defined but never used. Allowed unused args must match /res|next|^err/u.","'props' is defined but never used. Allowed unused args must match /res|next|^err/u.","Must use destructuring props assignment","'ReactDOM' is defined but never used.","'calendarEvents' is assigned a value but never used.","'events' is assigned a value but never used.","'drump' is defined but never used.","'PerfectScrollbar' is defined but never used.","'profile' is defined but never used.","'avatar' is defined but never used.","'onNote' is defined but never used. Allowed unused args must match /res|next|^err/u.","'onNotification' is defined but never used. Allowed unused args must match /res|next|^err/u.","'onBox' is defined but never used. Allowed unused args must match /res|next|^err/u.","'logo' is defined but never used.","'logoText' is defined but never used.","'Tooltip' is defined but never used.","'width' is defined but never used. Allowed unused args must match /res|next|^err/u.","'EllipsisPage' is assigned a value but never used.","'hasPrevPage' is defined but never used. Allowed unused args must match /res|next|^err/u.","'state' is defined but never used. Allowed unused args must match /res|next|^err/u.","'When' is defined but never used.","'demo' is assigned a value but never used.","'Line' is defined but never used.","'HorizontalBar' is defined but never used.","'Radar' is defined but never used.","'Pie' is defined but never used.","'Polar' is defined but never used.",["1306"],"'setEmployee' is assigned a value but never used.",["1307"],"'AiFillEye' is defined but never used.","'setSalePage' is assigned a value but never used.","'setSaleLimit' is assigned a value but never used.","'setSaleSort' is assigned a value but never used.",["1308"],"'setPage' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'PageTItle' is defined but never used.","'useEffect' is defined but never used.","'selectedRow' is assigned a value but never used.","'setSelectedRow' is assigned a value but never used.","'isAdd' is assigned a value but never used.","'AiFillDelete' is defined but never used.","'AiFillEdit' is defined but never used.","'AiFillPlusCircle' is defined but never used.","'handleOnClickEdit' is assigned a value but never used.","'handleOnClickView' is assigned a value but never used.","'handleOnClickAdd' is assigned a value but never used.","'FaEye' is defined but never used.","'ApexLine' is assigned a value but never used.","'ApexLine2' is assigned a value but never used.","'ApexPie' is assigned a value but never used.","'activeModal' is assigned a value but never used.","'setActiveModal' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'queryClient' is assigned a value but never used.","'FaAddressBook' is defined but never used.","'FaPlus' is defined but never used.",["1309"],"'value' is defined but never used. Allowed unused args must match /res|next|^err/u.","padding-line-between-statements",{"desc":"1310","fix":"1311"},{"desc":"1310","fix":"1312"},{"desc":"1310","fix":"1313"},{"desc":"1314","fix":"1315"},{"desc":"1310","fix":"1316"},"Update the dependencies array to be: [formik, isEditing, query.data]",{"range":"1317","text":"1318"},{"range":"1319","text":"1318"},{"range":"1320","text":"1318"},"Update the dependencies array to be: [formik, isEditing, query.data?.product]",{"range":"1321","text":"1322"},{"range":"1323","text":"1318"},[2797,2820],"[formik, isEditing, query.data]",[2783,2806],[3205,3228],[4817,4849],"[formik, isEditing, query.data?.product]",[3708,3731]]